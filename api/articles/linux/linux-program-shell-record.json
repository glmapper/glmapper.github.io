{"title":"linux shell 编程小记","uid":"e6e9029e4c940952840addd5ca00ccc2","slug":"linux/linux-program-shell-record","date":"2019-04-20T10:18:42.000Z","updated":"2024-07-05T04:09:05.776Z","comments":true,"path":"api/articles/linux/linux-program-shell-record.json","keywords":"宋国磊, glmapper, 卫恒, 分享, 开源","cover":null,"content":"<h2 id=\"if-条件-OPTION\"><a href=\"#if-条件-OPTION\" class=\"headerlink\" title=\"if 条件 OPTION\"></a>if 条件 OPTION</h2><table>\n<thead>\n<tr>\n<th>OPTION</th>\n<th>解释</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>[-a file]</td>\n<td>如果file存在则为真 ，也可以表示为 and: 条件与<br />if [ -z “condition1” -a -z “condition2” ]</td>\n</tr>\n<tr>\n<td>[-b file]</td>\n<td>如果file存在且是一个<strong>块</strong>特殊文件则为真</td>\n</tr>\n<tr>\n<td>[-c file]</td>\n<td>如果file存在且是一个<strong>字</strong>特殊文件则为真</td>\n</tr>\n<tr>\n<td>[-d file]</td>\n<td>如果 file 文件存在且是一个目录则为真，d前的!是逻辑非 <br />#表示目录不存在，则执行后面的 then 操作 <br />if [ ! -d lcd_path&#x2F;par_date ]</td>\n</tr>\n<tr>\n<td>[-e file]</td>\n<td>如果 file文件存在则为真</td>\n</tr>\n<tr>\n<td>[-f file]</td>\n<td>如果 file 存在且是一个普通文件则为真</td>\n</tr>\n<tr>\n<td>[-g file]</td>\n<td>如果 file 存在且已经设置了SGID则为真（SUID 是 Set User ID, SGID 是 Set Group ID的意思）</td>\n</tr>\n<tr>\n<td>[-h file]</td>\n<td>如果 file 存在且是一个符号连接则为真</td>\n</tr>\n<tr>\n<td>[-k file]</td>\n<td>如果 file 存在且已经设置粘制位则为真</td>\n</tr>\n<tr>\n<td>[-p file]</td>\n<td>如果file存在且是一个名字管道（F如果O）则为真。管道是linux里面进程间通信的一种方式，<br />其他的还有像信号（signal）、信号量、消息队列、共享内存、套接字（socket）等</td>\n</tr>\n<tr>\n<td>[-r file]</td>\n<td>如果file存在且是可读的则为真</td>\n</tr>\n<tr>\n<td>[-s file]</td>\n<td>如果file存在且大小不为0则为真</td>\n</tr>\n<tr>\n<td>[-t FD]</td>\n<td>如果文件描述符FD打开且指向一个终端则为真</td>\n</tr>\n<tr>\n<td>[-u file]</td>\n<td>如果file存在且设置了SUID（set userID）则为真</td>\n</tr>\n<tr>\n<td>[-w file</td>\n<td>如果file存在且是可写的则为真</td>\n</tr>\n<tr>\n<td>[-x file]</td>\n<td>如果file存在且是可执行的则为真</td>\n</tr>\n<tr>\n<td>[-O file]</td>\n<td>如果file存在且属有效用户ID则为真</td>\n</tr>\n<tr>\n<td>[-G file]</td>\n<td>如果file存在且属有效用户组则为真</td>\n</tr>\n<tr>\n<td>[-L file]</td>\n<td>如果file存在且是一个符号连接则为真</td>\n</tr>\n<tr>\n<td>[-N file]</td>\n<td>如果file存在and has been mod如果ied since it was last read则为真</td>\n</tr>\n<tr>\n<td>[-S file]</td>\n<td>如果file存在且是一个套接字则为真</td>\n</tr>\n<tr>\n<td>[-o optionname]</td>\n<td>如果shell选项“optionname”开启则为真</td>\n</tr>\n<tr>\n<td>[-z string]</td>\n<td>“string”的长度为零则为真</td>\n</tr>\n<tr>\n<td>[-n string] or [string]</td>\n<td>“string”的长度为非零non-zero则为真</td>\n</tr>\n</tbody></table>\n<span id=\"more\"></span>\n\n<h2 id=\"if-基本判断\"><a href=\"#if-基本判断\" class=\"headerlink\" title=\"if 基本判断\"></a>if 基本判断</h2><ul>\n<li>[file1 –nt file2] 如果file1 has been changed more recently than file2或者file1 exists and file2 does not则为真 </li>\n<li>[file1 –ot file2] 如果file1比file2要老，或者file2存在且file1不存在则为真 </li>\n<li>[file1 –ef file2] 如果file1和file2指向相同的设备和节点号则为真 </li>\n<li>[sting1&#x3D;&#x3D;string2] 如果2个字符串相同。“&#x3D;”may be used instead of “&#x3D;&#x3D;”for strict posix compliance则为真 </li>\n<li>[string1!&#x3D;string2] 如果字符串不相等则为真 </li>\n<li>[string1&lt;string2] 如果“string1”sorts before“string2”lexicographically in the current locale则为真 </li>\n<li>[arg1 OP arg2]  “OP”is one of –eq,-ne,-lt,-le,-gt or –ge</li>\n</ul>\n<h2 id=\"截取字符串\"><a href=\"#截取字符串\" class=\"headerlink\" title=\"截取字符串\"></a>截取字符串</h2><ul>\n<li><strong># 号截取，删除左边字符，保留右边字符。 （非贪婪匹配）</strong></li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var=http://www.glmapper.com</span><br><span class=\"line\"><span class=\"comment\"># # 号是运算符，*/ 表示从左边开始删除第一个 / 号及左边的所有字符,即删除 http://</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$&#123;var#*//&#125;</span></span><br><span class=\"line\"><span class=\"comment\">#结果 www.glmapper.com</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><strong>## 号截取，删除左边字符，保留右边字符。</strong>（贪婪匹配）****</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var=http://www.glmapper.com</span><br><span class=\"line\"><span class=\"comment\"># ##*/ 表示从左边开始删除最后（最右边）一个 / 号及左边的所有字符</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$&#123;var##*//&#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 结果 www.glmapper.com</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><strong>%号截取，删除右边字符，保留左边字符 <strong>（非贪婪匹配）</strong></strong></li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var=http://www.glmapper.com</span><br><span class=\"line\"><span class=\"comment\"># %/* 表示从右边开始，删除第一个 / 号及右边的字符</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$&#123;var%/*&#125;</span></span><br><span class=\"line\"><span class=\"comment\"># 结果是：http:/</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><strong>%% 号截取，删除右边字符，保留左边字符  <strong>（贪婪匹配）</strong></strong></li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var=http://www.glmapper.com</span><br><span class=\"line\"><span class=\"comment\"># %%/* 表示从右边开始，删除最后（最左边）一个 / 号及右边的字符</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$&#123;var%%/*&#125;</span></span><br><span class=\"line\"><span class=\"comment\"># 结果 ：http: </span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><strong>从左边第几个字符开始，及字符的个数</strong></li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var=http://www.glmapper.com</span><br><span class=\"line\"><span class=\"comment\"># 其中的 0 表示左边第一个字符开始，5 表示字符的总个数</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$&#123;var:0:5&#125;</span></span><br><span class=\"line\"><span class=\"comment\"># 结果 http:</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><strong>从左边第几个字符开始，一直到结束</strong></li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var=http://www.glmapper.com</span><br><span class=\"line\"><span class=\"comment\"># 其中的 7 表示左边第8个字符开始，一直到结束。</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$&#123;var:7&#125;</span></span><br><span class=\"line\"><span class=\"comment\"># 结果 www.glmapper.com</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><strong>从右边第几个字符开始，及字符的个数</strong></li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var=http://www.glmapper.com</span><br><span class=\"line\"><span class=\"comment\"># 其中的 0-3 表示右边算起第3个字符开始，3 表示字符的个数</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$&#123;var:0-3:3&#125;</span></span><br><span class=\"line\"><span class=\"comment\"># 结果 com</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><strong>从右边第几个字符开始，一直到结束</strong></li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var=http://www.glmapper.com</span><br><span class=\"line\"><span class=\"comment\"># 表示从右边第 3 个字符开始，一直到结束</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$&#123;var:0-3&#125;</span></span><br><span class=\"line\"><span class=\"comment\"># 结果 com</span></span><br></pre></td></tr></table></figure>\n\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>左边的第一个字符是用 0 表示，右边的第一个字符用 0-1 表示</p></blockquote>\n<h2 id=\"basename\"><a href=\"#basename\" class=\"headerlink\" title=\"basename\"></a>basename</h2><h3 id=\"basename-命令简介\"><a href=\"#basename-命令简介\" class=\"headerlink\" title=\"basename 命令简介\"></a>basename 命令简介</h3><p>去除文件名的目录部分和后缀部分。basename 命令读取 String 参数，删除以 &#x2F;(斜杠) 结尾的前缀以及任何指定的 Suffix 参数，并将剩余的基本文件名称写至标准输出。basename 和 dirname 命令通常用于 shell 脚本中的命令<strong>替换来指定和指定的输入文件名称有所差异的输出文件名称。</strong><br />**<br />基本语法如下：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">basename</span> NAME [SUFFIX]</span><br><span class=\"line\"><span class=\"built_in\">basename</span> OPTION</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"基本示例\"><a href=\"#基本示例\" class=\"headerlink\" title=\"基本示例\"></a>基本示例</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">basename</span> /usr/bin/sort</span><br><span class=\"line\"><span class=\"comment\"># 返回 sort</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">basename</span> /usr/bin/sort/glmapper.txt</span><br><span class=\"line\"><span class=\"comment\"># 返回 glmapper.txt</span></span><br></pre></td></tr></table></figure>\n\n<p><a name=\"pjCcq\"></a></p>\n<h3 id=\"创建基本文件名称的规则\"><a href=\"#创建基本文件名称的规则\" class=\"headerlink\" title=\"创建基本文件名称的规则\"></a>创建基本文件名称的规则</h3><ul>\n<li>如果 String 参数是 &#x2F;&#x2F;(双斜杠) 或如果 String 参数包含的都是斜杠字符，则将字符串更改为单个 &#x2F;(斜杠)</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">basename</span> //usr//bin//sort//glmapper.txt</span><br><span class=\"line\"><span class=\"comment\"># 返回 glmapper.txt</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">basename</span> ////</span><br><span class=\"line\"><span class=\"comment\"># 返回 /</span></span><br></pre></td></tr></table></figure>\n\n\n<ul>\n<li>从指定字符串除去任何拖尾的 &#x2F; 字符。</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">basename</span> /usr/bin/sort/</span><br><span class=\"line\"><span class=\"comment\"># 返回 sort</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>如果在 String 参数中剩余任何 &#x2F; 字符，则除去字符串的前缀直到（包含）最后一个 &#x2F; 字符。</li>\n<li>如果指定 Suffix 参数，且它和字符串中的剩余的字符相同，则不修改此字符串</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">basename</span> /usr/bin/sort/glmapper.txt glmapper.txt </span><br><span class=\"line\"><span class=\"comment\"># 返回glmapper.txt </span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">basename</span> /usr/bin/sort/glmapper.txt .txt </span><br><span class=\"line\"><span class=\"comment\"># 返回 glmapper</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"shell-查看当前目录下文件的个数\"><a href=\"#shell-查看当前目录下文件的个数\" class=\"headerlink\" title=\"shell 查看当前目录下文件的个数\"></a>shell 查看当前目录下文件的个数</h2><p>测试准备，test 目录下有 test1、test2 两个文件夹和一个 1.txt 文件。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-<span class=\"built_in\">test</span></span><br><span class=\"line\">├── 1.txt</span><br><span class=\"line\">├── test1</span><br><span class=\"line\">│   └── test1_1.txt</span><br><span class=\"line\">└── test2</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>查看当前目录下文件的个数</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">➜  <span class=\"built_in\">test</span> <span class=\"built_in\">ls</span> -l | grep <span class=\"string\">&quot;^-&quot;</span> | <span class=\"built_in\">wc</span> -l</span><br><span class=\"line\">   1 <span class=\"comment\"># 1.txt</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>查看当前目录下文件的个数，包括子目录里的</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">➜  <span class=\"built_in\">test</span> <span class=\"built_in\">ls</span> -lR| grep <span class=\"string\">&quot;^-&quot;</span> | <span class=\"built_in\">wc</span> -l</span><br><span class=\"line\">   2 <span class=\"comment\"># 1.txt  test1_1.txt</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>查看某目录下文件夹（目录）的个数，包括子目录里的</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">➜  <span class=\"built_in\">test</span> <span class=\"built_in\">ls</span> -lR| grep <span class=\"string\">&quot;^d&quot;</span> | <span class=\"built_in\">wc</span> -l</span><br><span class=\"line\">\t 2 <span class=\"comment\"># test1 test2</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>说明：</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1、<span class=\"built_in\">ls</span> -l ：长列表输出该目录下文件信息(注意这里的文件,不同于一般的文件,可能是目录、链接、设备文件等)</span><br><span class=\"line\">2、grep <span class=\"string\">&quot;^-&quot;</span> ：这里将长列表输出信息过滤一部分,只保留一般文件,如果只保留目录就是 ^d</span><br><span class=\"line\">3、<span class=\"built_in\">wc</span> -l ： 统计输出信息的行数,已经过滤得只剩一般文件了,统计结果就是一般文件信息的行数,</span><br><span class=\"line\">\t\t\t\t\t又一行信息对应一个文件,也就是文件的个数</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"利用简单的命令组合实现配置文件的获取\"><a href=\"#利用简单的命令组合实现配置文件的获取\" class=\"headerlink\" title=\"利用简单的命令组合实现配置文件的获取\"></a>利用简单的命令组合实现配置文件的获取</h2><p>测试准备，在 1.txt 中 增加两个属性：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">name=glmapper</span><br><span class=\"line\">age=26</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cat</span> /Users/guolei/logs/test/1.txt | sed <span class=\"string\">&#x27;s|[[:blank:]]||g&#x27;</span> | grep <span class=\"string\">&quot;^name=&quot;</span> | <span class=\"built_in\">cut</span> -d= -f2</span><br><span class=\"line\"><span class=\"comment\"># 返回 glmapper </span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">cat</span> /Users/guolei/logs/test/1.txt | sed <span class=\"string\">&#x27;s|[[:blank:]]||g&#x27;</span> | grep <span class=\"string\">&quot;^age=&quot;</span> | <span class=\"built_in\">cut</span> -d= -f2</span><br><span class=\"line\"><span class=\"comment\"># 返回 26</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"函数封装与返回\"><a href=\"#函数封装与返回\" class=\"headerlink\" title=\"函数封装与返回\"></a>函数封装与返回</h2><p>以上面的解析配置文件为例，将其封装成一个函数</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"function\"><span class=\"title\">load_param</span></span>()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"comment\"># 接受的第一个参数是文件地址</span></span><br><span class=\"line\">    <span class=\"built_in\">local</span> properties_file=<span class=\"variable\">$1</span></span><br><span class=\"line\">    <span class=\"comment\"># 接受的第二个参数是属性名</span></span><br><span class=\"line\">    <span class=\"built_in\">local</span> param=<span class=\"variable\">$2</span></span><br><span class=\"line\">    RESULT=`<span class=\"built_in\">cat</span> <span class=\"variable\">$properties_file</span> | sed <span class=\"string\">&#x27;s|[[:blank:]]||g&#x27;</span> | grep <span class=\"string\">&quot;^<span class=\"variable\">$param</span>=&quot;</span> | <span class=\"built_in\">cut</span> -d= -f2`</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>调用函数并且获取返回值</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">load_param 1.txt name</span><br><span class=\"line\">PROP_VAL=<span class=\"variable\">$RESULT</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$PROP_VAL</span></span><br><span class=\"line\"><span class=\"comment\"># 返回 glmapper</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"shell-实现日志文件的归档处理\"><a href=\"#shell-实现日志文件的归档处理\" class=\"headerlink\" title=\"shell 实现日志文件的归档处理\"></a>shell 实现日志文件的归档处理</h2><p>日志归档简单来说就是，每次希望启动，会将前一次程序运行产生的日志和本地运行产生的日志隔离开来，归档结果就是产生类似于如下的日志文件：</p>\n<ul>\n<li>stdout.log.20170909</li>\n<li>stdout.log.20170709</li>\n<li>stdout</li>\n</ul>\n<p>所以日志文件的归档在生产脚本中是必须要考虑的，否则就到导致每次产生的文件都会被写入同一份日志文件中。下面是实践过程中归纳的一个日志归档函数：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># archive log</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"function\"><span class=\"title\">archive_log</span></span>() &#123;</span><br><span class=\"line\">    <span class=\"built_in\">local</span> FILE_STDOUT_LOG=<span class=\"variable\">$LOG_ROOT</span>/stdout.log</span><br><span class=\"line\">    <span class=\"built_in\">local</span> FILE_STDERR_LOG=<span class=\"variable\">$LOG_ROOT</span>/stderr.log</span><br><span class=\"line\">    <span class=\"keyword\">if</span> [ ! -e <span class=\"variable\">$LOG_ROOT</span> ] ; <span class=\"keyword\">then</span></span><br><span class=\"line\">        <span class=\"built_in\">mkdir</span> -p <span class=\"variable\">$LOG_ROOT</span></span><br><span class=\"line\">    <span class=\"keyword\">fi</span></span><br><span class=\"line\">    NOW=`<span class=\"built_in\">date</span> +%Y%m%d.%H%M%S`</span><br><span class=\"line\">    <span class=\"comment\"># scroll SOFABoot STDOUT log</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> [ -e <span class=\"variable\">$FILE_STDOUT_LOG</span> ] ; <span class=\"keyword\">then</span></span><br><span class=\"line\">        <span class=\"built_in\">mv</span> <span class=\"variable\">$FILE_STDOUT_LOG</span> <span class=\"variable\">$FILE_STDOUT_LOG</span>.<span class=\"variable\">$NOW</span></span><br><span class=\"line\">    <span class=\"keyword\">fi</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># scroll SOFABoot STDERR log</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> [ -e <span class=\"variable\">$FILE_STDERR_LOG</span> ] ; <span class=\"keyword\">then</span></span><br><span class=\"line\">        <span class=\"built_in\">mv</span> <span class=\"variable\">$FILE_STDERR_LOG</span> <span class=\"variable\">$FILE_STDERR_LOG</span>.<span class=\"variable\">$NOW</span></span><br><span class=\"line\">    <span class=\"keyword\">fi</span></span><br><span class=\"line\"></span><br><span class=\"line\">    FILE_STDOUT_LOG_GLOBAL=<span class=\"variable\">$FILE_STDOUT_LOG</span>;</span><br><span class=\"line\">    FILE_STDERR_LOG_GLOBAL=<span class=\"variable\">$FILE_STDERR_LOG</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"一个简单的-SOFABoot-启动脚本\"><a href=\"#一个简单的-SOFABoot-启动脚本\" class=\"headerlink\" title=\"一个简单的 SOFABoot 启动脚本\"></a>一个简单的 SOFABoot 启动脚本</h2><p>deploy.sh  简单的启动脚本：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">LOG_ROOT= <span class=\"variable\">$1</span>;</span><br><span class=\"line\">APP_PATH= <span class=\"variable\">$2</span>;</span><br><span class=\"line\"><span class=\"comment\"># 检查 JAVA_HOME</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> [ -z <span class=\"string\">&quot;<span class=\"variable\">$JAVA_HOME</span>&quot;</span> ]; <span class=\"keyword\">then</span></span><br><span class=\"line\">  <span class=\"built_in\">echo</span> <span class=\"string\">&quot;JAVA_HOME not set, exit&quot;</span></span><br><span class=\"line\">  <span class=\"built_in\">exit</span> 1</span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br><span class=\"line\"><span class=\"comment\"># 使用前面的那个日志归档函数</span></span><br><span class=\"line\">archive_log</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 启动 java 程序</span></span><br><span class=\"line\">java -jar <span class=\"variable\">$APP_PATH</span> &gt;&gt; <span class=\"variable\">$FILE_STDOUT_LOG_GLOBAL</span> 2&gt;&gt; <span class=\"variable\">$FILE_STDOUT_LOG_GLOBAL</span> &amp;</span><br></pre></td></tr></table></figure>\n\n<p>运行：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sh deploy.sh ./logs app.jar </span><br></pre></td></tr></table></figure>\n\n<h2 id=\"小结\"><a href=\"#小结\" class=\"headerlink\" title=\"小结\"></a>小结</h2><p>本文记录日常中常遇到的 shell 命令，基础知识部分零碎的参考了网上一些同学的博客，在此做了归纳。也欢迎大家指正。如果你有比较骚气的操作，也欢迎评论席留言，我会验证后更新到文章中来。</p>\n","text":"if 条件 OPTION OPTION 解释 [-a file] 如果file存在则为真 ，也可以表示为 and: 条件与if [ -z “condition1...","permalink":"/post/linux/linux-program-shell-record","photos":[],"count_time":{"symbolsCount":"6k","symbolsTime":"5 mins."},"categories":[{"name":"Linux","slug":"Linux","count":9,"path":"api/categories/Linux.json"}],"tags":[{"name":"linux","slug":"linux","count":9,"path":"api/tags/linux.json"},{"name":"shell","slug":"shell","count":1,"path":"api/tags/shell.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#if-%E6%9D%A1%E4%BB%B6-OPTION\"><span class=\"toc-text\">if 条件 OPTION</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#if-%E5%9F%BA%E6%9C%AC%E5%88%A4%E6%96%AD\"><span class=\"toc-text\">if 基本判断</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%88%AA%E5%8F%96%E5%AD%97%E7%AC%A6%E4%B8%B2\"><span class=\"toc-text\">截取字符串</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#basename\"><span class=\"toc-text\">basename</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#basename-%E5%91%BD%E4%BB%A4%E7%AE%80%E4%BB%8B\"><span class=\"toc-text\">basename 命令简介</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%9F%BA%E6%9C%AC%E7%A4%BA%E4%BE%8B\"><span class=\"toc-text\">基本示例</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%88%9B%E5%BB%BA%E5%9F%BA%E6%9C%AC%E6%96%87%E4%BB%B6%E5%90%8D%E7%A7%B0%E7%9A%84%E8%A7%84%E5%88%99\"><span class=\"toc-text\">创建基本文件名称的规则</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#shell-%E6%9F%A5%E7%9C%8B%E5%BD%93%E5%89%8D%E7%9B%AE%E5%BD%95%E4%B8%8B%E6%96%87%E4%BB%B6%E7%9A%84%E4%B8%AA%E6%95%B0\"><span class=\"toc-text\">shell 查看当前目录下文件的个数</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%88%A9%E7%94%A8%E7%AE%80%E5%8D%95%E7%9A%84%E5%91%BD%E4%BB%A4%E7%BB%84%E5%90%88%E5%AE%9E%E7%8E%B0%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E7%9A%84%E8%8E%B7%E5%8F%96\"><span class=\"toc-text\">利用简单的命令组合实现配置文件的获取</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%87%BD%E6%95%B0%E5%B0%81%E8%A3%85%E4%B8%8E%E8%BF%94%E5%9B%9E\"><span class=\"toc-text\">函数封装与返回</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#shell-%E5%AE%9E%E7%8E%B0%E6%97%A5%E5%BF%97%E6%96%87%E4%BB%B6%E7%9A%84%E5%BD%92%E6%A1%A3%E5%A4%84%E7%90%86\"><span class=\"toc-text\">shell 实现日志文件的归档处理</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84-SOFABoot-%E5%90%AF%E5%8A%A8%E8%84%9A%E6%9C%AC\"><span class=\"toc-text\">一个简单的 SOFABoot 启动脚本</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%B0%8F%E7%BB%93\"><span class=\"toc-text\">小结</span></a></li></ol>","author":{"name":"glmapper","slug":"blog-author","avatar":"https://glmapper-blog.oss-cn-hangzhou.aliyuncs.com/common/favicon.ico","link":"/","description":"开放，开源，分享，共享","socials":{"github":"https://github.com/glmapper","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/2412872703","zhihu":"","csdn":"","juejin":"https://juejin.cn/user/3227821827961806","customs":{"sofastack":{"icon":"https://glmapper-blog.oss-cn-hangzhou.aliyuncs.com/common/sofastack.svg","link":"https://www.sofastack.tech/"}}}},"mapped":true,"hidden":false,"prev_post":{"title":"并发编程-关于 CAS 的几个问题","uid":"abea11fd3a48225fb287e26d15ad0ab2","slug":"java/java-advance-juc-cas-qa","date":"2019-04-29T11:06:16.000Z","updated":"2024-07-05T04:09:05.762Z","comments":true,"path":"api/articles/java/java-advance-juc-cas-qa.json","keywords":"宋国磊, glmapper, 卫恒, 分享, 开源","cover":null,"text":"CAS 相关基础知识CAS的全称是Compare And Swap ,即比较交换。CAS 中一般会设计到3个参数: 内存值 V 旧的预期值A 要修改的新值B 当...","permalink":"/post/java/java-advance-juc-cas-qa","photos":[],"count_time":{"symbolsCount":"7.8k","symbolsTime":"7 mins."},"categories":[{"name":"JAVA","slug":"JAVA","count":12,"path":"api/categories/JAVA.json"}],"tags":[{"name":"并发编程","slug":"并发编程","count":5,"path":"api/tags/并发编程.json"},{"name":"JUC","slug":"JUC","count":3,"path":"api/tags/JUC.json"},{"name":"CAS","slug":"CAS","count":1,"path":"api/tags/CAS.json"}],"author":{"name":"glmapper","slug":"blog-author","avatar":"https://glmapper-blog.oss-cn-hangzhou.aliyuncs.com/common/favicon.ico","link":"/","description":"开放，开源，分享，共享","socials":{"github":"https://github.com/glmapper","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/2412872703","zhihu":"","csdn":"","juejin":"https://juejin.cn/user/3227821827961806","customs":{"sofastack":{"icon":"https://glmapper-blog.oss-cn-hangzhou.aliyuncs.com/common/sofastack.svg","link":"https://www.sofastack.tech/"}}}}},"next_post":{"title":"ZooKeeper 客户端之 Curator","uid":"e185413cf7dca9c0efdf1f0b1164cf4f","slug":"middleware/middleware-zookeeper-client-curator","date":"2019-04-13T14:09:30.000Z","updated":"2024-07-05T04:09:05.790Z","comments":true,"path":"api/articles/middleware/middleware-zookeeper-client-curator.json","keywords":"宋国磊, glmapper, 卫恒, 分享, 开源","cover":[],"text":"ZooKeeper 是一个分布式的、开放源码的分布式应用程序协调服务，是 Google 的 Chubby 一个开源的实现。它是集群的管理者，监视着集群中各个节点...","permalink":"/post/middleware/middleware-zookeeper-client-curator","photos":[],"count_time":{"symbolsCount":"16k","symbolsTime":"15 mins."},"categories":[{"name":"Middleware","slug":"Middleware","count":14,"path":"api/categories/Middleware.json"}],"tags":[{"name":"curator","slug":"curator","count":1,"path":"api/tags/curator.json"},{"name":"zookeeper","slug":"zookeeper","count":3,"path":"api/tags/zookeeper.json"}],"author":{"name":"glmapper","slug":"blog-author","avatar":"https://glmapper-blog.oss-cn-hangzhou.aliyuncs.com/common/favicon.ico","link":"/","description":"开放，开源，分享，共享","socials":{"github":"https://github.com/glmapper","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/2412872703","zhihu":"","csdn":"","juejin":"https://juejin.cn/user/3227821827961806","customs":{"sofastack":{"icon":"https://glmapper-blog.oss-cn-hangzhou.aliyuncs.com/common/sofastack.svg","link":"https://www.sofastack.tech/"}}}}}}