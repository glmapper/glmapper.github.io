{"title":"Linux 中的 namespace","uid":"7831cd475225b7056a3087c302042c96","slug":"linux/linux-concept-namespace","date":"2020-12-12T15:30:20.000Z","updated":"2024-07-05T04:09:05.774Z","comments":true,"path":"api/articles/linux/linux-concept-namespace.json","keywords":"宋国磊, glmapper, 卫恒, 分享, 开源","cover":null,"content":"<h2 id=\"基本介绍\"><a href=\"#基本介绍\" class=\"headerlink\" title=\"基本介绍\"></a>基本介绍</h2><p>namespace 是 Linux 内核用来隔离内核资源的方式。通过 namespace 可以让一些进程只能看到与自己相关的一部分资源，而另外一些进程也只能看到与它们自己相关的资源，这两拨进程根本就感觉不到对方的存在。具体的实现方式是把一个或多个进程的相关资源指定在同一个 namespace 中。</p>\n<p>Linux namespaces 是对全局系统资源的一种封装隔离，使得处于不同 namespace 的进程拥有独立的全局系统资源，改变一个 namespace 中的系统资源只会影响当前 namespace 里的进程，对其他 namespace 中的进程没有影响。</p>\n<span id=\"more\"></span>\n\n<h2 id=\"namespace-的作用\"><a href=\"#namespace-的作用\" class=\"headerlink\" title=\"namespace 的作用\"></a>namespace 的作用</h2><p>从前面介绍我们基本明确了 namespace 的作用，那就是“隔离”。Linux 内核实现 namespace 的一个主要目的就是实现轻量级虚拟化(容器)服务；在同一个 namespace 下的进程可以感知彼此的变化，而对外界的进程一无所知。这样就可以让容器中的进程产生错觉，认为自己置身于一个独立的系统中，从而达到隔离的目的。也就是说 linux 内核提供的 namespace 技术为 docker 等容器技术的出现和发展提供了基础条件。</p>\n<p>从 docker 实现者的角度考虑该如何实现一个资源隔离的容器。比如是不是可以</p>\n<ul>\n<li>通过 chroot 命令切换根目录的挂载点，从而隔离文件系统。</li>\n<li>为了在分布式的环境下进行通信和定位，容器必须要有独立的 IP、端口和路由等，这就需要对网络进行隔离。</li>\n<li>容器需要一个独立的主机名以便在网络中标识自己</li>\n<li>进程间的通信隔离。</li>\n<li>用户权限隔离</li>\n<li>运行在容器中的应用需要有进程号(PID)，需要与宿主机中的 PID 进行隔离。</li>\n</ul>\n<p>也就是说这六种隔离能力是实现一个容器的基础，下面就看下 linux 内核的 namespace 特性提供了什么样的隔离能力：</p>\n<p>|名称| Flag| 隔离的资源|<br>| ———— | ———— |<br>|Cgroup |CLONE_NEWCGROUP |Cgroup root directory(cgroup 的根目录)|<br>|IPC |CLONE_NEWIPC |System V IPC, POSIX message queues(信号量、消息队列和共享内存)|<br>|Network |CLONE_NEWNET |Network devices,stacks, ports, etc.（网络设备、网络栈、端口）|<br>|Mount |CLONE_NEWNS |Mount points（挂载点）|<br>|PID |CLONE_NEWPID |Process IDs（进程 ID）|<br>|Time |CLONE_NEWTIME |Boot and monotonic clocks（启动和单调时钟）|<br>|User |CLONE_NEWUSER |User and group IDs（用户和用户组）|<br>|UTS |CLONE_NEWUTS |Hostname and NIS domian name（主机名和 NIS 域名）|</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>Cgroup namespace 是后面才增加的，本篇不做过多介绍，将另起篇幅。</p></blockquote>\n<h2 id=\"namespace-的基本操作\"><a href=\"#namespace-的基本操作\" class=\"headerlink\" title=\"namespace 的基本操作\"></a>namespace 的基本操作</h2><h3 id=\"查看进程所属的-namespace\"><a href=\"#查看进程所属的-namespace\" class=\"headerlink\" title=\"查看进程所属的 namespace\"></a>查看进程所属的 namespace</h3><p>&#x2F;proc&#x2F;[pid]&#x2F;ns 目录下会包含进程所属的 namespace 信息，使用下面的命令可以查看当前进程所属的 namespace 信息：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ ll /proc/$$/ns</span><br><span class=\"line\">总用量 0</span><br><span class=\"line\">dr-x--x--x 2 admin admin 0 12月 12 11:19 ./</span><br><span class=\"line\">dr-xr-xr-x 9 admin admin 0 12月 12 11:18 ../</span><br><span class=\"line\">lrwxrwxrwx 1 admin admin 0 12月 12 11:19 cgroup -&gt; cgroup:[4026537386]</span><br><span class=\"line\">lrwxrwxrwx 1 admin admin 0 12月 12 11:19 ipc -&gt; ipc:[4026536810]</span><br><span class=\"line\">lrwxrwxrwx 1 admin admin 0 12月 12 11:19 mnt -&gt; mnt:[4026537383]</span><br><span class=\"line\">lrwxrwxrwx 1 admin admin 0 12月 12 11:19 net -&gt; net:[4026536400]</span><br><span class=\"line\">lrwxrwxrwx 1 admin admin 0 12月 12 11:19 pid -&gt; pid:[4026537385]</span><br><span class=\"line\">lrwxrwxrwx 1 admin admin 0 12月 12 11:19 user -&gt; user:[4026531837]</span><br><span class=\"line\">lrwxrwxrwx 1 admin admin 0 12月 12 11:19 uts -&gt; uts:[4026537384]</span><br></pre></td></tr></table></figure>\n\n<p>或者</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ ll /proc/7370/ns</span><br><span class=\"line\">总用量 0</span><br><span class=\"line\">dr-x--x--x 2 admin admin 0 12月 12 11:20 ./</span><br><span class=\"line\">dr-xr-xr-x 9 admin admin 0 12月  9 18:43 ../</span><br><span class=\"line\">lrwxrwxrwx 1 admin admin 0 12月 12 11:20 cgroup -&gt; cgroup:[4026537386]</span><br><span class=\"line\">lrwxrwxrwx 1 admin admin 0 12月 12 11:20 ipc -&gt; ipc:[4026536810]</span><br><span class=\"line\">lrwxrwxrwx 1 admin admin 0 12月 12 11:20 mnt -&gt; mnt:[4026537383]</span><br><span class=\"line\">lrwxrwxrwx 1 admin admin 0 12月 12 11:20 net -&gt; net:[4026536400]</span><br><span class=\"line\">lrwxrwxrwx 1 admin admin 0 12月 12 11:20 pid -&gt; pid:[4026537385]</span><br><span class=\"line\">lrwxrwxrwx 1 admin admin 0 12月 12 11:20 user -&gt; user:[4026531837]</span><br><span class=\"line\">lrwxrwxrwx 1 admin admin 0 12月 12 11:20 uts -&gt; uts:[4026537384]</span><br></pre></td></tr></table></figure>\n\n<p>从输出的 namespace 信息可以看到，namespace 文件都是链接文件; 以 cgroup:[4026537386] 为例：</p>\n<ul>\n<li>cgroup 是 namespace 的类型</li>\n<li>数字（inode number ）标识一个 namespace，可以理解为 namespace 的 ID<br>如果两个进程的某个 namespace 文件指向同一个链接文件，说明其相关资源在同一个 namespace 中。</li>\n</ul>\n<h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><ul>\n<li><a href=\"https://man7.org/linux/man-pages/man7/namespaces.7.html\">https://man7.org/linux/man-pages/man7/namespaces.7.html</a></li>\n<li><a href=\"https://www.cnblogs.com/sparkdev/p/9365405.html\">https://www.cnblogs.com/sparkdev/p/9365405.html</a></li>\n<li><a href=\"https://segmentfault.com/a/1190000011821634\">https://segmentfault.com/a/1190000011821634</a></li>\n<li><a href=\"https://segmentfault.com/a/1190000017474527?utm_source=sf-related\">https://segmentfault.com/a/1190000017474527?utm_source=sf-related</a></li>\n</ul>\n","text":"基本介绍namespace 是 Linux 内核用来隔离内核资源的方式。通过 namespace 可以让一些进程只能看到与自己相关的一部分资源，而另外一些进程也...","permalink":"/post/linux/linux-concept-namespace","photos":[],"count_time":{"symbolsCount":"3.1k","symbolsTime":"3 mins."},"categories":[{"name":"Linux","slug":"Linux","count":9,"path":"api/categories/Linux.json"}],"tags":[{"name":"linux","slug":"linux","count":9,"path":"api/tags/linux.json"},{"name":"namespace","slug":"namespace","count":1,"path":"api/tags/namespace.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%9F%BA%E6%9C%AC%E4%BB%8B%E7%BB%8D\"><span class=\"toc-text\">基本介绍</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#namespace-%E7%9A%84%E4%BD%9C%E7%94%A8\"><span class=\"toc-text\">namespace 的作用</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#namespace-%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C\"><span class=\"toc-text\">namespace 的基本操作</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%9F%A5%E7%9C%8B%E8%BF%9B%E7%A8%8B%E6%89%80%E5%B1%9E%E7%9A%84-namespace\"><span class=\"toc-text\">查看进程所属的 namespace</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%8F%82%E8%80%83\"><span class=\"toc-text\">参考</span></a></li></ol>","author":{"name":"glmapper","slug":"blog-author","avatar":"https://glmapper-blog.oss-cn-hangzhou.aliyuncs.com/common/favicon.ico","link":"/","description":"开放，开源，分享，共享","socials":{"github":"https://github.com/glmapper","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/2412872703","zhihu":"","csdn":"","juejin":"https://juejin.cn/user/3227821827961806","customs":{"sofastack":{"icon":"https://glmapper-blog.oss-cn-hangzhou.aliyuncs.com/common/sofastack.svg","link":"https://www.sofastack.tech/"}}}},"mapped":true,"hidden":false,"prev_post":{"title":"docker 基础备忘","uid":"52e98439128c052ce4502d6cce12b2b7","slug":"docker/docker-docker-command","date":"2020-12-24T15:14:59.000Z","updated":"2024-07-05T04:09:05.756Z","comments":true,"path":"api/articles/docker/docker-docker-command.json","keywords":"宋国磊, glmapper, 卫恒, 分享, 开源","cover":[],"text":"Docker 已经不是什么新鲜的事物了，Docker 崛起的核心是因为 Docker 镜像的存在，这个创新使得 Docker 在短短几年内就可以迅速地改变了整个...","permalink":"/post/docker/docker-docker-command","photos":[],"count_time":{"symbolsCount":"3.7k","symbolsTime":"3 mins."},"categories":[{"name":"docker","slug":"docker","count":2,"path":"api/categories/docker.json"}],"tags":[{"name":"docker","slug":"docker","count":2,"path":"api/tags/docker.json"}],"author":{"name":"glmapper","slug":"blog-author","avatar":"https://glmapper-blog.oss-cn-hangzhou.aliyuncs.com/common/favicon.ico","link":"/","description":"开放，开源，分享，共享","socials":{"github":"https://github.com/glmapper","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/2412872703","zhihu":"","csdn":"","juejin":"https://juejin.cn/user/3227821827961806","customs":{"sofastack":{"icon":"https://glmapper-blog.oss-cn-hangzhou.aliyuncs.com/common/sofastack.svg","link":"https://www.sofastack.tech/"}}}}},"next_post":{"title":"JAVA 虚拟机中的动态类加载","uid":"f83619a0774898a96f9e31bd15954ca9","slug":"jvm/jvm-dynamic-load-class","date":"2020-12-11T02:59:14.000Z","updated":"2024-07-05T04:09:05.768Z","comments":true,"path":"api/articles/jvm/jvm-dynamic-load-class.json","keywords":"宋国磊, glmapper, 卫恒, 分享, 开源","cover":[],"text":" 原文连接：https://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.18.762&rep=rep1&...","permalink":"/post/jvm/jvm-dynamic-load-class","photos":[],"count_time":{"symbolsCount":"16k","symbolsTime":"15 mins."},"categories":[{"name":"jvm","slug":"jvm","count":6,"path":"api/categories/jvm.json"}],"tags":[{"name":"classloader","slug":"classloader","count":2,"path":"api/tags/classloader.json"},{"name":"jvm","slug":"jvm","count":6,"path":"api/tags/jvm.json"}],"author":{"name":"glmapper","slug":"blog-author","avatar":"https://glmapper-blog.oss-cn-hangzhou.aliyuncs.com/common/favicon.ico","link":"/","description":"开放，开源，分享，共享","socials":{"github":"https://github.com/glmapper","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/2412872703","zhihu":"","csdn":"","juejin":"https://juejin.cn/user/3227821827961806","customs":{"sofastack":{"icon":"https://glmapper-blog.oss-cn-hangzhou.aliyuncs.com/common/sofastack.svg","link":"https://www.sofastack.tech/"}}}}}}