{"title":"Nginx 转发 404 问题的排查和思考","uid":"b6cc4bb37be33d0751cb992f744131af","slug":"middleware/middleware-nginx-proxy-pass","date":"2023-09-13T01:04:07.000Z","updated":"2024-07-05T04:09:05.790Z","comments":true,"path":"api/articles/middleware/middleware-nginx-proxy-pass.json","keywords":"宋国磊, glmapper, 卫恒, 分享, 开源","cover":[],"content":"<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>本篇文章原自当前业务遇到的一个实际问题，因为受到所在网络环境的因素影响，所以整体排查下来耗费了很大精力，记录一下。</p></blockquote>\n<h2 id=\"项目背景\"><a href=\"#项目背景\" class=\"headerlink\" title=\"项目背景\"></a>项目背景</h2><p>项目是 toG 项目，部署的网络环境是一个大的内网环境（又具体分为内网和内网互联网区），项目涉及到小程序、前端、后端（又包括 JAVA 和 GO 两个项目）的部署。整体的部署拓扑图大致如下：</p>\n<span id=\"more\"></span>\n<p><img src=\"https://vspicgo.oss-cn-shanghai.aliyuncs.com/5a6a6ec772f041a59975f587e599108d~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.png\" alt=\"image.png\"></p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>虚拟 IP 映射：大多数内网如何需要暴露对外访问，会在出口的核心路由上配置一个虚拟的 IP 作为对外的统一访问入口。比如你的内网地址及端口是 10.13.3.177:8080，则通过虚拟 IP 映射的地址及端口可能是：10.31.31.253:8080。</p></blockquote>\n<p>在这个业务流程程，访问路径是：<strong>公网（小程序前台）-&gt; 内网互联网区【10.31.1.142(nginx + 小程序后台)】 -&gt; 【10.31.31.253 -&gt; 10.13.3.177(nginx+后端)】 -&gt; 【10.233.1.2 -&gt; 172.13.7.249(nginx+后端)】。其中 10.13.3.177 和 172.13.7.249 是两台虚拟机，虚拟机上部署了nginx 和 后端服务。</strong></p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><strong>PS：上述所有的 IP 均已做过处理，非正式 IP。</strong></p></blockquote>\n<h2 id=\"问题\"><a href=\"#问题\" class=\"headerlink\" title=\"问题\"></a>问题</h2><p>访问步骤及问题节点：</p>\n<ul>\n<li>1、小程序访小程序后台服务</li>\n<li>2、小程序后台服务发起调用到 <code>10.31.31.253</code>（这里实际上是 <code>10.31.1.142</code> 要调用 <code>10.233.1.2</code> 的服务，因为 <code>10.31.1.142</code> 不能直接访问 <code>10.233.1.2</code>，所以借用 <code>10.31.31.253</code> 来实现一层转发逻辑）。</li>\n</ul>\n<p>这里会涉及到两个转发，</p>\n<ul>\n<li><code>10.31.31.253</code> 对应的 <code>10.13.3.177</code> 这台机器上的 nginx 需要将 <code>10.31.1.142</code> 的请求转发给 <code>10.233.1.2</code></li>\n<li><code>10.233.1.2</code> 对应的 nginx 需要将请求到当前机器的后台服务上</li>\n</ul>\n<p>在转发时通过 <code>10.31.31.253</code> 调用 <code>10.233.1.2</code> 时出现 404，<code>10.233.1.2</code> 调用本机后端服务时也出现 404；还有一个 502 是 <code>10.31.1.142</code> 访问 <code>10.31.31.253</code> 出现的。下面是分析问题的大体过程和解决办法。</p>\n<h2 id=\"因端口映射导致的访问-502-问题\"><a href=\"#因端口映射导致的访问-502-问题\" class=\"headerlink\" title=\"因端口映射导致的访问 502 问题\"></a>因端口<strong>映射</strong>导致的访问 502 问题</h2><p>前面提到 <code>10.31.31.253</code> 和 <code>10.233.1.2</code> 均是 虚拟 IP ，<code>10.31.31.253:8805</code> 端口映射到虚拟机 <code>10.13.3.177</code>  上的端口是 18805，<code>10.13.3.177</code> 上 nginx 配置的监听端口是 18805，所以 <code>10.31.1.142</code> 在访问的第一跳是 <code>10.31.31.253:8805</code>，但在实际排查中发现， <code>10.31.1.142</code> 访问的是 <code>10.31.31.253:18805</code>，所以出现 502 问题。</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>状态码 502 表示 HTTP 协议中的 “Bad Gateway”，通常用于表示服务器作为网关或代理时遇到了问题。这个错误通常会在一个服务器作为中介时，无法从另一个服务器获取有效响应以满足客户端请求时出现。</p></blockquote>\n<h2 id=\"proxy-pass-转发-url-丢弃路径导致的-404-问题\"><a href=\"#proxy-pass-转发-url-丢弃路径导致的-404-问题\" class=\"headerlink\" title=\"proxy_pass 转发 url 丢弃路径导致的 404 问题\"></a>proxy_pass 转发 url 丢弃路径导致的 404 问题</h2><p>根据前面的背景，实际上两个 404 问题均是因为这个原因导致。<code>10.31.1.142</code> 发起的请求是 <code>10.31.31.253:8805/miniapp/user/case</code>, nginx access.log 的日志如下：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;POST /miniapp/user/case HTTP/1.1&quot;</span> <span class=\"number\">404</span> <span class=\"number\">153</span> <span class=\"string\">&quot;-&quot;</span> <span class=\"string\">&quot;Java/1.8.0_351&quot;</span></span><br><span class=\"line\"><span class=\"string\">&quot;POST /miniapp/user/case HTTP/1.1&quot;</span> <span class=\"number\">404</span> <span class=\"number\">153</span> <span class=\"string\">&quot;-&quot;</span> <span class=\"string\">&quot;Java/1.8.0_351&quot;</span></span><br><span class=\"line\"><span class=\"string\">&quot;POST /miniapp/user/case HTTP/1.1&quot;</span> <span class=\"number\">404</span> <span class=\"number\">153</span> <span class=\"string\">&quot;-&quot;</span> <span class=\"string\">&quot;Java/1.8.0_351&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>因为这个请求不是 <strong>10.31.31.253 对应的 10.13.3.177 这台机器上的服务处理，而是直接转发给 10.233.1.2 对应的 172.13.7.249 机器的，因此这里出现 404，因为是转发到 172.13.7.249 时没有找到相应的资源。查看 249 机器上的 nginx 访问日志</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;POST /user/case HTTP/1.0&quot;</span> <span class=\"number\">404</span> <span class=\"number\">153</span> <span class=\"string\">&quot;-&quot;</span> <span class=\"string\">&quot;Java/1.8.0_351&quot;</span></span><br><span class=\"line\"><span class=\"string\">&quot;POST /user/case HTTP/1.0&quot;</span> <span class=\"number\">404</span> <span class=\"number\">153</span> <span class=\"string\">&quot;-&quot;</span> <span class=\"string\">&quot;Java/1.8.0_351&quot;</span></span><br><span class=\"line\"><span class=\"string\">&quot;POST /user/case HTTP/1.0&quot;</span> <span class=\"number\">404</span> <span class=\"number\">153</span> <span class=\"string\">&quot;-&quot;</span> <span class=\"string\">&quot;Java/1.8.0_351&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>可以看到， 249 这台机器上的请求变成了 &#x2F;user&#x2F;case，丢失了 &#x2F;miniapp 这个 prefix，10.13.3.177 机器的 nginx 配置如下：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">location /miniapp/ &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 主要是这里</span></span><br><span class=\"line\">    proxy_pass http:<span class=\"comment\">//10.31.31.253:8805/;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>关于这个问题，解决方案大致有如下几种（来源各种技术文章）：</p>\n<ul>\n<li><strong>1、修改代理配置</strong>：将匹配以 &#x2F;miniapp 开头的所有请求，并将它们代理到 10.31.31.253:8805，保持请求 URI 不变。</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">location /miniapp &#123;</span><br><span class=\"line\">    proxy_pass http:<span class=\"comment\">//10.31.31.253:8805;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><strong>2、使用正则表达式捕获和重写 URI</strong>：捕获以 &#x2F;miniapp 开头的请求，并将 &#x2F;miniapp 后面的部分传递给后端服务器。</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">location ~ ^/miniapp(/.*)$ &#123;</span><br><span class=\"line\">    proxy_pass http:<span class=\"comment\">//10.31.31.253$1;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><strong>3、rewrite 重写</strong>：使用 rewrite 指令将 &#x2F;miniapp 后面的部分提取出来，然后将其传递给后端服务器</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">location /miniapp/ &#123;</span><br><span class=\"line\">    rewrite ^/miniapp(/.*)$ $<span class=\"number\">1</span> <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    proxy_pass http:<span class=\"comment\">//10.31.31.253;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><strong>4、保留 location 前缀</strong>：就是将 location 前缀保留在 proxy_pass 的后面</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">location /miniapp/ &#123;</span><br><span class=\"line\">    proxy_pass http:<span class=\"comment\">//10.31.31.253:8805/miniapp/;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>经测试，方案 1 和 方案 4 是可以解决 404 问题的。其中方案 4 是<strong>有病治病的逻辑，转发丢弃则就加上。</strong>这两个问题对于了解 nginx proxy_pass 配置的同学来说应该一眼就可以看到问题所在，但是 **大多数时候，我们会忽略那些看起来并不是很显眼的东西，比如 <code>/</code>**。</p>\n<h3 id=\"proxy-pass-配置以-结尾和不以-结尾的区别\"><a href=\"#proxy-pass-配置以-结尾和不以-结尾的区别\" class=\"headerlink\" title=\"proxy_pass 配置以 &#x2F; 结尾和不以 &#x2F; 结尾的区别\"></a>proxy_pass 配置以 &#x2F; 结尾和不以 &#x2F; 结尾的区别</h3><ul>\n<li>以 &#x2F; 结尾的proxy_pass配置</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">location /miniapp/ &#123;</span><br><span class=\"line\">    proxy_pass http:<span class=\"comment\">//10.31.31.253:8805/;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>这种配置方式以斜杠 <code>/</code> 结尾，意味着 Nginx 会将原始请求的 URI 与 proxy_pass 后面的 URI 拼接在一起，并将最终的请求发送到后端服务器。例如，如果原始请求是 http:&#x2F;&#x2F;<strong>10.31.1.142</strong>&#x2F;miniapp&#x2F;user&#x2F;case，那么 Nginx会将它代理到 <a href=\"http://10.31.31.253:8805/user/case%E3%80%82\">http://10.31.31.253:8805/user/case。</a></p>\n<ul>\n<li>不以 &#x2F; 结尾的proxy_pass配置</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">location /miniapp/ &#123;</span><br><span class=\"line\">    proxy_pass http:<span class=\"comment\">//10.31.31.253:8805;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>这种配置方式没有斜杠 &#x2F; 结尾，意味着 Nginx 会将原始请求的 URI <strong>原封不动</strong>地传递给后端服务器。例如，如果原始请求是 <a href=\"http://10.31.1.142/miniapp/user/case%EF%BC%8C%E9%82%A3%E4%B9%88\">http://10.31.1.142/miniapp/user/case，那么</a> Nginx 会将它代理到<a href=\"http://10.31.31.253:8805/miniapp/user/case%E3%80%82\">http://10.31.31.253:8805/miniapp/user/case。</a></p>\n<p>所以说，如果你希望将请求映射到后端服务器的根目录，则可以使用以斜杠 <code>/</code> 结尾的配置。如果你希望保持URI不变，可以使用不以 <code>/</code> 结尾的配置。</p>\n<h3 id=\"关于-proxy-pass-以及-location\"><a href=\"#关于-proxy-pass-以及-location\" class=\"headerlink\" title=\"关于 proxy_pass 以及 location\"></a>关于 proxy_pass 以及 location</h3><p>网上关于这两个介绍的文章非常多，本篇不做过多的阐述。</p>\n<ul>\n<li>proxy_pass 指令用于定义 Nginx 的 <strong>反向代理</strong> 功能。它指定了将客户端请求代理到的后端服务器的地址，关于反向代理和负载均衡可以参考我之前写过的一篇文章：<a href=\"%5Bhttps://juejin.cn/post/6844903594244702215%5D(https://juejin.cn/post/6844903594244702215)\">nginx反向代理和负载均衡策略实战案例</a>；</li>\n<li>location 指令用于匹配客户端请求的 URI，然后定义如何处理这些请求，推荐阅读：<a href=\"%5Bhttps://juejin.cn/post/6844903849166110733?searchId=202309101636188373691389BDD23E531B%5D(https://juejin.cn/post/6844903849166110733?searchId=202309101636188373691389BDD23E531B)\">彻底弄懂 Nginx location 匹配</a>。</li>\n</ul>\n<h2 id=\"小结\"><a href=\"#小结\" class=\"headerlink\" title=\"小结\"></a>小结</h2><p>问题其实不是很复杂，主要还是对于 nginx 的一些配置作用不大清楚，另外就是在实际排查过程中，因为链路和网络环境问题走了很多弯路；但是如果把这些信息梳理清楚了，就会拨云见日；<strong>问题就在那里，复杂的是过程</strong>。</p>\n","text":" 本篇文章原自当前业务遇到的一个实际问题，因为受到所在网络环境的因素影响，所以整体排查下来耗费了很大精力，记录一下。 项目背景项目是 toG 项目，部署的网络环...","permalink":"/post/middleware/middleware-nginx-proxy-pass","photos":[],"count_time":{"symbolsCount":"4.2k","symbolsTime":"4 mins."},"categories":[{"name":"Middleware","slug":"Middleware","count":14,"path":"api/categories/Middleware.json"}],"tags":[{"name":"nginx","slug":"nginx","count":2,"path":"api/tags/nginx.json"},{"name":"反向代理","slug":"反向代理","count":2,"path":"api/tags/反向代理.json"},{"name":"负载均衡","slug":"负载均衡","count":3,"path":"api/tags/负载均衡.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%A1%B9%E7%9B%AE%E8%83%8C%E6%99%AF\"><span class=\"toc-text\">项目背景</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%97%AE%E9%A2%98\"><span class=\"toc-text\">问题</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%9B%A0%E7%AB%AF%E5%8F%A3%E6%98%A0%E5%B0%84%E5%AF%BC%E8%87%B4%E7%9A%84%E8%AE%BF%E9%97%AE-502-%E9%97%AE%E9%A2%98\"><span class=\"toc-text\">因端口映射导致的访问 502 问题</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#proxy-pass-%E8%BD%AC%E5%8F%91-url-%E4%B8%A2%E5%BC%83%E8%B7%AF%E5%BE%84%E5%AF%BC%E8%87%B4%E7%9A%84-404-%E9%97%AE%E9%A2%98\"><span class=\"toc-text\">proxy_pass 转发 url 丢弃路径导致的 404 问题</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#proxy-pass-%E9%85%8D%E7%BD%AE%E4%BB%A5-%E7%BB%93%E5%B0%BE%E5%92%8C%E4%B8%8D%E4%BB%A5-%E7%BB%93%E5%B0%BE%E7%9A%84%E5%8C%BA%E5%88%AB\"><span class=\"toc-text\">proxy_pass 配置以 &#x2F; 结尾和不以 &#x2F; 结尾的区别</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%85%B3%E4%BA%8E-proxy-pass-%E4%BB%A5%E5%8F%8A-location\"><span class=\"toc-text\">关于 proxy_pass 以及 location</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%B0%8F%E7%BB%93\"><span class=\"toc-text\">小结</span></a></li></ol>","author":{"name":"glmapper","slug":"blog-author","avatar":"https://glmapper-blog.oss-cn-hangzhou.aliyuncs.com/common/favicon.ico","link":"/","description":"开放，开源，分享，共享","socials":{"github":"https://github.com/glmapper","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/2412872703","zhihu":"","csdn":"","juejin":"https://juejin.cn/user/3227821827961806","customs":{"sofastack":{"icon":"https://glmapper-blog.oss-cn-hangzhou.aliyuncs.com/common/sofastack.svg","link":"https://www.sofastack.tech/"}}}},"mapped":true,"hidden":false,"prev_post":{"title":"Linux 服务器端口不可访问问题排查","uid":"13684172933510c4dbfa702cdfb990b7","slug":"linux/linux-port-deny-access","date":"2023-11-27T14:57:01.000Z","updated":"2024-07-05T04:09:05.775Z","comments":true,"path":"api/articles/linux/linux-port-deny-access.json","keywords":"宋国磊, glmapper, 卫恒, 分享, 开源","cover":[],"text":"问题描述项目中使用的服务器是物理机，使用 centos 7.6 版本的操作系统， 4 个千兆网口，上架时间 23 年 8 月份。部署在内网机房，并且在内网机房分...","permalink":"/post/linux/linux-port-deny-access","photos":[],"count_time":{"symbolsCount":"4.7k","symbolsTime":"4 mins."},"categories":[{"name":"Linux","slug":"Linux","count":9,"path":"api/categories/Linux.json"}],"tags":[{"name":"linux","slug":"linux","count":9,"path":"api/tags/linux.json"},{"name":"arping","slug":"arping","count":1,"path":"api/tags/arping.json"}],"author":{"name":"glmapper","slug":"blog-author","avatar":"https://glmapper-blog.oss-cn-hangzhou.aliyuncs.com/common/favicon.ico","link":"/","description":"开放，开源，分享，共享","socials":{"github":"https://github.com/glmapper","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/2412872703","zhihu":"","csdn":"","juejin":"https://juejin.cn/user/3227821827961806","customs":{"sofastack":{"icon":"https://glmapper-blog.oss-cn-hangzhou.aliyuncs.com/common/sofastack.svg","link":"https://www.sofastack.tech/"}}}}},"next_post":{"title":"如何编写测试用例","uid":"ddb33e3231bb937dcbd835cfc8516ae1","slug":"tests/test-about-write-test","date":"2023-09-08T09:15:51.000Z","updated":"2024-07-05T04:09:05.844Z","comments":true,"path":"api/articles/tests/test-about-write-test.json","keywords":"宋国磊, glmapper, 卫恒, 分享, 开源","cover":[],"text":"代码质量管理是软件开发过程中的关键组成部分，比如我们常说的代码规范、代码可读性、单元测试和测试覆盖率等，对于研发人员来说单元测试和测试覆盖率是保障自己所编写代码...","permalink":"/post/tests/test-about-write-test","photos":[],"count_time":{"symbolsCount":"10k","symbolsTime":"10 mins."},"categories":[{"name":"test","slug":"test","count":5,"path":"api/categories/test.json"}],"tags":[{"name":"test","slug":"test","count":5,"path":"api/tags/test.json"},{"name":"junit","slug":"junit","count":2,"path":"api/tags/junit.json"}],"author":{"name":"glmapper","slug":"blog-author","avatar":"https://glmapper-blog.oss-cn-hangzhou.aliyuncs.com/common/favicon.ico","link":"/","description":"开放，开源，分享，共享","socials":{"github":"https://github.com/glmapper","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/2412872703","zhihu":"","csdn":"","juejin":"https://juejin.cn/user/3227821827961806","customs":{"sofastack":{"icon":"https://glmapper-blog.oss-cn-hangzhou.aliyuncs.com/common/sofastack.svg","link":"https://www.sofastack.tech/"}}}}}}