{"title":"Google Guava 在实际场景中的应用封装","uid":"007bfdf0af7a404de7413e60d2f769a0","slug":"middleware/middleware-cache-guava-practice","date":"2018-06-24T16:30:32.000Z","updated":"2024-07-05T04:09:05.788Z","comments":true,"path":"api/articles/middleware/middleware-cache-guava-practice.json","keywords":null,"cover":[],"content":"<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>原文：<a href=\"https://juejin.cn/post/6844903624519188487\">https://juejin.cn/post/6844903624519188487</a></p></blockquote>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>毕竟西湖六月中，风光不与四时同。</p>\n<p>接天莲叶无穷碧，映日荷花别样红。</p>\n<p>晓出净慈寺送林子方-杨万里</p></blockquote>\n<p><img src=\"https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2018/6/24/16432555f503d718~tplv-t2oaga2asx-image.image\"></p>\n<p>周末与小伙伴约了一波西湖，这个时间荷花开的正好…，在开始文章之前先放一张“佛系”美图来镇楼！！！</p>\n<p>最近这段时间用了下谷歌的 guava，自己封了一个缓存模板方案，特此记录，以备后续所需。</p>\n<span id=\"more\"></span>\n\n<h2 id=\"一个缓存定时清除任务带来的GC问题\"><a href=\"#一个缓存定时清除任务带来的GC问题\" class=\"headerlink\" title=\"一个缓存定时清除任务带来的GC问题\"></a>一个缓存定时清除任务带来的GC问题</h2><p>为什么要从这个来说起，因为不说这个就没 guava 什么事了！</p>\n<p>最近项目中需要使用缓存来对一查查询频繁的数据做缓存处理；首先我们也不希望引入三方的如redis或者memcache这样的服务进来，其次是我们对于数据一致性的要求并不是很高，不需要集群内的查询接口共享到一份缓存数据；所以这样一来我们只要实现一个基于内存的缓存即可。</p>\n<p>最开始我并没有考虑使用guava来做这个事情，而是自己写了一套基于CurrentHashMap的缓存方案；这里需要明确一点，因为缓存在这个场景里面希望提供超时清除的能力，而基于所以在自己缓存框架中增加了定时清除过期数据的能力。</p>\n<p>这里我就直接把定时清楚的这段代码放上来：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 静态内部类来进行超时处理</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">class</span> <span class=\"title class_\">ClearCacheThread</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">Thread</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">run</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (<span class=\"literal\">true</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                <span class=\"type\">long</span> <span class=\"variable\">now</span> <span class=\"operator\">=</span> System.currentTimeMillis();</span><br><span class=\"line\">                Object[] keys = map.keySet().toArray();</span><br><span class=\"line\">                <span class=\"keyword\">for</span> (Object key : keys) &#123;</span><br><span class=\"line\">                    <span class=\"type\">CacheEntry</span> <span class=\"variable\">entry</span> <span class=\"operator\">=</span> map.get(key);</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (now - entry.time &gt;= cacheTimeout) &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">synchronized</span> (map) &#123;</span><br><span class=\"line\">                            map.remove(key);</span><br><span class=\"line\">                            <span class=\"keyword\">if</span> (LOGGER.isDebugEnabled())&#123;</span><br><span class=\"line\">                                LOGGER.debug(<span class=\"string\">&quot;language cache timeout clear&quot;</span>);</span><br><span class=\"line\">                            &#125;</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;<span class=\"keyword\">catch</span> (Exception e)&#123;</span><br><span class=\"line\">                LOGGER.error(<span class=\"string\">&quot;clear out time cache value error;&quot;</span>,e);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>这个线程是用来单独处理过期数据的。缓存初始化时就会触发这个线程的start方法开始执行。</p>\n<p>正式由于这段代码的不合理导致我在发布dev环境之后，机器GC触发的频次高的离谱。在尝试了不同的修复方案之后，最后选择放弃了；改用guava了！</p>\n<p>小伙伴们可以在下面留言来讨论下这里为什么会存在频繁GC的问题；我会把结论放在评论回复里面。</p>\n<p><img src=\"https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2018/6/24/16432756a9b3e7e8~tplv-t2oaga2asx-image.image\"></p>\n<h2 id=\"guava\"><a href=\"#guava\" class=\"headerlink\" title=\"guava\"></a>guava</h2><p>为什么选用guava呢，很显然，是大佬推荐的！！！</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>guava是谷歌提供的一个基于内存的缓存工具包，Guava Cache 提供了一种把数据（key-value对）缓存到本地（JVM）内存中的机制，适用于很少会改动的数据。Guava Cache 与 ConcurrentMap 很相似，但也不完全一样。最基本的区别是 ConcurrentMap 会一直保存所有添加的元素，直到显式地移除。相对地，Guava Cache 为了限制内存占用，通常都设定为自动回收元素。</p></blockquote>\n<p>对于我们的场景，guava 提供的能力满足了我们的需要：</p>\n<ul>\n<li>数据改动小</li>\n<li>基于内存</li>\n<li>可以自动回收</li>\n</ul>\n<p>既然选择它了，我们还是有必要来先对它有个大致的了解；先来看看它提供的一些类和接口：</p>\n<table>\n<thead>\n<tr>\n<th>接口&#x2F;类</th>\n<th>详细解释</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>Cache</td>\n<td>【I】;定义get、put、invalidate等操作，这里只有缓存增删改的操作，没有数据加载的操作。</td>\n</tr>\n<tr>\n<td>AbstractCache</td>\n<td>【C】;实现Cache接口。其中批量操作都是循环执行单次行为，而单次行为都没有具体定义。</td>\n</tr>\n<tr>\n<td>LoadingCache</td>\n<td>【I】;继承自Cache。定义get、getUnchecked、getAll等操作，这些操作都会从数据源load数据。</td>\n</tr>\n<tr>\n<td>AbstractLoadingCache</td>\n<td>【C】;继承自AbstractCache，实现LoadingCache接口。</td>\n</tr>\n<tr>\n<td>LocalCache</td>\n<td>【C】;整个guava cache的核心类，包含了guava cache的数据结构以及基本的缓存的操作方法。</td>\n</tr>\n<tr>\n<td>LocalManualCache</td>\n<td>【C】;LocalCache内部静态类，实现Cache接口。其内部的增删改缓存操作全部调用成员变量localCache（LocalCache类型）的相应方法。</td>\n</tr>\n<tr>\n<td>LocalLoadingCache</td>\n<td>【C】;LocalCache内部静态类，继承自LocalManualCache类，实现LoadingCache接口。其所有操作也是调用成员变量localCache（LocalCache类型）的相应方法</td>\n</tr>\n<tr>\n<td>CacheBuilder</td>\n<td>【C】;缓存构建器。构建缓存的入口，指定缓存配置参数并初始化本地缓存。CacheBuilder在build方法中，会把前面设置的参数，全部传递给LocalCache，它自己实际不参与任何计算</td>\n</tr>\n<tr>\n<td>CacheLoader</td>\n<td>【C】;用于从数据源加载数据，定义load、reload、loadAll等操作。</td>\n</tr>\n</tbody></table>\n<p>整个来看的话，guava里面最核心的应该算是 LocalCache 这个类了。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@GwtCompatible(emulated = true)</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">LocalCache</span>&lt;K, V&gt; <span class=\"keyword\">extends</span> <span class=\"title class_\">AbstractMap</span>&lt;K, V&gt; <span class=\"keyword\">implements</span></span><br><span class=\"line\"><span class=\"title class_\">ConcurrentMap</span>&lt;K, V&gt; </span><br></pre></td></tr></table></figure>\n\n<p>关于这个类的源码这里就不细说了，直接来看下在实际应用中我的封装思路【封装满足我当前的需求，如果有小伙伴需要借鉴，可以自己在做扩展】</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"type\">int</span>            <span class=\"variable\">MAX_SIZE</span>     <span class=\"operator\">=</span> <span class=\"number\">1000</span>;</span><br><span class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"type\">int</span>            <span class=\"variable\">EXPIRE_TIME</span>  <span class=\"operator\">=</span> <span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"type\">int</span>            <span class=\"variable\">DEFAULT_SIZE</span> <span class=\"operator\">=</span> <span class=\"number\">100</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">private</span> <span class=\"type\">int</span>                         <span class=\"variable\">maxSize</span>      <span class=\"operator\">=</span> MAX_SIZE;</span><br><span class=\"line\"><span class=\"keyword\">private</span> <span class=\"type\">int</span>                         <span class=\"variable\">expireTime</span>   <span class=\"operator\">=</span> EXPIRE_TIME;</span><br><span class=\"line\"><span class=\"comment\">/** 时间单位（分钟） */</span></span><br><span class=\"line\"><span class=\"keyword\">private</span> <span class=\"type\">TimeUnit</span>                    <span class=\"variable\">timeUnit</span>     <span class=\"operator\">=</span> TimeUnit.MINUTES;</span><br><span class=\"line\"><span class=\"comment\">/** Cache初始化或被重置的时间  */</span></span><br><span class=\"line\"><span class=\"keyword\">private</span> Date                        resetTime;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/** 分别记录历史最多缓存个数及时间点*/</span></span><br><span class=\"line\"><span class=\"keyword\">private</span> <span class=\"type\">long</span>                        <span class=\"variable\">highestSize</span>  <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">private</span> Date                        highestTime;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">volatile</span> LoadingCache&lt;K, V&gt; cache;</span><br></pre></td></tr></table></figure>\n\n<p>这里先是定义了一些常量和基本的属性信息，当然这些属性会提供set&amp;get方法，供实际使用时去自行设置。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> LoadingCache&lt;K, V&gt; <span class=\"title function_\">getCache</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">//使用双重校验锁保证只有一个cache实例</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(cache == <span class=\"literal\">null</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">synchronized</span> (<span class=\"built_in\">this</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(cache == <span class=\"literal\">null</span>)&#123;</span><br><span class=\"line\">                <span class=\"comment\">//CacheBuilder的构造函数是私有的，只能通过其静态方法newBuilder()来获得CacheBuilder的实例</span></span><br><span class=\"line\">                cache = CacheBuilder.newBuilder()</span><br><span class=\"line\">                        <span class=\"comment\">//设置缓存容器的初始容量为100</span></span><br><span class=\"line\">                        .initialCapacity(DEFAULT_SIZE)</span><br><span class=\"line\">                        <span class=\"comment\">//缓存数据的最大条目</span></span><br><span class=\"line\">                        .maximumSize(maxSize)</span><br><span class=\"line\">                        <span class=\"comment\">//定时回收:缓存项在给定时间内没有被写访问（创建或覆盖），则回收。</span></span><br><span class=\"line\">                        .expireAfterWrite(expireTime, timeUnit)</span><br><span class=\"line\">                        <span class=\"comment\">//启用统计-&gt;统计缓存的命中率等</span></span><br><span class=\"line\">                        .recordStats()</span><br><span class=\"line\">                        <span class=\"comment\">//设置缓存的移除通知</span></span><br><span class=\"line\">                        .removalListener((notification)-&gt; &#123;</span><br><span class=\"line\">                            <span class=\"keyword\">if</span> (LOGGER.isDebugEnabled())&#123;</span><br><span class=\"line\">                                LOGGER.debug(<span class=\"string\">&quot;&#123;&#125; was removed, cause is &#123;&#125;&quot;</span> ,notification.getKey(), notification.getCause());</span><br><span class=\"line\">                            &#125;</span><br><span class=\"line\">                        &#125;)</span><br><span class=\"line\">                        .build(<span class=\"keyword\">new</span> <span class=\"title class_\">CacheLoader</span>&lt;K, V&gt;() &#123;</span><br><span class=\"line\">                            <span class=\"meta\">@Override</span></span><br><span class=\"line\">                            <span class=\"keyword\">public</span> V <span class=\"title function_\">load</span><span class=\"params\">(K key)</span> <span class=\"keyword\">throws</span> Exception &#123;</span><br><span class=\"line\">                                <span class=\"keyword\">return</span> fetchData(key);</span><br><span class=\"line\">                            &#125;</span><br><span class=\"line\">                        &#125;);</span><br><span class=\"line\">                <span class=\"built_in\">this</span>.resetTime = <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>();</span><br><span class=\"line\">                <span class=\"built_in\">this</span>.highestTime = <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>();</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (LOGGER.isInfoEnabled())&#123;</span><br><span class=\"line\">                    LOGGER.info(<span class=\"string\">&quot;本地缓存&#123;&#125;初始化成功.&quot;</span>, <span class=\"built_in\">this</span>.getClass().getSimpleName());</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> cache;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>上面这段代码是整个缓存的核心，通过这段代码来生成我们的缓存对象【使用了单例模式】。具体的属性参数看注释。</p>\n<p>因为上面的那些都是封装在一个抽象类AbstractGuavaCache里面的，所以我又封装了一个CacheManger用来管理缓存，并对外提供具体的功能接口；在CacheManger中，我使用了一个静态内部类来创建当前默认的缓存。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 使用静态内部类实现一个默认的缓存，委托给manager来管理</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * DefaultGuavaCache 使用一个简单的单例模式</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &lt;String&gt;</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &lt;Object&gt;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">class</span> <span class=\"title class_\">DefaultGuavaCache</span>&lt;String, Object&gt; <span class=\"keyword\">extends</span></span><br><span class=\"line\"><span class=\"title class_\">AbstractGuavaCache</span>&lt;String, Object&gt; &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"type\">AbstractGuavaCache</span> <span class=\"variable\">cache</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">DefaultGuavaCache</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 处理自动载入缓存，按实际情况载入</span></span><br><span class=\"line\"><span class=\"comment\">     * 这里</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> Object <span class=\"title function_\">fetchData</span><span class=\"params\">(String key)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> AbstractGuavaCache <span class=\"title function_\">getInstance</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> DefaultGuavaCache.cache;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>大概思路就是这样，如果需要扩展，我们只需要按照实际的需求去扩展AbstractGuavaCache这个抽象类就可以了。具体的代码贴在下面了。</p>\n<h2 id=\"完整的两个类\"><a href=\"#完整的两个类\" class=\"headerlink\" title=\"完整的两个类\"></a>完整的两个类</h2><h3 id=\"AbstractGuavaCache\"><a href=\"#AbstractGuavaCache\" class=\"headerlink\" title=\"AbstractGuavaCache\"></a>AbstractGuavaCache</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"keyword\">class</span> <span class=\"title class_\">AbstractGuavaCache</span>&lt;K, V&gt; &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">final</span> <span class=\"type\">Logger</span>              <span class=\"variable\">LOGGER</span>       <span class=\"operator\">=</span> LoggerFactory.getLogger(AbstractGuavaCache.class);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"type\">int</span>            <span class=\"variable\">MAX_SIZE</span>     <span class=\"operator\">=</span> <span class=\"number\">1000</span>;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"type\">int</span>            <span class=\"variable\">EXPIRE_TIME</span>  <span class=\"operator\">=</span> <span class=\"number\">10</span>;</span><br><span class=\"line\">    <span class=\"comment\">/** 用于初始化cache的参数及其缺省值 */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"type\">int</span>            <span class=\"variable\">DEFAULT_SIZE</span> <span class=\"operator\">=</span> <span class=\"number\">100</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">int</span>                         <span class=\"variable\">maxSize</span>      <span class=\"operator\">=</span> MAX_SIZE;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">int</span>                         <span class=\"variable\">expireTime</span>   <span class=\"operator\">=</span> EXPIRE_TIME;</span><br><span class=\"line\">    <span class=\"comment\">/** 时间单位（分钟） */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">TimeUnit</span>                    <span class=\"variable\">timeUnit</span>     <span class=\"operator\">=</span> TimeUnit.MINUTES;</span><br><span class=\"line\">    <span class=\"comment\">/** Cache初始化或被重置的时间  */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Date                        resetTime;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/** 分别记录历史最多缓存个数及时间点*/</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">long</span>                        <span class=\"variable\">highestSize</span>  <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> Date                        highestTime;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">volatile</span> LoadingCache&lt;K, V&gt; cache;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> LoadingCache&lt;K, V&gt; <span class=\"title function_\">getCache</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">//使用双重校验锁保证只有一个cache实例</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(cache == <span class=\"literal\">null</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">synchronized</span> (<span class=\"built_in\">this</span>) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(cache == <span class=\"literal\">null</span>)&#123;</span><br><span class=\"line\">                    <span class=\"comment\">//CacheBuilder的构造函数是私有的，只能通过其静态方法ne</span></span><br><span class=\"line\">                    <span class=\"comment\">//wBuilder()来获得CacheBuilder的实例</span></span><br><span class=\"line\">                    cache = CacheBuilder.newBuilder()</span><br><span class=\"line\">                            <span class=\"comment\">//设置缓存容器的初始容量为100</span></span><br><span class=\"line\">                            .initialCapacity(DEFAULT_SIZE)</span><br><span class=\"line\">                            <span class=\"comment\">//缓存数据的最大条目</span></span><br><span class=\"line\">                            .maximumSize(maxSize)</span><br><span class=\"line\">                            <span class=\"comment\">//定时回收:缓存项在给定时间内没有被写访问</span></span><br><span class=\"line\">                            <span class=\"comment\">//（创建或覆盖），则回收。</span></span><br><span class=\"line\">                            .expireAfterWrite(expireTime, timeUnit)</span><br><span class=\"line\">                            <span class=\"comment\">//启用统计-&gt;统计缓存的命中率等</span></span><br><span class=\"line\">                            .recordStats()</span><br><span class=\"line\">                            <span class=\"comment\">//设置缓存的移除通知</span></span><br><span class=\"line\">                            .removalListener((notification)-&gt; &#123;</span><br><span class=\"line\">                                <span class=\"keyword\">if</span> (LOGGER.isDebugEnabled())&#123;</span><br><span class=\"line\">                                   <span class=\"comment\">//...</span></span><br><span class=\"line\">                                &#125;</span><br><span class=\"line\">                            &#125;)</span><br><span class=\"line\">                            .build(<span class=\"keyword\">new</span> <span class=\"title class_\">CacheLoader</span>&lt;K, V&gt;() &#123;</span><br><span class=\"line\">                                <span class=\"meta\">@Override</span></span><br><span class=\"line\">                                <span class=\"keyword\">public</span> V <span class=\"title function_\">load</span><span class=\"params\">(K key)</span> <span class=\"keyword\">throws</span> Exception &#123;</span><br><span class=\"line\">                                    <span class=\"keyword\">return</span> fetchData(key);</span><br><span class=\"line\">                                &#125;</span><br><span class=\"line\">                            &#125;);</span><br><span class=\"line\">                    <span class=\"built_in\">this</span>.resetTime = <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>();</span><br><span class=\"line\">                    <span class=\"built_in\">this</span>.highestTime = <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>();</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (LOGGER.isInfoEnabled())&#123;</span><br><span class=\"line\">                         <span class=\"comment\">//...</span></span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> cache;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 根据key从数据库或其他数据源中获取一个value，并被自动保存到缓存中。</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * 改方法是模板方法，子类需要实现</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> value,连同key一起被加载到缓存中的。</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">abstract</span> V <span class=\"title function_\">fetchData</span><span class=\"params\">(K key)</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 从缓存中获取数据（第一次自动调用fetchData从外部获取数据），并处理异常</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> Value</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@throws</span> ExecutionException</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> V <span class=\"title function_\">getValue</span><span class=\"params\">(K key)</span> <span class=\"keyword\">throws</span> ExecutionException &#123;</span><br><span class=\"line\">        <span class=\"type\">V</span> <span class=\"variable\">result</span> <span class=\"operator\">=</span> getCache().get(key);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (getCache().size() &gt; highestSize) &#123;</span><br><span class=\"line\">            highestSize = getCache().size();</span><br><span class=\"line\">            highestTime = <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">int</span> <span class=\"title function_\">getMaxSize</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> maxSize;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setMaxSize</span><span class=\"params\">(<span class=\"type\">int</span> maxSize)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.maxSize = maxSize;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">int</span> <span class=\"title function_\">getExpireTime</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> expireTime;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setExpireTime</span><span class=\"params\">(<span class=\"type\">int</span> expireTime)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.expireTime = expireTime;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> TimeUnit <span class=\"title function_\">getTimeUnit</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> timeUnit;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setTimeUnit</span><span class=\"params\">(TimeUnit timeUnit)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.timeUnit = timeUnit;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Date <span class=\"title function_\">getResetTime</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> resetTime;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setResetTime</span><span class=\"params\">(Date resetTime)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.resetTime = resetTime;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">long</span> <span class=\"title function_\">getHighestSize</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> highestSize;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setHighestSize</span><span class=\"params\">(<span class=\"type\">long</span> highestSize)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.highestSize = highestSize;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Date <span class=\"title function_\">getHighestTime</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> highestTime;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setHighestTime</span><span class=\"params\">(Date highestTime)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.highestTime = highestTime;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"DefaultGuavaCacheManager\"><a href=\"#DefaultGuavaCacheManager\" class=\"headerlink\" title=\"DefaultGuavaCacheManager\"></a>DefaultGuavaCacheManager</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">DefaultGuavaCacheManager</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"type\">Logger</span>  <span class=\"variable\">LOGGER</span> <span class=\"operator\">=</span></span><br><span class=\"line\">    LoggerFactory.getLogger(DefaultGuavaCacheManager.class);</span><br><span class=\"line\">   <span class=\"comment\">//缓存包装类</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> AbstractGuavaCache&lt;String, Object&gt; cacheWrapper;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 初始化缓存容器</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"type\">boolean</span> <span class=\"title function_\">initGuavaCache</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            cacheWrapper = DefaultGuavaCache.getInstance();</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (cacheWrapper != <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            LOGGER.error(<span class=\"string\">&quot;Failed to init Guava cache;&quot;</span>, e);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">put</span><span class=\"params\">(String key, Object value)</span> &#123;</span><br><span class=\"line\">        cacheWrapper.getCache().put(key, value);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 指定缓存时效</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">invalidate</span><span class=\"params\">(String key)</span> &#123;</span><br><span class=\"line\">        cacheWrapper.getCache().invalidate(key);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 批量清除</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> keys</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">invalidateAll</span><span class=\"params\">(Iterable&lt;?&gt; keys)</span> &#123;</span><br><span class=\"line\">        cacheWrapper.getCache().invalidateAll(keys);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 清除所有缓存项 ： 慎用</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">invalidateAll</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        cacheWrapper.getCache().invalidateAll();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> Object <span class=\"title function_\">get</span><span class=\"params\">(String key)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> cacheWrapper.getCache().get(key);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            LOGGER.error(<span class=\"string\">&quot;Failed to get value from guava cache;&quot;</span>, e);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 使用静态内部类实现一个默认的缓存，委托给manager来管理</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * DefaultGuavaCache 使用一个简单的单例模式</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> &lt;String&gt;</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> &lt;Object&gt;</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">class</span> <span class=\"title class_\">DefaultGuavaCache</span>&lt;String, Object&gt; <span class=\"keyword\">extends</span></span><br><span class=\"line\">    <span class=\"title class_\">AbstractGuavaCache</span>&lt;String, Object&gt; &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"type\">AbstractGuavaCache</span> <span class=\"variable\">cache</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">DefaultGuavaCache</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">         * 处理自动载入缓存，按实际情况载入</span></span><br><span class=\"line\"><span class=\"comment\">         * <span class=\"doctag\">@param</span> key</span></span><br><span class=\"line\"><span class=\"comment\">         * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">        <span class=\"meta\">@Override</span></span><br><span class=\"line\">        <span class=\"keyword\">protected</span> Object <span class=\"title function_\">fetchData</span><span class=\"params\">(String key)</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> AbstractGuavaCache <span class=\"title function_\">getInstance</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> DefaultGuavaCache.cache;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><p><a href=\"https://willnewii.gitbooks.io/google-guava/content/\">Google Guava官方教程（中文版）</a></p>\n","text":" 原文：https://juejin.cn/post/6844903624519188487 毕竟西湖六月中，风光不与四时同。 接天莲叶无穷碧，映日荷花别样红。...","permalink":"/post/middleware/middleware-cache-guava-practice","photos":[],"count_time":{"symbolsCount":"13k","symbolsTime":"12 mins."},"categories":[{"name":"Middleware","slug":"Middleware","count":11,"path":"api/categories/Middleware.json"}],"tags":[{"name":"cache","slug":"cache","count":2,"path":"api/tags/cache.json"},{"name":"guava","slug":"guava","count":1,"path":"api/tags/guava.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%80%E4%B8%AA%E7%BC%93%E5%AD%98%E5%AE%9A%E6%97%B6%E6%B8%85%E9%99%A4%E4%BB%BB%E5%8A%A1%E5%B8%A6%E6%9D%A5%E7%9A%84GC%E9%97%AE%E9%A2%98\"><span class=\"toc-text\">一个缓存定时清除任务带来的GC问题</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#guava\"><span class=\"toc-text\">guava</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%AE%8C%E6%95%B4%E7%9A%84%E4%B8%A4%E4%B8%AA%E7%B1%BB\"><span class=\"toc-text\">完整的两个类</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#AbstractGuavaCache\"><span class=\"toc-text\">AbstractGuavaCache</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#DefaultGuavaCacheManager\"><span class=\"toc-text\">DefaultGuavaCacheManager</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%8F%82%E8%80%83\"><span class=\"toc-text\">参考</span></a></li></ol>","author":{"name":"glmapper","slug":"blog-author","avatar":"https://glmapper-blog.oss-cn-hangzhou.aliyuncs.com/common/favicon.ico","link":"/","description":"开放，开源，分享，共享","socials":{"github":"https://github.com/glmapper","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/2412872703","zhihu":"","csdn":"","juejin":"https://juejin.cn/user/3227821827961806","customs":{"sofastack":{"icon":"https://glmapper-blog.oss-cn-hangzhou.aliyuncs.com/common/sofastack.svg","link":"https://www.sofastack.tech/"}}}},"mapped":true,"hidden":false,"prev_post":{"title":"聊一聊 Spring 中的扩展机制之 Listener & Awre","uid":"fff7a6707fa538995f040f2ec6d86c43","slug":"spring/spring-extention-listener-awre","date":"2018-08-19T15:14:24.000Z","updated":"2024-07-05T04:09:05.816Z","comments":true,"path":"api/articles/spring/spring-extention-listener-awre.json","keywords":null,"cover":null,"text":" 之前 Spring 源码系列文章中大多是底层源码的分析，通过源码可以让我们能够清晰的了解 Spring 到底是什么，而不是停留于表面的认知。比如当我们要使用 ...","permalink":"/post/spring/spring-extention-listener-awre","photos":[],"count_time":{"symbolsCount":"12k","symbolsTime":"11 mins."},"categories":[{"name":"spring","slug":"spring","count":15,"path":"api/categories/spring.json"}],"tags":[{"name":"spring","slug":"spring","count":11,"path":"api/tags/spring.json"},{"name":"spring 扩展机制","slug":"spring-扩展机制","count":2,"path":"api/tags/spring-扩展机制.json"}],"author":{"name":"glmapper","slug":"blog-author","avatar":"https://glmapper-blog.oss-cn-hangzhou.aliyuncs.com/common/favicon.ico","link":"/","description":"开放，开源，分享，共享","socials":{"github":"https://github.com/glmapper","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/2412872703","zhihu":"","csdn":"","juejin":"https://juejin.cn/user/3227821827961806","customs":{"sofastack":{"icon":"https://glmapper-blog.oss-cn-hangzhou.aliyuncs.com/common/sofastack.svg","link":"https://www.sofastack.tech/"}}}}},"next_post":{"title":"聊一聊 AOP：Advice 源码解析","uid":"633ee0890ad90f5dbecf1b679aef9739","slug":"spring/spring-aop-advice-analysis","date":"2018-06-23T10:41:25.000Z","updated":"2024-07-05T04:09:05.815Z","comments":true,"path":"api/articles/spring/spring-aop-advice-analysis.json","keywords":null,"cover":[],"text":" 原文：https://juejin.cn/post/6844903624250769421 在第一篇中的例子和概念介绍中我们对 Advice 有了一个初步的认...","permalink":"/post/spring/spring-aop-advice-analysis","photos":[],"count_time":{"symbolsCount":"11k","symbolsTime":"10 mins."},"categories":[{"name":"spring","slug":"spring","count":15,"path":"api/categories/spring.json"}],"tags":[{"name":"spring","slug":"spring","count":11,"path":"api/tags/spring.json"},{"name":"aop","slug":"aop","count":3,"path":"api/tags/aop.json"}],"author":{"name":"glmapper","slug":"blog-author","avatar":"https://glmapper-blog.oss-cn-hangzhou.aliyuncs.com/common/favicon.ico","link":"/","description":"开放，开源，分享，共享","socials":{"github":"https://github.com/glmapper","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/2412872703","zhihu":"","csdn":"","juejin":"https://juejin.cn/user/3227821827961806","customs":{"sofastack":{"icon":"https://glmapper-blog.oss-cn-hangzhou.aliyuncs.com/common/sofastack.svg","link":"https://www.sofastack.tech/"}}}}}}