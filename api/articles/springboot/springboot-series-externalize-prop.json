{"title":"SpringBoot 实践系列-外部化配置优先级问题","uid":"33c355c4c6e9a75658b222c024ba6de3","slug":"springboot/springboot-series-externalize-prop","date":"2020-01-03T08:52:36.000Z","updated":"2024-07-05T04:09:05.828Z","comments":true,"path":"api/articles/springboot/springboot-series-externalize-prop.json","keywords":null,"cover":null,"content":"<p>本文主要针对 <code>spring.profiles.active</code>、<code>spring.config.location</code> 以及 <code>spring.config.additional-location</code> 的作用机制及优先级问题进行实践对比。</p>\n<span id=\"more\"></span>\n\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>本文案例工程已上传 github 仓库：<a href=\"https://github.com/glmapper/springboot-series-guides/tree/master/guides-properties\">https://github.com/glmapper/springboot-series-guides/tree/master/guides-properties</a></p></blockquote>\n<h2 id=\"spring-profiles-active\"><a href=\"#spring-profiles-active\" class=\"headerlink\" title=\"spring.profiles.active\"></a>spring.profiles.active</h2><p>除了 <code>application.properties</code> 文件之外，<code>profile-specific</code> 配置也可以通过以下命名方式来定义:<code>application-&#123;profile&#125;.properties</code>。在没有使用 <code>active</code> 指定 <code>profiles</code> 的情况下，<code>Environment</code> 会指定一组默认的 <code>profiles</code>（默认情况下是[default])，换句话说就是，如果没有显示的激活 <code>profiles</code> 配置文件，则默认加载的是 <code>application-default.properties</code> 配置文件。</p>\n<p><code>profile-specific</code> 配置文件的属性与标准 <code>application.properties</code> 从相同的位置加载（一般是 <code>classpath</code> 下）；<code>profile-specific</code> 指定的 <code>properties</code> 配置文件始终覆盖默认配置。</p>\n<p>在案例工程中(<code>guides-properties</code>)，<code>resources</code> 下面包括 <code>application.properties</code> 和 <code>application-dev.properties</code> </p>\n<ul>\n<li><p>application.properties 文件配置</p>\n<figure class=\"highlight properties\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">spring.application.name</span>=<span class=\"string\">appNameInner</span></span><br><span class=\"line\"><span class=\"attr\">testKey</span>=<span class=\"string\">key-default</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>application-dev.properties 文件配置</p>\n<figure class=\"highlight properties\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">testKey</span>=<span class=\"string\">key-dev</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n<p>通过以下代码在启动时将配置值输出：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Value(&quot;$&#123;testKey&#125;&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">private</span> String testKey;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@PostConstruct</span></span><br><span class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title function_\">init</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;-------------------------------&quot;</span>);</span><br><span class=\"line\">    System.out.println(testKey);</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;-------------------------------&quot;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"不指定-spring-profiles-active-时\"><a href=\"#不指定-spring-profiles-active-时\" class=\"headerlink\" title=\"不指定 spring.profiles.active 时\"></a>不指定 spring.profiles.active 时</h3><p>通过 <code>java -jar guides-properties/target/guides-properties-0.0.1-SNAPSHOT.jar</code> 启动工程，<code>console</code> 输出如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">2020-01-04 00:08:47.279  INFO 11050 --- [           main] com.glmapper.bridge.boot.BootStrap       : No active profile set, falling back to default profiles: default</span><br><span class=\"line\">-------------------------------</span><br><span class=\"line\">key-default</span><br><span class=\"line\">-------------------------------</span><br></pre></td></tr></table></figure>\n\n<p>结论是，如果不显示指定 <code>profiles</code>，则使用默认的。</p>\n<h3 id=\"指定-spring-profiles-active-时\"><a href=\"#指定-spring-profiles-active-时\" class=\"headerlink\" title=\"指定 spring.profiles.active 时\"></a>指定 spring.profiles.active 时</h3><p>通过 <code>java -jar -Dspring.profiles.active=dev guides-properties/target/guides-properties-0.0.1-SNAPSHOT.jar</code> 启动工程，<code>console</code> 输出如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">2020-01-04 00:08:14.426  INFO 11040 --- [           main] com.glmapper.bridge.boot.BootStrap       : The following profiles are active: dev</span><br><span class=\"line\">-------------------------------</span><br><span class=\"line\">key-dev</span><br><span class=\"line\">-------------------------------</span><br></pre></td></tr></table></figure>\n<p>结论是，在显示指定 <code>profiles</code> 的情况下，会覆盖默认 <code>application.properties</code> 中的配置值。</p>\n<h2 id=\"spring-config-location\"><a href=\"#spring-config-location\" class=\"headerlink\" title=\"spring.config.location\"></a>spring.config.location</h2><p>在 SpringBoot 2.x 中 spring.config.location 的语义发生了变更(此项配置会导致 classpath 中的 application.properties 不再生效)。原因如下：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">private</span> Set&lt;String&gt; <span class=\"title function_\">getSearchLocations</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// spring.config.location 直接使用此份文件，不会再处理其他配置文件</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"built_in\">this</span>.environment.containsProperty(CONFIG_LOCATION_PROPERTY)) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> getSearchLocations(CONFIG_LOCATION_PROPERTY);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    Set&lt;String&gt; locations = getSearchLocations(CONFIG_ADDITIONAL_LOCATION_PROPERTY);</span><br><span class=\"line\">    locations.addAll(</span><br><span class=\"line\">            asResolvedSet(ConfigFileApplicationListener.<span class=\"built_in\">this</span>.searchLocations, DEFAULT_SEARCH_LOCATIONS));</span><br><span class=\"line\">    <span class=\"keyword\">return</span> locations;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>在工程的根目录的 <code>conf</code> 目录下新建一个 <code>application-conf.properties</code> 配置文件，内容如下：</p>\n<figure class=\"highlight properties\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">testKey</span>=<span class=\"string\">key-spring.config.location</span></span><br></pre></td></tr></table></figure>\n\n<p>通过 <code>java -jar -Dspring.config.location=conf/application-conf.properties guides-properties/target/guides-properties-0.0.1-SNAPSHOT.jar</code> 启动工程，发现启动报错，原因是因为 <code>application-conf.properties</code> 中没有 配置 <code>spring.application.name</code>，而 <code>spring.application.name</code> 是在 <code>resources</code> 目录下的 <code>application.properties</code> 中的，所以也间接说明前面提到的，会使 <code>classpath</code> 下的配置失效。新增 <code>spring.application.name</code> 之后，重新启动工程，</p>\n<figure class=\"highlight properties\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">spring.application.name</span>=<span class=\"string\">guides-properties</span></span><br><span class=\"line\"><span class=\"attr\">testKey</span>=<span class=\"string\">key-spring.config.location</span></span><br></pre></td></tr></table></figure>\n\n<p>输出结果如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">2020-01-04 00:19:12.225  INFO 11147 --- [           main] com.glmapper.bridge.boot.BootStrap       : No active profile set, falling back to default profiles: default</span><br><span class=\"line\">-------------------------------</span><br><span class=\"line\">key-spring.config.location</span><br><span class=\"line\">-------------------------------</span><br></pre></td></tr></table></figure>\n\n<p>所以在使用 spring.config.location 指定外部配置文件时，需要此份配置文件需全量满足当前工程运行时所需，因为它不会去与 resources 目录下的配置文件去做 merge 操作。</p>\n<h2 id=\"spring-config-additional-location\"><a href=\"#spring-config-additional-location\" class=\"headerlink\" title=\"spring.config.additional-location\"></a>spring.config.additional-location</h2><p>在使用 <code>spring.config.additional-location</code> 这种方式自定义 <code>locations</code> 时，除了默认 <code>locations</code> 之外，还会使用 <code>spring.config.additional-location</code> 指定的。</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>additional-location：言外之意就是增量的配置<br>在工程的根目录的 <code>conf</code> 目录下新建一个 <code>application-addition.properties</code> 配置文件，内容如下：</p></blockquote>\n<figure class=\"highlight properties\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">testKey</span>=<span class=\"string\">key-addition</span></span><br></pre></td></tr></table></figure>\n<p>通过 <code>java -jar -Dspring.config.additional-location=conf/application-addition.properties guides-properties/target/guides-properties-0.0.1-SNAPSHOT.jar</code> 启动工程，输出结果如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">2020-01-04 00:28:30.048  INFO 11384 --- [           main] com.glmapper.bridge.boot.BootStrap       : No active profile set, falling back to default profiles: default</span><br><span class=\"line\">-------------------------------</span><br><span class=\"line\">key-addition</span><br><span class=\"line\">-------------------------------</span><br></pre></td></tr></table></figure>\n<p>结论是，会覆盖默认 application.properties 中的配置值。</p>\n<h2 id=\"spring-config-additional-location-与-spring-profiles-active-配置加载关系\"><a href=\"#spring-config-additional-location-与-spring-profiles-active-配置加载关系\" class=\"headerlink\" title=\"spring.config.additional-location 与 spring.profiles.active 配置加载关系\"></a>spring.config.additional-location 与 spring.profiles.active 配置加载关系</h2><p><code>spring.config.location</code> 不用多说，它就是独立的一份，使用它就不能使用其它的。所以这里只分析 <code>spring.config.additional-location</code> 与 <code>spring.profiles.active</code> 配置加载关系。</p>\n<h3 id=\"同时指定两个配置\"><a href=\"#同时指定两个配置\" class=\"headerlink\" title=\"同时指定两个配置\"></a>同时指定两个配置</h3><p>通过 <code>java -jar -Dspring.profiles.active=dev -Dspring.config.additional-location=conf/application-addition.properties guides-properties/target/guides-properties-0.0.1-SNAPSHOT.jar </code>启动工程，输出如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">2020-01-04 00:32:59.044  INFO 11451 --- [           main] com.glmapper.bridge.boot.BootStrap       : The following profiles are active: dev</span><br><span class=\"line\">-------------------------------</span><br><span class=\"line\">key-dev</span><br><span class=\"line\">-------------------------------</span><br></pre></td></tr></table></figure>\n\n<p>为了排除与 <code>-D</code> 参数顺序有关，也使用如下方式再执行一次：<code>java -jar -Dspring.config.additional-location=conf/application-addition.properties -Dspring.profiles.active=dev guides-properties/target/guides-properties-0.0.1-SNAPSHOT.jar</code>，输出结果与前面相同，所以可以得出，<code>spring.profiles.active</code> 的优先级比<code>spring.config.additional-location</code>要高。</p>\n<h3 id=\"spring-config-additional-location-指定差异增量配置\"><a href=\"#spring-config-additional-location-指定差异增量配置\" class=\"headerlink\" title=\"spring.config.additional-location 指定差异增量配置\"></a>spring.config.additional-location 指定差异增量配置</h3><p>在 <code>spring.config.additional-location</code> 中增加 <code>additionKey</code></p>\n<figure class=\"highlight properties\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">testKey</span>=<span class=\"string\">key-addition</span></span><br><span class=\"line\"><span class=\"attr\">additionKey</span>=<span class=\"string\">testAddition</span></span><br></pre></td></tr></table></figure>\n<p>使用 <code>java -jar -Dspring.config.additional-location=conf/application-addition.properties -Dspring.profiles.active=dev guides-properties/target/guides-properties-0.0.1-SNAPSHOT.jar</code> 启动工程，输出如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">2020-01-04 11:44:42.227  INFO 12821 --- [           main] com.glmapper.bridge.boot.BootStrap       : The following profiles are active: dev</span><br><span class=\"line\">-------------------------------</span><br><span class=\"line\">key-dev</span><br><span class=\"line\">testAddition</span><br><span class=\"line\">-------------------------------</span><br></pre></td></tr></table></figure>\n\n<p>结论是 <code>spring.config.additional-location</code> 可以用于提供出 <code>profiles</code> 机制或者默认方式之外的增量配置。</p>\n<h2 id=\"小结\"><a href=\"#小结\" class=\"headerlink\" title=\"小结\"></a>小结</h2><p>在使用外部化配置文件时，执行顺序为：</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>spring.config.location &gt; spring.profiles.active &gt; spring.config.additional-location &gt; 默认的 application.proerties。</p></blockquote>\n<p>其中通过 <code>spring.profiles.active</code> 和 <code>spring.config.additional-location</code> 指定的配置文件会与 默认的 <code>application.proerties</code> merge 作为最终的配置，<code>spring.config.location</code> 则不会。</p>\n","text":"本文主要针对 spring.profiles.active、spring.config.location 以及 spring.config.additional...","permalink":"/post/springboot/springboot-series-externalize-prop","photos":[],"count_time":{"symbolsCount":"6k","symbolsTime":"5 mins."},"categories":[{"name":"SpringBoot","slug":"SpringBoot","count":17,"path":"api/categories/SpringBoot.json"}],"tags":[{"name":"SpringBoot","slug":"SpringBoot","count":17,"path":"api/tags/SpringBoot.json"},{"name":"配置","slug":"配置","count":2,"path":"api/tags/配置.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#spring-profiles-active\"><span class=\"toc-text\">spring.profiles.active</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%B8%8D%E6%8C%87%E5%AE%9A-spring-profiles-active-%E6%97%B6\"><span class=\"toc-text\">不指定 spring.profiles.active 时</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%8C%87%E5%AE%9A-spring-profiles-active-%E6%97%B6\"><span class=\"toc-text\">指定 spring.profiles.active 时</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#spring-config-location\"><span class=\"toc-text\">spring.config.location</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#spring-config-additional-location\"><span class=\"toc-text\">spring.config.additional-location</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#spring-config-additional-location-%E4%B8%8E-spring-profiles-active-%E9%85%8D%E7%BD%AE%E5%8A%A0%E8%BD%BD%E5%85%B3%E7%B3%BB\"><span class=\"toc-text\">spring.config.additional-location 与 spring.profiles.active 配置加载关系</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%90%8C%E6%97%B6%E6%8C%87%E5%AE%9A%E4%B8%A4%E4%B8%AA%E9%85%8D%E7%BD%AE\"><span class=\"toc-text\">同时指定两个配置</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#spring-config-additional-location-%E6%8C%87%E5%AE%9A%E5%B7%AE%E5%BC%82%E5%A2%9E%E9%87%8F%E9%85%8D%E7%BD%AE\"><span class=\"toc-text\">spring.config.additional-location 指定差异增量配置</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%B0%8F%E7%BB%93\"><span class=\"toc-text\">小结</span></a></li></ol>","author":{"name":"glmapper","slug":"blog-author","avatar":"https://glmapper-blog.oss-cn-hangzhou.aliyuncs.com/common/favicon.ico","link":"/","description":"开放，开源，分享，共享","socials":{"github":"https://github.com/glmapper","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/2412872703","zhihu":"","csdn":"","juejin":"https://juejin.cn/user/3227821827961806","customs":{"sofastack":{"icon":"https://glmapper-blog.oss-cn-hangzhou.aliyuncs.com/common/sofastack.svg","link":"https://www.sofastack.tech/"}}}},"mapped":true,"hidden":false,"prev_post":{"title":"SpringBoot 源码系列-自动配置及 starter 机制解析","uid":"e42097f5a6c0cf4efef189a5728220a9","slug":"springboot/springboot-series-auto-configure","date":"2020-01-05T08:36:19.000Z","updated":"2024-07-05T04:09:05.827Z","comments":true,"path":"api/articles/springboot/springboot-series-auto-configure.json","keywords":null,"cover":null,"text":" 一家之言，如有任何错误，请批评指出，不胜感激 本篇主要来讨论研究两个问题：1、什么自动配置，2、如何编写自动配置 在使用 Spring 作为项目开发框架的过程...","permalink":"/post/springboot/springboot-series-auto-configure","photos":[],"count_time":{"symbolsCount":"8.1k","symbolsTime":"7 mins."},"categories":[{"name":"SpringBoot","slug":"SpringBoot","count":17,"path":"api/categories/SpringBoot.json"}],"tags":[{"name":"SpringBoot","slug":"SpringBoot","count":17,"path":"api/tags/SpringBoot.json"},{"name":"自动配置","slug":"自动配置","count":2,"path":"api/tags/自动配置.json"},{"name":"starter 机制","slug":"starter-机制","count":1,"path":"api/tags/starter-机制.json"}],"author":{"name":"glmapper","slug":"blog-author","avatar":"https://glmapper-blog.oss-cn-hangzhou.aliyuncs.com/common/favicon.ico","link":"/","description":"开放，开源，分享，共享","socials":{"github":"https://github.com/glmapper","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/2412872703","zhihu":"","csdn":"","juejin":"https://juejin.cn/user/3227821827961806","customs":{"sofastack":{"icon":"https://glmapper-blog.oss-cn-hangzhou.aliyuncs.com/common/sofastack.svg","link":"https://www.sofastack.tech/"}}}}},"next_post":{"title":"SpringBoot 源码系列-配置解析","uid":"6d8a07de9a2b43faff9f51b0d1189aec","slug":"springboot/springboot-series-propertysource","date":"2019-12-29T09:10:24.000Z","updated":"2024-07-05T04:09:05.830Z","comments":true,"path":"api/articles/springboot/springboot-series-propertysource.json","keywords":null,"cover":[],"text":" 注：本文基于 SpringBoot 2.1.11 版本 说到配置，你能想到的是什么？ 在日常的开发和运维过程中，可以说配置都是及其重要的，因为它可能影响到应用...","permalink":"/post/springboot/springboot-series-propertysource","photos":[],"count_time":{"symbolsCount":"14k","symbolsTime":"13 mins."},"categories":[{"name":"SpringBoot","slug":"SpringBoot","count":17,"path":"api/categories/SpringBoot.json"}],"tags":[{"name":"SpringBoot","slug":"SpringBoot","count":17,"path":"api/tags/SpringBoot.json"},{"name":"配置","slug":"配置","count":2,"path":"api/tags/配置.json"},{"name":"PropertySource","slug":"PropertySource","count":1,"path":"api/tags/PropertySource.json"}],"author":{"name":"glmapper","slug":"blog-author","avatar":"https://glmapper-blog.oss-cn-hangzhou.aliyuncs.com/common/favicon.ico","link":"/","description":"开放，开源，分享，共享","socials":{"github":"https://github.com/glmapper","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/2412872703","zhihu":"","csdn":"","juejin":"https://juejin.cn/user/3227821827961806","customs":{"sofastack":{"icon":"https://glmapper-blog.oss-cn-hangzhou.aliyuncs.com/common/sofastack.svg","link":"https://www.sofastack.tech/"}}}}}}