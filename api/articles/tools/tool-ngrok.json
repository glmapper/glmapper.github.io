{"title":"使用 ngrok 解决测试时外部系统无法访问本地网络问题","uid":"c71afb276dbf15777a4f23717015b86c","slug":"tools/tool-ngrok","date":"2023-04-26T02:21:59.000Z","updated":"2024-07-05T04:09:05.849Z","comments":true,"path":"api/articles/tools/tool-ngrok.json","keywords":null,"cover":[],"content":"<h2 id=\"问题\"><a href=\"#问题\" class=\"headerlink\" title=\"问题\"></a>问题</h2><p>日常开发中有一些场景会有这样的诉求，就是外部系统 callback 回调本系统，但是本系统没有提供外部访问的 IP 或者域名；比如微信公众号测试号开发，就需要填写一个 URL，这个 URL 是开发者用来接收微信消息和事件的接口 URL，那如果这个 URL 是本地的，微信服务器肯定是无法访问的。</p>\n<p>对于这种情况，如果你本地机器可以提供公网访问的能力，那自然是没有问题的；如果不行，可能就需要考虑买一些云服务器来测试，但是这种测试肯定是没有直接本地测试（包括 debug）来的直接。</p>\n<span id=\"more\"></span>\n\n<p>还有一种办法就是<strong>通过 映射端口 把本地端口映射到外网</strong>，这个可以借助一些工具，比如 <a href=\"https://ngrok.com/\">ngrok</a>.</p>\n<h2 id=\"ngrok\"><a href=\"#ngrok\" class=\"headerlink\" title=\"ngrok\"></a>ngrok</h2><p>ngrok 的使用非常简单，分分钟上手； 下载安装包 -&gt; 解压 -&gt; 打开终端。。</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>可以通过此链接进行下载 <a href=\"https://ngrok.com/download\">ngrok 下载官网</a>。这里下载需要账号，支持 github 和 google 三方来授权登录，如果你有这些三方账号，可以直接通过三方账号进行登录即可。</p></blockquote>\n<p>登录之后，你可以在下图中的位置找到你自己的 token<br><img src=\"https://vspicgo.oss-cn-shanghai.aliyuncs.com/image-20230426105043951.png\"></p>\n<p>然后通过如下指令配置 token</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./ngrok authtoken xxxx</span><br></pre></td></tr></table></figure>\n\n<p>最后就是做端口映射，比如你的本地服务端口是 8080</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./ngrok http 8080</span><br></pre></td></tr></table></figure>\n<p>启动之后就会有个域名，如下图<br><img src=\"https://vspicgo.oss-cn-shanghai.aliyuncs.com/image-20230426105345226.png\"></p>\n<p>这样你可以可以将 <a href=\"https://4644-183-162-254-123.ngrok-free.app/\">https://4644-183-162-254-123.ngrok-free.app</a> 作为你的外部网络访问的域名入口了。这里<strong>需要注意一点 <a href=\"https://9d15-183-162-254-123.ngrok-free.app/\">https://9d15-183-162-254-123.ngrok-free.app</a> 不需要再带端口了</strong>，因为这个链接映射的就是 <a href=\"http://localhost:8080。\">http://localhost:8080。</a></p>\n","text":"问题日常开发中有一些场景会有这样的诉求，就是外部系统 callback 回调本系统，但是本系统没有提供外部访问的 IP 或者域名；比如微信公众号测试号开发，就需...","permalink":"/post/tools/tool-ngrok","photos":[],"count_time":{"symbolsCount":741,"symbolsTime":"1 mins."},"categories":[{"name":"工具","slug":"工具","count":3,"path":"api/categories/工具.json"}],"tags":[{"name":"tool","slug":"tool","count":2,"path":"api/tags/tool.json"},{"name":"ngrok","slug":"ngrok","count":1,"path":"api/tags/ngrok.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%97%AE%E9%A2%98\"><span class=\"toc-text\">问题</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#ngrok\"><span class=\"toc-text\">ngrok</span></a></li></ol>","author":{"name":"glmapper","slug":"blog-author","avatar":"https://glmapper-blog.oss-cn-hangzhou.aliyuncs.com/common/favicon.ico","link":"/","description":"开放，开源，分享，共享","socials":{"github":"https://github.com/glmapper","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/2412872703","zhihu":"","csdn":"","juejin":"https://juejin.cn/user/3227821827961806","customs":{"sofastack":{"icon":"https://glmapper-blog.oss-cn-hangzhou.aliyuncs.com/common/sofastack.svg","link":"https://www.sofastack.tech/"}}}},"mapped":true,"hidden":false,"prev_post":{"title":"基于 CentOS 7.6 + Samba 搭建文件服务器","uid":"9d6bba182f887ce7358e9129a5f246bb","slug":"tools/tool-samba-file-server","date":"2023-05-31T02:00:35.000Z","updated":"2024-07-05T04:09:05.849Z","comments":true,"path":"api/articles/tools/tool-samba-file-server.json","keywords":null,"cover":null,"text":"出于产品、解决方案同事的诉求，需要搭建一个用于共享文件的平台，因此基于 Samba 搭建了一个共享文件服务器，这里记录一下，以便用于后续维护参阅。 Samba ...","permalink":"/post/tools/tool-samba-file-server","photos":[],"count_time":{"symbolsCount":"4.3k","symbolsTime":"4 mins."},"categories":[{"name":"工具","slug":"工具","count":3,"path":"api/categories/工具.json"}],"tags":[{"name":"tool","slug":"tool","count":2,"path":"api/tags/tool.json"},{"name":"samba","slug":"samba","count":1,"path":"api/tags/samba.json"}],"author":{"name":"glmapper","slug":"blog-author","avatar":"https://glmapper-blog.oss-cn-hangzhou.aliyuncs.com/common/favicon.ico","link":"/","description":"开放，开源，分享，共享","socials":{"github":"https://github.com/glmapper","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/2412872703","zhihu":"","csdn":"","juejin":"https://juejin.cn/user/3227821827961806","customs":{"sofastack":{"icon":"https://glmapper-blog.oss-cn-hangzhou.aliyuncs.com/common/sofastack.svg","link":"https://www.sofastack.tech/"}}}}},"next_post":{"title":"聊一聊 Linux 的起源和发展","uid":"792d93df9e83310cd9b49667bfb8f9ca","slug":"linux/linux-history-of-development","date":"2023-04-05T08:35:48.000Z","updated":"2024-07-05T04:09:05.774Z","comments":true,"path":"api/articles/linux/linux-history-of-development.json","keywords":null,"cover":null,"text":"最近在系统性重新整理下关于 linux 的一些知识。linux 对于所有的开发工程师来说都不算是陌生的东西，但往往在面对它时，却又显得那么生疏。关于生疏，对于出...","permalink":"/post/linux/linux-history-of-development","photos":[],"count_time":{"symbolsCount":"4.7k","symbolsTime":"4 mins."},"categories":[{"name":"Linux","slug":"Linux","count":9,"path":"api/categories/Linux.json"}],"tags":[{"name":"linux","slug":"linux","count":9,"path":"api/tags/linux.json"}],"author":{"name":"glmapper","slug":"blog-author","avatar":"https://glmapper-blog.oss-cn-hangzhou.aliyuncs.com/common/favicon.ico","link":"/","description":"开放，开源，分享，共享","socials":{"github":"https://github.com/glmapper","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/2412872703","zhihu":"","csdn":"","juejin":"https://juejin.cn/user/3227821827961806","customs":{"sofastack":{"icon":"https://glmapper-blog.oss-cn-hangzhou.aliyuncs.com/common/sofastack.svg","link":"https://www.sofastack.tech/"}}}}}}