{"title":"聊一聊 JAR 文件和 MANIFEST.MF","uid":"e78ea5ad7948adf87206a77ac7badf59","slug":"java/java-base-jar-manifest-intro","date":"2019-06-30T10:45:37.000Z","updated":"2024-07-05T04:09:05.764Z","comments":true,"path":"api/articles/java/java-base-jar-manifest-intro.json","keywords":"宋国磊, glmapper, 卫恒, 分享, 开源","cover":null,"content":"<p>在 JAVA 语言这个圈子里面摸爬滚打，除了对于语言层面和框架层面的学习之外，有一些东西它一直存在，但是确没有对它们有足够的重视，因为都觉得它是理所当然，比如 JAR 是个什么？</p>\n<p>提到 JAR，最先可能想到的就是依赖，比如 fastjson.jar ，它可以作为依赖在项目中来引用，但是不能通过 java -jar 来执行，这种就是非可执行的 JAR。另外一种，比如我们项目打包之后生成的 JAR （当然也可能是 war），我们可以通过 java -jar 来运行程序，我们把它称之为可执行的 JAR。</p>\n<span id=\"more\"></span>\n\n<p>JAR 作用大体可以分为以下几种：</p>\n<ul>\n<li>用于发布和使用类库</li>\n<li>作为应用程序和扩展的构建单元</li>\n<li>作为组件、applet 或者插件程序的部署单位</li>\n<li>用于打包与组件相关联的辅助资源</li>\n</ul>\n<h2 id=\"基本概念\"><a href=\"#基本概念\" class=\"headerlink\" title=\"基本概念\"></a>基本概念</h2><p>JAR 文件是一种归档文件，以 ZIP 格式构建，以 .jar 为文件扩展名。用户可以使用 JDK 自带的 jar 命令创建或提取 JAR 文件。也可以使用其他 zip 压缩工具，不过压缩时 zip 文件头里的条目顺序很重要，因为 MANIFEST 文件常需放在首位。JAR 文件内的文件名是 Unicode 文本。</p>\n<p>JAR 文件（Java 归档，英语：Java Archive）是一种软件包文件格式，通常用于聚合大量的 Java 类文件、相关的元数据和资源（文本、图片等）文件到一个文件，以便分发 Java 平台应用软件或库。</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>以上来自维基百科 </p></blockquote>\n<p>JAR 文件格式提供了许多优势和功能，其中很多是传统的压缩格式如 ZIP 或者 TAR 所没有提供的。它们包括：</p>\n<ul>\n<li>安全性：可以对 JAR 文件内容加上数字化签名。这样，能够识别签名的工具就可以有选择地为您授予软件安全特权，这是其他文件做不到的，它还可以检测代码是否被篡改过。</li>\n<li>减少下载时间：如果一个 applet 捆绑到一个 JAR 文件中，那么浏览器就可以在一个 HTTP 事务中下载这个 applet 的类文件和相关的资源，而不是对每一个文件打开一个新连接。</li>\n<li>压缩：JAR 格式允许您压缩文件以提高存储效率。</li>\n<li>传输平台扩展。Java 扩展框架 (Java Extensions Framework) 提供了向 Java 核心平台添加功能的方法，这些扩展是用 JAR 文件打包的 (Java 3D 和 JavaMail 就是由 Sun 开发的扩展例子 )。</li>\n<li>包密封：存储在 JAR 文件中的包可以选择进行 密封，以增强版本一致性和安全性。密封一个包意味着包中的所有类都必须在同一 JAR 文件中找到。</li>\n<li>包版本控制：一个 JAR 文件可以包含有关它所包含的文件的数据，如厂商和版本信息。</li>\n<li>可移植性：处理 JAR 文件的机制是 Java 平台核心 API 的标准部分。</li>\n</ul>\n<h2 id=\"JAR-文件格式\"><a href=\"#JAR-文件格式\" class=\"headerlink\" title=\"JAR 文件格式\"></a>JAR 文件格式</h2><p>这里分别给出两个 JAR 的解压之后的示例</p>\n<h3 id=\"普通的-JAR-解压之后的文件目录\"><a href=\"#普通的-JAR-解压之后的文件目录\" class=\"headerlink\" title=\"普通的 JAR 解压之后的文件目录\"></a>普通的 JAR 解压之后的文件目录</h3><p>以 fastjson 为例：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.</span><br><span class=\"line\">├── META-INF</span><br><span class=\"line\">│   ├── LICENSE.txt</span><br><span class=\"line\">│   ├── MANIFEST.MF</span><br><span class=\"line\">│   ├── NOTICE.txt</span><br><span class=\"line\">│   ├── maven</span><br><span class=\"line\">│   │   └── com.alibaba</span><br><span class=\"line\">│   │       └── fastjson</span><br><span class=\"line\">│   │           ├── pom.properties</span><br><span class=\"line\">│   │           └── pom.xml</span><br><span class=\"line\">│   └── services</span><br><span class=\"line\">│       ├── javax.ws.rs.ext.MessageBodyReader</span><br><span class=\"line\">│       ├── javax.ws.rs.ext.MessageBodyWriter</span><br><span class=\"line\">│       ├── javax.ws.rs.ext.Providers</span><br><span class=\"line\">│       └── org.glassfish.jersey.internal.spi.AutoDiscoverable</span><br><span class=\"line\">└── com</span><br><span class=\"line\">    └── alibaba</span><br><span class=\"line\">        └── fastjson</span><br><span class=\"line\">            ├── JSON.class</span><br><span class=\"line\">            ├── JSONArray.class</span><br><span class=\"line\">            ├── JSONAware.class</span><br><span class=\"line\">            ├── JSONException.class</span><br><span class=\"line\">            ├── JSONObject.class</span><br><span class=\"line\">            ....省略</span><br></pre></td></tr></table></figure>\n\n\n<h3 id=\"可执行的-jar-以-SpringBoot-的-FAT-JAR-为例）\"><a href=\"#可执行的-jar-以-SpringBoot-的-FAT-JAR-为例）\" class=\"headerlink\" title=\"可执行的 jar (以 SpringBoot 的 FAT JAR 为例）\"></a>可执行的 jar (以 SpringBoot 的 FAT JAR 为例）</h3><p>这个 jar 是从 start.spring.io 上下载下来的一个最简单的 demo 打包来的</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">├── BOOT-INF</span><br><span class=\"line\">│   ├── classes</span><br><span class=\"line\">│   │   ├── application.properties</span><br><span class=\"line\">│   │   └── com</span><br><span class=\"line\">│   │       └── example   # 应用的.class 文件目录</span><br><span class=\"line\">│   │           └── demo</span><br><span class=\"line\">│   │               └── DemoApplication.class</span><br><span class=\"line\">│   └── lib # 这里存放的是应用的 Maven 依赖的jar包文件</span><br><span class=\"line\">│       ├── javax.annotation-api-1.3.2.jar</span><br><span class=\"line\">│       ├── jul-to-slf4j-1.7.26.jar</span><br><span class=\"line\">│       ├── log4j-api-2.11.2.jar</span><br><span class=\"line\">│       ├── log4j-to-slf4j-2.11.2.jar</span><br><span class=\"line\">│       ├── logback-classic-1.2.3.jar</span><br><span class=\"line\">│       ├── logback-core-1.2.3.jar</span><br><span class=\"line\">│       ├── slf4j-api-1.7.26.jar</span><br><span class=\"line\">│       ├── snakeyaml-1.23.jar</span><br><span class=\"line\">│       ├── spring-aop-5.1.8.RELEASE.jar</span><br><span class=\"line\">│       ├── spring-beans-5.1.8.RELEASE.jar</span><br><span class=\"line\">│       ├── spring-boot-2.1.6.RELEASE.jar</span><br><span class=\"line\">│       ├── spring-boot-autoconfigure-2.1.6.RELEASE.jar</span><br><span class=\"line\">│       ├── spring-boot-starter-2.1.6.RELEASE.jar</span><br><span class=\"line\">│       ├── spring-boot-starter-logging-2.1.6.RELEASE.jar</span><br><span class=\"line\">│       ├── spring-context-5.1.8.RELEASE.jar</span><br><span class=\"line\">│       ├── spring-core-5.1.8.RELEASE.jar</span><br><span class=\"line\">│       ├── spring-expression-5.1.8.RELEASE.jar</span><br><span class=\"line\">│       └── spring-jcl-5.1.8.RELEASE.jar</span><br><span class=\"line\">├── META-INF</span><br><span class=\"line\">│   ├── MANIFEST.MF</span><br><span class=\"line\">│   └── maven</span><br><span class=\"line\">│       └── com.example</span><br><span class=\"line\">│           └── demo</span><br><span class=\"line\">│               ├── pom.properties</span><br><span class=\"line\">│               └── pom.xml</span><br><span class=\"line\">└── org</span><br><span class=\"line\">    └── springframework</span><br><span class=\"line\">        └── boot</span><br><span class=\"line\">            └── loader #存放的是 Spring boot loader 的 class 文件</span><br><span class=\"line\">                ├── ExecutableArchiveLauncher.class</span><br><span class=\"line\">                ├── JarLauncher.class</span><br><span class=\"line\">                ├── LaunchedURLClassLoader$UseFastConnectionExceptionsEnumeration.class</span><br><span class=\"line\">                ├── LaunchedURLClassLoader.class</span><br><span class=\"line\">                ├── Launcher.class</span><br><span class=\"line\">                ├── MainMethodRunner.class</span><br><span class=\"line\">                ├── PropertiesLauncher$1.class</span><br><span class=\"line\">                ├── PropertiesLauncher$ArchiveEntryFilter.class</span><br><span class=\"line\">                ├── PropertiesLauncher$PrefixMatchingArchiveFilter.class</span><br><span class=\"line\">                ├── PropertiesLauncher.class</span><br><span class=\"line\">                ├── WarLauncher.class</span><br><span class=\"line\">                ├── archive</span><br><span class=\"line\">                │   ├── Archive$Entry.class</span><br><span class=\"line\">                │   ├── ...</span><br><span class=\"line\">                ├── data</span><br><span class=\"line\">                │   ├── RandomAccessData.class</span><br><span class=\"line\">                │   ├── ...</span><br><span class=\"line\">                ├── jar</span><br><span class=\"line\">                │   ├── AsciiBytes.class</span><br><span class=\"line\">                │   ├── ...</span><br><span class=\"line\">                └── util</span><br><span class=\"line\">                    └── SystemPropertyUtils.class</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"META-INF\"><a href=\"#META-INF\" class=\"headerlink\" title=\"META-INF\"></a>META-INF</h2><p>大多数 JAR 文件包含一个 META-INF 目录，它用于存储包和扩展的配置数据，如安全性和版本信息。Java 2 平台（标准版【J2SE】）识别并解释 META-INF 目录中的下述文件和目录，以便配置应用程序、扩展和类装载器：</p>\n<ul>\n<li>MANIFEST.MF：这个 manifest 文件定义了与扩展和包相关的数据。</li>\n<li>通过 MAVEN 插件打包进来的文件比如：<ul>\n<li>maven</li>\n<li>services ： 存储所有服务提供程序配置文件</li>\n</ul>\n</li>\n<li>其他的还有一些不常看到的：<ul>\n<li>INDEX.LIST ：这个文件由 jar工具的新选项 -i生成，它包含在应用程序或者扩展中定义的包的位置信息。它是 JarIndex 实现的一部分，并由类装载器用于加速类装载过程。 </li>\n<li>.SF：这是 JAR 文件的签名文件</li>\n<li>.DSA：与签名文件相关联的签名程序块文件，它存储了用于签名 JAR 文件的公共签名。</li>\n<li>LICENSE.txt ：证书信息</li>\n<li>NOTICE.txt ： 公告信息</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"可执行的-JAR\"><a href=\"#可执行的-JAR\" class=\"headerlink\" title=\"可执行的 JAR\"></a>可执行的 JAR</h2><p> 可以执行的 JAR 与 普通的 JAR 最直接的区别就是能否通过 java -jar 来执行。</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>一个 可执行的 jar文件是一个自包含的 Java 应用程序，它存储在特别配置的 JAR 文件中，可以由 JVM 直接执行它而无需事先提取文件或者设置类路径。要运行存储在非可执行的 JAR 中的应用程序，必须将它加入到您的类路径中，并用名字调用应用程序的主类。但是使用可执行的 JAR 文件，我们可以不用提取它或者知道主要入口点就可以运行一个应用程序。可执行 JAR 有助于方便发布和执行 Java 应用程序</p></blockquote>\n<p> 一个可执行的 JAR 必须通过 menifest 文件的头引用它所需要的所有其他从属 JAR。如果使用了 -jar选项，那么环境变量 CLASSPATH 和在命令行中指定的所有类路径都被 JVM 所忽略。</p>\n<h3 id=\"MANIFEST-MF-文件\"><a href=\"#MANIFEST-MF-文件\" class=\"headerlink\" title=\"MANIFEST.MF 文件\"></a>MANIFEST.MF 文件</h3><p>当我们用 JAR 命令打完包后，会在根目录下面创建 META-INF 目录，该目录下面会有一些对该 JAR 包信息的描述，其中肯定会有一个 MANIFEST.MF 文件，该文件包含了该 JAR 包的版本、创建人和类搜索路径等信息。</p>\n<ul>\n<li><p>FASTJSON jar 中的 MANIFEST.MF 文件</p>\n  <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Manifest-Version: 1.0              # 用来定义manifest文件的版本</span><br><span class=\"line\">Archiver-Version: Plexus Archiver  # 详见 http://codehaus-plexus.github.io/plexus-archiver/</span><br><span class=\"line\">Built-By: wenshao                  # 构建者</span><br><span class=\"line\">Created-By: Apache Maven 3.5.0  #  # 声明该文件的生成者，一般该属性是由 jar 命令行工具生成的</span><br><span class=\"line\">Build-Jdk: 1.8.0_162               # 基于构建的 JDK 版本</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>SpringBoot demo 的 MANIFEST.MF 文件</p>\n  <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Manifest-Version: 1.0</span><br><span class=\"line\">Implementation-Title: demo                     # 定义了扩展实现的标题</span><br><span class=\"line\">Implementation-Version: 0.0.1-SNAPSHOT         # 定义扩展实现的版本</span><br><span class=\"line\">Start-Class: com.example.demo.DemoApplication  # 启动类</span><br><span class=\"line\">Spring-Boot-Classes: BOOT-INF/classes/         # 编译之后的 class 文件目录</span><br><span class=\"line\">Spring-Boot-Lib: BOOT-INF/lib/                 # 当前工程依赖的 jar 包目录</span><br><span class=\"line\">Build-Jdk-Spec: 1.8                            # 指定的 JDK 版本</span><br><span class=\"line\">Spring-Boot-Version: 2.1.6.RELEASE             # SpringBoot 版本</span><br><span class=\"line\">Created-By: Maven Archiver 3.4.0             </span><br><span class=\"line\">Main-Class: org.springframework.boot.loader.JarLauncher  # Main 函数</span><br></pre></td></tr></table></figure></li>\n</ul>\n<p>在 Java 平台中， MANIFEST 文件是 JAR 归档中所包含的特殊文件，MANIFEST 文件被用来定义扩展或文件打包相关数据。</p>\n<p>MANIFEST 文件作为一个元数据文件，它包含了不同部分中的 k-v 对数据。</p>\n<p>如果一个 JAR 文件被当作可执行文件，则其中的 MANIFEST 文件需要指出该程序的主类文件，如上面案例中的 SpringBoot demo 的那个 jar 中的MANIFEST 文件所示 </p>\n<h3 id=\"MANIFEST-作用\"><a href=\"#MANIFEST-作用\" class=\"headerlink\" title=\"MANIFEST 作用\"></a>MANIFEST 作用</h3><p>从 MANIFEST 文件中提供的信息大概可以了解到其基本作用</p>\n<ul>\n<li>JAR 包基本信息描述</li>\n<li>Main-Class 指定程序的入口，这样可以直接用java -jar xxx.jar来运行程序</li>\n<li>Class-Path 指定jar包的依赖关系，class loader会依据这个路径来搜索class</li>\n</ul>\n<h3 id=\"获取-MANIFEST-MF\"><a href=\"#获取-MANIFEST-MF\" class=\"headerlink\" title=\"获取 MANIFEST.MF\"></a>获取 MANIFEST.MF</h3><p>JDK 中提供了可以获取 jar 包中 MANIFEST.MF 文件信息的工具，可以通过 java.util.jar 这个类库来获取。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">JarFile</span> <span class=\"variable\">jar</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">JarFile</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">File</span>(<span class=\"string\">&quot;/Users/xxx/Documents/test/demo/target/demo-0.0.1-SNAPSHOT.jar&quot;</span>));</span><br><span class=\"line\"><span class=\"type\">Manifest</span> <span class=\"variable\">manifest</span> <span class=\"operator\">=</span> jar.getManifest();</span><br><span class=\"line\"><span class=\"type\">Attributes</span> <span class=\"variable\">mainAttributes</span> <span class=\"operator\">=</span> manifest.getMainAttributes();</span><br><span class=\"line\"><span class=\"keyword\">for</span>(Map.Entry&lt;Object, Object&gt; attrEntry : mainAttributes.entrySet())&#123;</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;main\\t&quot;</span>+attrEntry.getKey()+<span class=\"string\">&quot;:&quot;</span>+attrEntry.getValue());</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">Map&lt;String, Attributes&gt; entries = manifest.getEntries();</span><br><span class=\"line\"><span class=\"keyword\">for</span>(Map.Entry&lt;String, Attributes&gt; entry : entries.entrySet()) &#123;</span><br><span class=\"line\">    <span class=\"type\">Attributes</span> <span class=\"variable\">values</span> <span class=\"operator\">=</span> entry.getValue();</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (Map.Entry&lt;Object, Object&gt; attrEntry : values.entrySet()) &#123;</span><br><span class=\"line\">        System.out.println(attrEntry.getKey() + <span class=\"string\">&quot;:&quot;</span> + attrEntry.getValue());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>执行结果为：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">main\tImplementation-Title:demo</span><br><span class=\"line\">main\tImplementation-Version:0.0.1-SNAPSHOT</span><br><span class=\"line\">main\tStart-Class:com.example.demo.DemoApplication</span><br><span class=\"line\">main\tSpring-Boot-Classes:BOOT-INF/classes/</span><br><span class=\"line\">main\tSpring-Boot-Lib:BOOT-INF/lib/</span><br><span class=\"line\">main\tBuild-Jdk-Spec:1.8</span><br><span class=\"line\">main\tSpring-Boot-Version:2.1.6.RELEASE</span><br><span class=\"line\">main\tCreated-By:Maven Archiver 3.4.0</span><br><span class=\"line\">main\tManifest-Version:1.0</span><br><span class=\"line\">main\tMain-Class:org.springframework.boot.loader.JarLauncher</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Jar-文件和-Manifest-在-java-中的定义\"><a href=\"#Jar-文件和-Manifest-在-java-中的定义\" class=\"headerlink\" title=\"Jar 文件和 Manifest 在 java 中的定义\"></a>Jar 文件和 Manifest 在 java 中的定义</h2><p>下面为 JarFile 的定义，从代码就可以看出，前面我们所介绍的 Jar 是以 ZIP 格式构建一种归档文件，因为它是 ZipFile 的子类。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">JarFile</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">ZipFile</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> SoftReference&lt;Manifest&gt; manRef;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> JarEntry manEntry;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> JarVerifier jv;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">boolean</span> jvInitialized;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">boolean</span> verify;</span><br><span class=\"line\">    <span class=\"comment\">//指示是否存在Class-Path属性（仅当hasCheckedSpecialAttributes为true时才有效）</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">boolean</span> hasClassPathAttribute;</span><br><span class=\"line\">    <span class=\"comment\">// 如果清单检查特殊属性，则为 true</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">volatile</span> <span class=\"type\">boolean</span> hasCheckedSpecialAttributes;</span><br><span class=\"line\">    <span class=\"comment\">// 在SharedSecrets中设置JavaUtilJarAccess</span></span><br><span class=\"line\">    <span class=\"keyword\">static</span> &#123;</span><br><span class=\"line\">        SharedSecrets.setJavaUtilJarAccess(<span class=\"keyword\">new</span> <span class=\"title class_\">JavaUtilJarAccessImpl</span>());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * The JAR manifest file name.（JAR清单文件名）</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"type\">String</span> <span class=\"variable\">MANIFEST_NAME</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;META-INF/MANIFEST.MF&quot;</span>;</span><br><span class=\"line\">    <span class=\"comment\">// 省略其他</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>下面是 Manifest 类的定义，用来描述 JAR 的 清单文件。从其属性中也很好的观察到，其存储的就是 K-V 键值对数据。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Manifest</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">Cloneable</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// manifest main attributes</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">Attributes</span> <span class=\"variable\">attr</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Attributes</span>();</span><br><span class=\"line\">    <span class=\"comment\">// manifest entries</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Map&lt;String, Attributes&gt; entries = <span class=\"keyword\">new</span> <span class=\"title class_\">HashMap</span>&lt;&gt;();</span><br><span class=\"line\">    <span class=\"comment\">// 省略其他</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"小结\"><a href=\"#小结\" class=\"headerlink\" title=\"小结\"></a>小结</h2><p>JAR 格式远远超出了一种压缩格式，它有许多可以改进效率、安全性和组织 Java 应用程序的功能。因为这些功能已经建立在核心平台 – 包括编译器和类装载器 – 中了，所以开发人员可以利用 JAR 文件格式的能力简化和改进开发和部署过程。</p>\n<h2 id=\"附：常见的-jar工具用法\"><a href=\"#附：常见的-jar工具用法\" class=\"headerlink\" title=\"附：常见的 jar工具用法\"></a>附：常见的 jar工具用法</h2><table>\n<thead>\n<tr>\n<th align=\"left\">功能</th>\n<th align=\"left\">命令</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">用一个单独的文件创建一个 JAR 文件</td>\n<td align=\"left\">jar cf jar-file input-file…</td>\n</tr>\n<tr>\n<td align=\"left\">用一个目录创建一个 JAR 文件</td>\n<td align=\"left\">jar cf jar-file dir-name</td>\n</tr>\n<tr>\n<td align=\"left\">创建一个未压缩的 JAR 文件</td>\n<td align=\"left\">jar cf0 jar-file dir-name</td>\n</tr>\n<tr>\n<td align=\"left\">更新一个 JAR 文件</td>\n<td align=\"left\">jar uf jar-file input-file…</td>\n</tr>\n<tr>\n<td align=\"left\">查看一个 JAR 文件的内容</td>\n<td align=\"left\">jar tf jar-file</td>\n</tr>\n<tr>\n<td align=\"left\">提取一个 JAR 文件的内容</td>\n<td align=\"left\">jar xf jar-file</td>\n</tr>\n<tr>\n<td align=\"left\">从一个 JAR 文件中提取特定的文件</td>\n<td align=\"left\">jar xf jar-file archived-file…</td>\n</tr>\n<tr>\n<td align=\"left\">运行一个打包为可执行 JAR 文件的应用程序</td>\n<td align=\"left\">java -jar app.jar</td>\n</tr>\n</tbody></table>\n<h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><ul>\n<li><a href=\"https://www.ibm.com/developerworks/cn/java/j-jar/index.html\">JAR 文件揭密</a></li>\n<li><a href=\"https://zh.wikipedia.org/wiki/JAR_(%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F)\">JAR</a></li>\n<li><a href=\"https://docs.oracle.com/javase/6/docs/technotes/guides/jar/jar.html\">JAR File Specification</a></li>\n</ul>\n","text":"在 JAVA 语言这个圈子里面摸爬滚打，除了对于语言层面和框架层面的学习之外，有一些东西它一直存在，但是确没有对它们有足够的重视，因为都觉得它是理所当然，比如 ...","permalink":"/post/java/java-base-jar-manifest-intro","photos":[],"count_time":{"symbolsCount":"9.4k","symbolsTime":"9 mins."},"categories":[{"name":"JAVA","slug":"JAVA","count":12,"path":"api/categories/JAVA.json"}],"tags":[{"name":"java","slug":"java","count":5,"path":"api/tags/java.json"},{"name":"JAR","slug":"JAR","count":1,"path":"api/tags/JAR.json"},{"name":"MANIFEST.MF","slug":"MANIFEST-MF","count":1,"path":"api/tags/MANIFEST-MF.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5\"><span class=\"toc-text\">基本概念</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#JAR-%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F\"><span class=\"toc-text\">JAR 文件格式</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%99%AE%E9%80%9A%E7%9A%84-JAR-%E8%A7%A3%E5%8E%8B%E4%B9%8B%E5%90%8E%E7%9A%84%E6%96%87%E4%BB%B6%E7%9B%AE%E5%BD%95\"><span class=\"toc-text\">普通的 JAR 解压之后的文件目录</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%8F%AF%E6%89%A7%E8%A1%8C%E7%9A%84-jar-%E4%BB%A5-SpringBoot-%E7%9A%84-FAT-JAR-%E4%B8%BA%E4%BE%8B%EF%BC%89\"><span class=\"toc-text\">可执行的 jar (以 SpringBoot 的 FAT JAR 为例）</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#META-INF\"><span class=\"toc-text\">META-INF</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%8F%AF%E6%89%A7%E8%A1%8C%E7%9A%84-JAR\"><span class=\"toc-text\">可执行的 JAR</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#MANIFEST-MF-%E6%96%87%E4%BB%B6\"><span class=\"toc-text\">MANIFEST.MF 文件</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#MANIFEST-%E4%BD%9C%E7%94%A8\"><span class=\"toc-text\">MANIFEST 作用</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%8E%B7%E5%8F%96-MANIFEST-MF\"><span class=\"toc-text\">获取 MANIFEST.MF</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Jar-%E6%96%87%E4%BB%B6%E5%92%8C-Manifest-%E5%9C%A8-java-%E4%B8%AD%E7%9A%84%E5%AE%9A%E4%B9%89\"><span class=\"toc-text\">Jar 文件和 Manifest 在 java 中的定义</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%B0%8F%E7%BB%93\"><span class=\"toc-text\">小结</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%99%84%EF%BC%9A%E5%B8%B8%E8%A7%81%E7%9A%84-jar%E5%B7%A5%E5%85%B7%E7%94%A8%E6%B3%95\"><span class=\"toc-text\">附：常见的 jar工具用法</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%8F%82%E8%80%83\"><span class=\"toc-text\">参考</span></a></li></ol>","author":{"name":"glmapper","slug":"blog-author","avatar":"https://glmapper-blog.oss-cn-hangzhou.aliyuncs.com/common/favicon.ico","link":"/","description":"开放，开源，分享，共享","socials":{"github":"https://github.com/glmapper","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/2412872703","zhihu":"","csdn":"","juejin":"https://juejin.cn/user/3227821827961806","customs":{"sofastack":{"icon":"https://glmapper-blog.oss-cn-hangzhou.aliyuncs.com/common/sofastack.svg","link":"https://www.sofastack.tech/"}}}},"mapped":true,"hidden":false,"prev_post":{"title":"一个 maven 插件打包问题的排查","uid":"d490357e7c00b784e454d21c1c78f619","slug":"maven/maven-plugin-debug-problem","date":"2019-07-23T10:22:50.000Z","updated":"2024-07-05T04:09:05.782Z","comments":true,"path":"api/articles/maven/maven-plugin-debug-problem.json","keywords":"宋国磊, glmapper, 卫恒, 分享, 开源","cover":[],"text":"最近研究 sofa-ark 的插件机制时，发现当执行完 maven clean install -DskipTests 时，打在 target 目录下的 xxx...","permalink":"/post/maven/maven-plugin-debug-problem","photos":[],"count_time":{"symbolsCount":"1.9k","symbolsTime":"2 mins."},"categories":[{"name":"maven","slug":"maven","count":4,"path":"api/categories/maven.json"}],"tags":[{"name":"maven","slug":"maven","count":4,"path":"api/tags/maven.json"},{"name":"maven plugin","slug":"maven-plugin","count":3,"path":"api/tags/maven-plugin.json"},{"name":"maven debug","slug":"maven-debug","count":1,"path":"api/tags/maven-debug.json"}],"author":{"name":"glmapper","slug":"blog-author","avatar":"https://glmapper-blog.oss-cn-hangzhou.aliyuncs.com/common/favicon.ico","link":"/","description":"开放，开源，分享，共享","socials":{"github":"https://github.com/glmapper","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/2412872703","zhihu":"","csdn":"","juejin":"https://juejin.cn/user/3227821827961806","customs":{"sofastack":{"icon":"https://glmapper-blog.oss-cn-hangzhou.aliyuncs.com/common/sofastack.svg","link":"https://www.sofastack.tech/"}}}}},"next_post":{"title":"Linux 下安装 Mysql 数据库","uid":"d21c52642d3819d7c9e88653990f95af","slug":"linux/linux-ops-soft-mysql","date":"2019-06-05T09:09:15.000Z","updated":"2024-07-05T04:09:05.775Z","comments":true,"path":"api/articles/linux/linux-ops-soft-mysql.json","keywords":"宋国磊, glmapper, 卫恒, 分享, 开源","cover":null,"text":"更新，Centos 7 离线安装 Mysql 5.7近期的一个项目，需要使用 MySQL 5.7，但是甲方所提供的机器是不能访问外网环境的，所以只能通过离线安装...","permalink":"/post/linux/linux-ops-soft-mysql","photos":[],"count_time":{"symbolsCount":"8.7k","symbolsTime":"8 mins."},"categories":[{"name":"Linux","slug":"Linux","count":9,"path":"api/categories/Linux.json"}],"tags":[{"name":"mysql","slug":"mysql","count":4,"path":"api/tags/mysql.json"},{"name":"linux","slug":"linux","count":9,"path":"api/tags/linux.json"},{"name":"运维","slug":"运维","count":2,"path":"api/tags/运维.json"}],"author":{"name":"glmapper","slug":"blog-author","avatar":"https://glmapper-blog.oss-cn-hangzhou.aliyuncs.com/common/favicon.ico","link":"/","description":"开放，开源，分享，共享","socials":{"github":"https://github.com/glmapper","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/2412872703","zhihu":"","csdn":"","juejin":"https://juejin.cn/user/3227821827961806","customs":{"sofastack":{"icon":"https://glmapper-blog.oss-cn-hangzhou.aliyuncs.com/common/sofastack.svg","link":"https://www.sofastack.tech/"}}}}}}