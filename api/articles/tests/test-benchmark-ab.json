{"title":"ab 测试","uid":"c87a3afb2738074b526bbfc99d4f6216","slug":"tests/test-benchmark-ab","date":"2022-09-22T13:26:42.000Z","updated":"2024-07-05T04:09:05.844Z","comments":true,"path":"api/articles/tests/test-benchmark-ab.json","keywords":null,"cover":null,"content":"<h2 id=\"Apache-Benchmark-Tool\"><a href=\"#Apache-Benchmark-Tool\" class=\"headerlink\" title=\"Apache Benchmark Tool\"></a>Apache Benchmark Tool</h2><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>ab is a tool for benchmarking your Apache Hypertext Transfer Protocol (HTTP) server. It is designed to give you an impression of how your current Apache installation performs. This especially shows you how many requests per second your Apache installation is capable of serving.</p></blockquote>\n<p>ab 是 apache http server 基准测试工具，它可以帮助我们去了解当前服务的表现，如每秒请求数等。下面是 ab 对应的所有 options 摘要信息：</p>\n<span id=\"more\"></span>\n\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ab [ -A auth-username:password ] [ -b windowsize ] [ -B local-address ] [ -c </span><br><span class=\"line\">concurrency ] [ -C cookie-name=value ] [ -d ] [ -e csv-file ] [ -E client-certificate </span><br><span class=\"line\">file ] [ -f protocol ] [ -g gnuplot-file ] [ -h ] [ -H custom-header ] [ -i ] [ -k ] [ </span><br><span class=\"line\">-l ] [ -m HTTP-method ] [ -n requests ] [ -p POST-file ] [ -P proxy-auth-</span><br><span class=\"line\">username:password ] [ -q ] [ -r ] [ -s timeout ] [ -S ] [ -t timelimit ] [ -T content-</span><br><span class=\"line\">type ] [ -u PUT-file ] [ -v verbosity] [ -V ] [ -w ] [ -x &lt;table&gt;-attributes ] [ -X </span><br><span class=\"line\">proxy[:port] ] [ -y &lt;tr&gt;-attributes ] [ -z &lt;td&gt;-attributes ] [ -Z ciphersuite ] </span><br><span class=\"line\">[http[s]://]hostname[:port]/path</span><br></pre></td></tr></table></figure>\n\n<p>下面是各参数的解释</p>\n<table>\n<thead>\n<tr>\n<th>options</th>\n<th>keys</th>\n<th>exlpain</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>-A</td>\n<td><em><strong>auth-username</strong></em> <strong>:</strong> <em><strong>password</strong></em></td>\n<td>向服务器提供 BASIC 身份验证凭据。用户名和密码由一个:分隔，并通过 wire base64编 码发送。无论服务器是否需要该字符串(即，是否发送了 401 身份验证)，都将发送该字符串。</td>\n</tr>\n<tr>\n<td>-b</td>\n<td><em><strong>windowsize</strong></em></td>\n<td>TCP发送&#x2F;接收缓冲区大小，以字节为单位。</td>\n</tr>\n<tr>\n<td>-B</td>\n<td><em><strong>local-address</strong></em></td>\n<td>进行传出连接时要绑定的地址。</td>\n</tr>\n<tr>\n<td>-c</td>\n<td><em><strong>concurrency</strong></em></td>\n<td>单次执行的并发 request 数量，默认一次执行一个请求</td>\n</tr>\n<tr>\n<td><strong>-C</strong></td>\n<td><em><strong>cookie-name</strong></em> <strong>&#x3D;</strong> <em><strong>value</strong></em></td>\n<td>给请求添加 Cookie</td>\n</tr>\n<tr>\n<td><strong>-d</strong></td>\n<td></td>\n<td>Do not display the “percentage served within XX [ms] table”. (legacy support).不重要</td>\n</tr>\n<tr>\n<td>-e</td>\n<td><em><strong>csv-file</strong></em></td>\n<td>编写一个逗号分隔值 (CSV) 文件，其中包含每个百分比（从 1% 到 100%）处理该百分比请求所需的时间（以毫秒为单位）。这通常比“gnuplot”文件更有用；因为结果已经被“装箱”了。</td>\n</tr>\n<tr>\n<td>-E</td>\n<td><em><strong>client-certificate-file</strong></em></td>\n<td>连接到 SSL 网站时，使用提供的 PEM 格式的客户端证书向服务器进行身份验证。该文件应包含客户端证书，然后是中间证书，然后是私钥。在 2.4.36 及更高版本中可用。</td>\n</tr>\n<tr>\n<td>-f</td>\n<td><em><strong>protocol</strong></em></td>\n<td>指定 SSL&#x2F;TLS 协议（SSL2、SSL3、TLS1、TLS1.1、TLS1.2 或 ALL）。 TLS1.1 和 TLS1.2 支持在 2.4.4 及更高版本中可用。</td>\n</tr>\n<tr>\n<td><strong>-H</strong></td>\n<td><em><strong>custom-header</strong></em></td>\n<td>支持添加额外的 headers 到 request ；如 “Accept-Encoding: zip&#x2F;zop;8bit”</td>\n</tr>\n<tr>\n<td>-i</td>\n<td></td>\n<td>执行 HEAD 请求而不是 GET 请求。</td>\n</tr>\n<tr>\n<td><strong>-k</strong></td>\n<td></td>\n<td>开启 http keep-alive 特性，比如在一个 HTTP会话中执行多个请求。默认为无 KeepAlive。</td>\n</tr>\n<tr>\n<td>-m</td>\n<td><em><strong>HTTP-method</strong></em></td>\n<td>自定义 http method，2.4.10 之后版本可用</td>\n</tr>\n<tr>\n<td>-n</td>\n<td><em><strong>requests</strong></em></td>\n<td>基准测试会话执行的请求数。默认情况下只执行单个请求，这通常会导致不具有代表性的基准测试结果。</td>\n</tr>\n<tr>\n<td>-p</td>\n<td><em><strong>POST-file</strong></em></td>\n<td>包含要POST数据的文件。记住还要设置-T。</td>\n</tr>\n<tr>\n<td><strong>-P</strong></td>\n<td><em><strong>proxy-auth-username</strong></em> <strong>:</strong> <em><strong>password</strong></em></td>\n<td>在途中向代理提供BASIC身份验证凭据。用户名和密码由一个:分隔，并通过 wire base64编码发送。无论代理是否需要该字符串(即，是否发送了需要的407代理身份验证)，都将发送该字符串。</td>\n</tr>\n<tr>\n<td><strong>-q</strong></td>\n<td></td>\n<td>当处理超过150个请求时，ab每10%或大约100个请求输出一个stderr进度计数。-q标志将抑制这些消息。</td>\n</tr>\n<tr>\n<td><strong>-r</strong></td>\n<td></td>\n<td>不要在套接字接收错误时退出。</td>\n</tr>\n<tr>\n<td><strong>-s</strong></td>\n<td><em><strong>timeout</strong></em></td>\n<td>在套接字超时之前等待的最大秒数。默认为30秒。在2.4.4及以后版本中可用。</td>\n</tr>\n<tr>\n<td><strong>-S</strong></td>\n<td></td>\n<td>不要显示中值和标准偏差值，也不要在平均值和中值相差超过标准偏差的一倍或两倍时显示警告&#x2F;错误消息。默认为min&#x2F;avg&#x2F;max值。(遗留支持)</td>\n</tr>\n<tr>\n<td><strong>-t</strong></td>\n<td><em><strong>timelimit</strong></em></td>\n<td>用于基准测试的最大秒数。这在内部意味着-n 50000。使用它可以在固定的总时间内对服务器进行基准测试。默认情况下没有时间限制。</td>\n</tr>\n<tr>\n<td><strong>-T</strong></td>\n<td><em><strong>content-type</strong></em></td>\n<td>用于 POST&#x2F;PUT 数据 数据的内容类型标头;如application&#x2F;x-www-form-urlencoded. 默认 text&#x2F;plain</td>\n</tr>\n<tr>\n<td><strong>-u</strong></td>\n<td><em><strong>PUT-file</strong></em></td>\n<td>包含要PUT的数据的文件。记住还要设置-T。</td>\n</tr>\n<tr>\n<td><strong>-v</strong></td>\n<td><em><strong>verbosity</strong></em></td>\n<td>设置详细级别- 4及以上将打印标题信息，3及以上将打印响应代码(404、200等)，2及以上将打印警告和信息。</td>\n</tr>\n</tbody></table>\n<h2 id=\"使用-ab-进行测试\"><a href=\"#使用-ab-进行测试\" class=\"headerlink\" title=\"使用 ab 进行测试\"></a>使用 ab 进行测试</h2><p>下面是一个非常简单的 api 代码，启动 web server 之后通过 <a href=\"http://localhost:8080/api/test\">http://localhost:8080/api/test</a> 即可请求。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@RestController</span></span><br><span class=\"line\"><span class=\"meta\">@RequestMapping(&quot;api&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">PressureService</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@RequestMapping(&quot;test&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">test</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> InterruptedException &#123;</span><br><span class=\"line\">        Thread.sleep(<span class=\"number\">3000</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;abc&quot;</span> + <span class=\"keyword\">new</span> <span class=\"title class_\">String</span>(<span class=\"string\">&quot;bcd&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>执行如下命令 <code>ab -n 200 -c 100 http://localhost:8080/api/test</code>；总共发送 200 个请求，每次请求并发 100，得到的结果如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">➜  ~ ab -n 200 -c 100  http://localhost:8080/api/test</span><br><span class=\"line\">This is ApacheBench, Version 2.3 &lt;$Revision: 1879490 $&gt;</span><br><span class=\"line\">Copyright 1996 Adam Twiss, Zeus Technology Ltd, http://www.zeustech.net/</span><br><span class=\"line\">Licensed to The Apache Software Foundation, http://www.apache.org/</span><br><span class=\"line\"></span><br><span class=\"line\">Benchmarking localhost (be patient)</span><br><span class=\"line\">apr_pollset_poll: The timeout specified has expired (70007)</span><br></pre></td></tr></table></figure>\n\n<p>可以看到这里没有得到正常的测试反馈结果；报了 <code>apr_pollset_poll: The timeout specified has expired (70007)</code>；出现这个 maessage 的原因是 <strong>timeout 连接超时了。</strong> 通过上面那个表中的 options 来看，可以通过加 -k 和 -s 来分别指定 下 keep-alive 和 超时时间，也可以通过 -r 来规避遇到socket接收错误后，不退出测试。</p>\n<h3 id=\"使用-k-和-s\"><a href=\"#使用-k-和-s\" class=\"headerlink\" title=\"使用 -k 和 -s\"></a>使用 -k 和 -s</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">➜  ~ ab -n 200 -c 10 -s 5000 -k  http://localhost:8080/api/test</span><br><span class=\"line\">This is ApacheBench, Version 2.3 &lt;$Revision: 1879490 $&gt;</span><br><span class=\"line\">Copyright 1996 Adam Twiss, Zeus Technology Ltd, http://www.zeustech.net/</span><br><span class=\"line\">Licensed to The Apache Software Foundation, http://www.apache.org/</span><br><span class=\"line\"></span><br><span class=\"line\">Benchmarking localhost (be patient)</span><br><span class=\"line\">Completed 100 requests</span><br><span class=\"line\">Completed 200 requests</span><br><span class=\"line\">Finished 200 requests</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">Server Software:</span><br><span class=\"line\">Server Hostname:        localhost</span><br><span class=\"line\">Server Port:            8080</span><br><span class=\"line\"></span><br><span class=\"line\">Document Path:          /api/test</span><br><span class=\"line\">Document Length:        6 bytes</span><br><span class=\"line\"></span><br><span class=\"line\">Concurrency Level:      10</span><br><span class=\"line\">Time taken for tests:   352.210 seconds</span><br><span class=\"line\">Complete requests:      200</span><br><span class=\"line\">Failed requests:        8</span><br><span class=\"line\">   (Connect: 0, Receive: 0, Length: 8, Exceptions: 0)</span><br><span class=\"line\">Keep-Alive requests:    192</span><br><span class=\"line\">Total transferred:      27840 bytes</span><br><span class=\"line\">HTML transferred:       1152 bytes</span><br><span class=\"line\">Requests per second:    0.57 [#/sec] (mean)</span><br><span class=\"line\">Time per request:       17610.485 [ms] (mean)</span><br><span class=\"line\">Time per request:       1761.049 [ms] (mean, across all concurrent requests)</span><br><span class=\"line\">Transfer rate:          0.08 [Kbytes/sec] received</span><br><span class=\"line\"></span><br><span class=\"line\">Connection Times (ms)</span><br><span class=\"line\">              min  mean[+/-sd] median   max</span><br><span class=\"line\">Connect:        0    0   0.1      0       1</span><br><span class=\"line\">Processing:  3002 15972 44971.8   3006  218613</span><br><span class=\"line\">Waiting:        0 11492 40519.5   3006  218613</span><br><span class=\"line\">Total:       3002 15972 44971.9   3006  218613</span><br><span class=\"line\"></span><br><span class=\"line\">Percentage of the requests served within a certain time (ms)</span><br><span class=\"line\">  50%   3006</span><br><span class=\"line\">  66%   3006</span><br><span class=\"line\">  75%   3007</span><br><span class=\"line\">  80%   3007</span><br><span class=\"line\">  90%   3008</span><br><span class=\"line\">  95%  112001</span><br><span class=\"line\">  98%  209597</span><br><span class=\"line\">  99%  215607</span><br><span class=\"line\"> 100%  218613 (longest request)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"使用-r\"><a href=\"#使用-r\" class=\"headerlink\" title=\"使用 -r\"></a>使用 -r</h3><p>在不适用 -r 的请求下，</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">➜  ~ ab -n 200 -c 100 -s 5000 -k -r  http://localhost:8080/api/test</span><br><span class=\"line\">This is ApacheBench, Version 2.3 &lt;$Revision: 1879490 $&gt;</span><br><span class=\"line\">Copyright 1996 Adam Twiss, Zeus Technology Ltd, http://www.zeustech.net/</span><br><span class=\"line\">Licensed to The Apache Software Foundation, http://www.apache.org/</span><br><span class=\"line\"></span><br><span class=\"line\">Benchmarking localhost (be patient)</span><br><span class=\"line\">Completed 100 requests</span><br><span class=\"line\">Completed 200 requests</span><br><span class=\"line\">Finished 200 requests</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">Server Software:</span><br><span class=\"line\">Server Hostname:        localhost</span><br><span class=\"line\">Server Port:            8080</span><br><span class=\"line\"></span><br><span class=\"line\">Document Path:          /api/test</span><br><span class=\"line\">Document Length:        6 bytes</span><br><span class=\"line\"></span><br><span class=\"line\">Concurrency Level:      100</span><br><span class=\"line\">Time taken for tests:   107.100 seconds</span><br><span class=\"line\">Complete requests:      200</span><br><span class=\"line\">Failed requests:        147</span><br><span class=\"line\">   (Connect: 0, Receive: 0, Length: 147, Exceptions: 0)</span><br><span class=\"line\">Keep-Alive requests:    53</span><br><span class=\"line\">Total transferred:      7685 bytes</span><br><span class=\"line\">HTML transferred:       318 bytes</span><br><span class=\"line\">Requests per second:    1.87 [#/sec] (mean)</span><br><span class=\"line\">Time per request:       53549.816 [ms] (mean)</span><br><span class=\"line\">Time per request:       535.498 [ms] (mean, across all concurrent requests)</span><br><span class=\"line\">Transfer rate:          0.07 [Kbytes/sec] received</span><br><span class=\"line\"></span><br><span class=\"line\">Connection Times (ms)</span><br><span class=\"line\">              min  mean[+/-sd] median   max</span><br><span class=\"line\">Connect:        0    3   2.1      3       8</span><br><span class=\"line\">Processing:  3002 43074 19044.3  49998   75116</span><br><span class=\"line\">Waiting:        0 5502 15736.0      0   75116</span><br><span class=\"line\">Total:       3002 43077 19045.5  50002   75117</span><br><span class=\"line\"></span><br><span class=\"line\">Percentage of the requests served within a certain time (ms)</span><br><span class=\"line\">  50%  50002</span><br><span class=\"line\">  66%  50003</span><br><span class=\"line\">  75%  54088</span><br><span class=\"line\">  80%  54089</span><br><span class=\"line\">  90%  54090</span><br><span class=\"line\">  95%  54092</span><br><span class=\"line\">  98%  66104</span><br><span class=\"line\">  99%  72112</span><br><span class=\"line\"> 100%  75117 (longest request)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Connection-reset-by-peer\"><a href=\"#Connection-reset-by-peer\" class=\"headerlink\" title=\"Connection reset by peer\"></a>Connection reset by peer</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">➜  ~ ab -n 200 -c 100 -s 5000 -k  http://localhost:8080/api/test</span><br><span class=\"line\">This is ApacheBench, Version 2.3 &lt;$Revision: 1879490 $&gt;</span><br><span class=\"line\">Copyright 1996 Adam Twiss, Zeus Technology Ltd, http://www.zeustech.net/</span><br><span class=\"line\">Licensed to The Apache Software Foundation, http://www.apache.org/</span><br><span class=\"line\"></span><br><span class=\"line\">Benchmarking localhost (be patient)</span><br><span class=\"line\">apr_socket_recv: Connection reset by peer (54)</span><br></pre></td></tr></table></figure>\n\n<p><code>Connection reset by peer</code>也会导致 ab 中途退出，从本地测试来看，当并发数增加时，出现该问题的比率会增加；Connection Reset by peer 意味着远端终止了会话，即当操作系统接收到远端服务器的RST (TCP Reset)通知时会产生此错误。在使用 ab 时，可以通过 -r 来忽略这种错误，在遇到socket接收错误后，不退出测试。</p>\n<h2 id=\"ab-的结果解析\"><a href=\"#ab-的结果解析\" class=\"headerlink\" title=\"ab 的结果解析\"></a>ab 的结果解析</h2><h3 id=\"版本相关\"><a href=\"#版本相关\" class=\"headerlink\" title=\"版本相关\"></a>版本相关</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">This is ApacheBench, Version 2.3 &lt;$Revision: 1879490 $&gt;</span><br><span class=\"line\">Copyright 1996 Adam Twiss, Zeus Technology Ltd, http://www.zeustech.net/</span><br><span class=\"line\">Licensed to The Apache Software Foundation, http://www.apache.org/</span><br></pre></td></tr></table></figure>\n\n<p>这部分信息是 ab 的版本信息，可以忽略。</p>\n<h3 id=\"测试完成度\"><a href=\"#测试完成度\" class=\"headerlink\" title=\"测试完成度\"></a>测试完成度</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Benchmarking localhost (be patient)</span><br><span class=\"line\">Completed 100 requests</span><br><span class=\"line\">Completed 200 requests</span><br><span class=\"line\">Finished 200 requests</span><br></pre></td></tr></table></figure>\n\n<p>以上内容显示测试完成度，通过分行显示当前完成数量。</p>\n<h3 id=\"测试服务器信息\"><a href=\"#测试服务器信息\" class=\"headerlink\" title=\"测试服务器信息\"></a>测试服务器信息</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Server Software:</span><br><span class=\"line\">Server Hostname:        localhost</span><br><span class=\"line\">Server Port:            8080</span><br></pre></td></tr></table></figure>\n\n<p>Server Software 一栏没有数据，因为本地启动的 server 容器；其他两个就是地址和端口。</p>\n<h3 id=\"地址和包大小\"><a href=\"#地址和包大小\" class=\"headerlink\" title=\"地址和包大小\"></a>地址和包大小</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Document Path:          /api/test</span><br><span class=\"line\">Document Length:        6 bytes</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"测试数据详情\"><a href=\"#测试数据详情\" class=\"headerlink\" title=\"测试数据详情\"></a>测试数据详情</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Concurrency Level:      100</span><br><span class=\"line\">Time taken for tests:   107.100 seconds</span><br><span class=\"line\">Complete requests:      200</span><br><span class=\"line\">Failed requests:        147</span><br><span class=\"line\">   (Connect: 0, Receive: 0, Length: 147, Exceptions: 0)</span><br><span class=\"line\">Keep-Alive requests:    53</span><br><span class=\"line\">Total transferred:      7685 bytes</span><br><span class=\"line\">HTML transferred:       318 bytes</span><br><span class=\"line\">Requests per second:    1.87 [#/sec] (mean)</span><br><span class=\"line\">Time per request:       53549.816 [ms] (mean)</span><br><span class=\"line\">Time per request:       535.498 [ms] (mean, across all concurrent requests)</span><br><span class=\"line\">Transfer rate:          0.07 [Kbytes/sec] received</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>Concurrency Level：并发数，-c 参数值</li>\n<li>Time taken for tests：本次测试总共花费的时间</li>\n<li>Complete requests：本次请求执行的请求数总量</li>\n<li>Failed requests：失败的请求数量。因网络原因或服务器性能原因，发起的请求并不一定全部成功，通过该数值和Complete requests相除可以计算请求的失败率，作为测试结果的重要参考。</li>\n<li>Keep-Alive requests：使用长连接的请求数量</li>\n<li>Total transferred：总共传输的数据量，指的是 ab 从被测服务器接收到的总数据量，包括文本内容和请求头信息。</li>\n<li>HTML transferred：从服务器接收到的 html 文件的总大小，等于 Document Length＊Complete requests</li>\n<li>Requests per second：平均每秒完成的请求数：QPS，是一个平均值，等于 Complete requests&#x2F;Time taken for tests</li>\n<li>Time per request：从用户角度看，完成一个请求所需要的时间（因用户数量不止一个，服务器完成 10 个请求，平均每个用户才接收到一个完整的返回，所以该值是下一项数值的10倍。）</li>\n<li>Time per request：服务器完成一个请求的时间。</li>\n<li>Transfer rate：网络传输速度，对于大文件的请求测试，这个值很容易成为系统瓶颈所在。要确定该值是不是瓶颈，需要了解客户端和被测服务器之间的网络情况，包括网络带宽和网卡速度等信息。</li>\n</ul>\n<h3 id=\"Time-per-request-统计信息\"><a href=\"#Time-per-request-统计信息\" class=\"headerlink\" title=\"Time per request 统计信息\"></a>Time per request 统计信息</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Connection Times (ms)</span><br><span class=\"line\">              min  mean[+/-sd] median   max</span><br><span class=\"line\">Connect:        0    3   2.1      3       8</span><br><span class=\"line\">Processing:  3002 43074 19044.3  49998   75116</span><br><span class=\"line\">Waiting:        0 5502 15736.0      0   75116</span><br><span class=\"line\">Total:       3002 43077 19045.5  50002   75117</span><br></pre></td></tr></table></figure>\n\n<p>对上面第一个 Time per request 进行细分和统计。一个请求的响应时间可以分成网络链接（Connect），系统处理（Processing）和等待（Waiting）三个部分。表中 min 表示最小值； mean 表示平均值；[+&#x2F;-sd] 表示标准差（Standard Deviation） ，也称均方差（mean square error），该数值越大表示数据越分散，系统响应时间越不稳定。 median 表示中位数； max 当表示最大值。</p>\n<p>Total 是从整个请求所需要的时间的角度来统计的。这里可以看到最慢的一个请求花费了 <strong>75117 m</strong>s，这个数据可以在下面的表中得到验证。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Percentage of the requests served within a certain time (ms)</span><br><span class=\"line\">  50%  50002</span><br><span class=\"line\">  66%  50003</span><br><span class=\"line\">  75%  54088</span><br><span class=\"line\">  80%  54089</span><br><span class=\"line\">  90%  54090</span><br><span class=\"line\">  95%  54092</span><br><span class=\"line\">  98%  66104</span><br><span class=\"line\">  99%  72112</span><br><span class=\"line\"> 100%  75117 (longest request)</span><br></pre></td></tr></table></figure>\n\n<p>这个表第一行表示有 50% 的请求都是在 50002 ms 内完成的，<strong>这个值是比较接近平均系统响应时间（第一个 Time per request: 53549.816 <a href=\"mean\">ms</a> ）；</strong> 以此类推。</p>\n<p>前面看到响应时间最长的那个请求是 75117 ms，那么显然所有请求（100%）的时间都是小于等于 75117 ms 的，也就是表中最后一行的数据就是时间最长的那个请求（longest request）。</p>\n<h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><ul>\n<li><a href=\"https://www.cnblogs.com/gumuzi/p/5617232.html\">https://www.cnblogs.com/gumuzi/p/5617232.html</a></li>\n<li><a href=\"https://knowledge.broadcom.com/external/article/222862/what-does-connection-reset-by-peer-mean.html\">https://knowledge.broadcom.com/external/article/222862/what-does-connection-reset-by-peer-mean.html</a></li>\n<li><a href=\"https://github.com/vibora-io/vibora/issues/154\">https://github.com/vibora-io/vibora/issues/154</a></li>\n<li><a href=\"https://httpd.apache.org/docs/2.4/programs/ab.html\">https://httpd.apache.org/docs/2.4/programs/ab.html</a></li>\n</ul>\n","text":"Apache Benchmark Tool ab is a tool for benchmarking your Apache Hypertext Transf...","permalink":"/post/tests/test-benchmark-ab","photos":[],"count_time":{"symbolsCount":"10k","symbolsTime":"9 mins."},"categories":[{"name":"test","slug":"test","count":5,"path":"api/categories/test.json"}],"tags":[{"name":"test","slug":"test","count":5,"path":"api/tags/test.json"},{"name":"ab test","slug":"ab-test","count":1,"path":"api/tags/ab-test.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Apache-Benchmark-Tool\"><span class=\"toc-text\">Apache Benchmark Tool</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BD%BF%E7%94%A8-ab-%E8%BF%9B%E8%A1%8C%E6%B5%8B%E8%AF%95\"><span class=\"toc-text\">使用 ab 进行测试</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BD%BF%E7%94%A8-k-%E5%92%8C-s\"><span class=\"toc-text\">使用 -k 和 -s</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BD%BF%E7%94%A8-r\"><span class=\"toc-text\">使用 -r</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Connection-reset-by-peer\"><span class=\"toc-text\">Connection reset by peer</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#ab-%E7%9A%84%E7%BB%93%E6%9E%9C%E8%A7%A3%E6%9E%90\"><span class=\"toc-text\">ab 的结果解析</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%89%88%E6%9C%AC%E7%9B%B8%E5%85%B3\"><span class=\"toc-text\">版本相关</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%B5%8B%E8%AF%95%E5%AE%8C%E6%88%90%E5%BA%A6\"><span class=\"toc-text\">测试完成度</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%B5%8B%E8%AF%95%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%BF%A1%E6%81%AF\"><span class=\"toc-text\">测试服务器信息</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%9C%B0%E5%9D%80%E5%92%8C%E5%8C%85%E5%A4%A7%E5%B0%8F\"><span class=\"toc-text\">地址和包大小</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%B5%8B%E8%AF%95%E6%95%B0%E6%8D%AE%E8%AF%A6%E6%83%85\"><span class=\"toc-text\">测试数据详情</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Time-per-request-%E7%BB%9F%E8%AE%A1%E4%BF%A1%E6%81%AF\"><span class=\"toc-text\">Time per request 统计信息</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%8F%82%E8%80%83\"><span class=\"toc-text\">参考</span></a></li></ol>","author":{"name":"glmapper","slug":"blog-author","avatar":"https://glmapper-blog.oss-cn-hangzhou.aliyuncs.com/common/favicon.ico","link":"/","description":"开放，开源，分享，共享","socials":{"github":"https://github.com/glmapper","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/2412872703","zhihu":"","csdn":"","juejin":"https://juejin.cn/user/3227821827961806","customs":{"sofastack":{"icon":"https://glmapper-blog.oss-cn-hangzhou.aliyuncs.com/common/sofastack.svg","link":"https://www.sofastack.tech/"}}}},"mapped":true,"hidden":false,"prev_post":{"title":"RocketMQ 本地部署问题总结","uid":"8c745d5436d89ed91d5d8624c45dc15a","slug":"mq/rocketmq/rocketmq-deploy-issue","date":"2022-09-22T13:29:02.000Z","updated":"2024-07-05T04:09:05.794Z","comments":true,"path":"api/articles/mq/rocketmq/rocketmq-deploy-issue.json","keywords":null,"cover":[],"text":"本篇分为 RocketMQ 部署和 RocketMQ-dashboard 部署两部分，主要是 RocketMQ 部署问题较多，汇总了下网上各路大神以及官方 is...","permalink":"/post/mq/rocketmq/rocketmq-deploy-issue","photos":[],"count_time":{"symbolsCount":"2.6k","symbolsTime":"2 mins."},"categories":[{"name":"RocketMQ","slug":"RocketMQ","count":2,"path":"api/categories/RocketMQ.json"}],"tags":[{"name":"RocketMQ","slug":"RocketMQ","count":3,"path":"api/tags/RocketMQ.json"}],"author":{"name":"glmapper","slug":"blog-author","avatar":"https://glmapper-blog.oss-cn-hangzhou.aliyuncs.com/common/favicon.ico","link":"/","description":"开放，开源，分享，共享","socials":{"github":"https://github.com/glmapper","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/2412872703","zhihu":"","csdn":"","juejin":"https://juejin.cn/user/3227821827961806","customs":{"sofastack":{"icon":"https://glmapper-blog.oss-cn-hangzhou.aliyuncs.com/common/sofastack.svg","link":"https://www.sofastack.tech/"}}}}},"next_post":{"title":"浅析 SOFA 注册中心数据同步","uid":"2c6664cf4370278f829998c803443e3c","slug":"sofa/sofa-registry-sync-data","date":"2022-09-12T02:58:30.000Z","updated":"2024-07-05T04:09:05.801Z","comments":true,"path":"api/articles/sofa/sofa-registry-sync-data.json","keywords":null,"cover":[],"text":"本篇主要对 SOFARegistry 的数据同步模块进行解析，对于注册中心的概念以及 SOFARegistry 的基础架构不做过多阐述，相关介绍可以见海量数据下...","permalink":"/post/sofa/sofa-registry-sync-data","photos":[],"count_time":{"symbolsCount":"8.6k","symbolsTime":"8 mins."},"categories":[{"name":"SOFA","slug":"SOFA","count":9,"path":"api/categories/SOFA.json"}],"tags":[{"name":"注册中心","slug":"注册中心","count":1,"path":"api/tags/注册中心.json"},{"name":"分布式","slug":"分布式","count":6,"path":"api/tags/分布式.json"}],"author":{"name":"glmapper","slug":"blog-author","avatar":"https://glmapper-blog.oss-cn-hangzhou.aliyuncs.com/common/favicon.ico","link":"/","description":"开放，开源，分享，共享","socials":{"github":"https://github.com/glmapper","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/2412872703","zhihu":"","csdn":"","juejin":"https://juejin.cn/user/3227821827961806","customs":{"sofastack":{"icon":"https://glmapper-blog.oss-cn-hangzhou.aliyuncs.com/common/sofastack.svg","link":"https://www.sofastack.tech/"}}}}}}