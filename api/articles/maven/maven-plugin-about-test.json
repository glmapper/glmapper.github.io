{"title":"聊 一聊 maven 测试相关的插件","uid":"852e241ff76b8d8f5b786f53987404dc","slug":"maven/maven-plugin-about-test","date":"2022-07-31T03:09:51.000Z","updated":"2024-07-05T04:09:05.782Z","comments":true,"path":"api/articles/maven/maven-plugin-about-test.json","keywords":"宋国磊, glmapper, 卫恒, 分享, 开源","cover":[],"content":"<p>在之前的 <a href=\"https://juejin.cn/post/6919490393893502984\">聊一聊 maven 生命周期和 maven 插件编写</a> 这篇文章中，简单聊了点maven 构建生命周期和如何编写一个 maven 插件。本篇文章从插件入手，来探讨下 maven 中那些于测试相关的插件，这些插件与工程师日常开发是密切相关的，可能很多情况下你不需要关注，因为已经有前辈帮你搞完了；“事不关己高高挂起” 与 “知其然知其所以然” 是两种不同的态度，对待技术，我建议是后者！</p>\n<span id=\"more\"></span>\n\n<h2 id=\"maven-surefire-plugin\"><a href=\"#maven-surefire-plugin\" class=\"headerlink\" title=\"maven-surefire-plugin\"></a>maven-surefire-plugin</h2><p>在 Maven 项目中，用户基于 JUnit 或 TestNG 编写好了测试代码，这部分是工程师 coding 必须要要做好的；本地可以使用 idea 带的工具进行执行；倒是如果需要在 ci 中执行并且产出测试报告，idea 就帮不上什么忙了；此时，就需要依赖 maven 插件来帮助解决。执行测试代码，需要靠 <code>maven-surefire-plugin</code> 插件来实现。</p>\n<p>一般情况下，工程师不需要显示配置 <code>maven-surefire-plugin</code> 插件，它是 mvn test 默认依赖使用的。</p>\n<h3 id=\"为什么用例没有执行\"><a href=\"#为什么用例没有执行\" class=\"headerlink\" title=\"为什么用例没有执行\"></a>为什么用例没有执行</h3><p>看下面这张图，使用的 <code>junit</code> 版本是 <code>4.13.2</code>。</p>\n<p><img src=\"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/8cfb0d311a544e3c909eef950b98e883~tplv-k3u1fbpfcp-watermark.image\" alt=\"image.png\"></p>\n<p>一个非常简单的 demo，demo 中只有一个单元测试用例，当使用 <code>mvn test</code> 执行时发现:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Tests run: 0, Failures: 0, Errors: 0, Skipped: 0</span><br></pre></td></tr></table></figure>\n<p>我去翻了一下插件的 <a href=\"https://maven.apache.org/surefire/maven-surefire-plugin/examples/junit.html\">使用介绍</a>，看到了下面这段说明：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">If nothing is configured, Surefire detects which JUnit version to use by the</span><br><span class=\"line\">following algorithm:</span><br><span class=\"line\"></span><br><span class=\"line\">1. if the JUnit 5 Platform Engine is present in the project</span><br><span class=\"line\">    use junit-platform</span><br><span class=\"line\">2. if the JUnit version in the project &gt;= 4.7 and the &lt;&lt;&lt;parallel&gt;&gt;&gt; configuration parameter has ANY value</span><br><span class=\"line\">    use junit47 provider</span><br><span class=\"line\">3. if JUnit &gt;= 4.0 is present</span><br><span class=\"line\">    use junit4 provider</span><br><span class=\"line\">4. else</span><br><span class=\"line\">    use junit3.8.1</span><br></pre></td></tr></table></figure>\n\n<p>图中可以看到 <code>maven-surefire-plugin</code> 版本是 <code>2.22.2</code>，demo 中所使用的 <code>junit</code> 版本是 <code>4.13.2</code>，属于第二种算法：<strong>use junit47 provider</strong>，就是说如果是 JUnit 4.7 及以上版本，可以明确<br>声明一下：</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>目前已经提供的 provider 有 surefire-junit3, surefire-junit4, surefire-junit47 以及 surefire-testng</p></blockquote>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">build</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">plugins</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.apache.maven.plugins<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>maven-surefire-plugin<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.22.2<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.apache.maven.surefire<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>surefire-junit47<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.22.2<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">plugins</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">build</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>重新执行 <code>mvn test</code> 发现确实可以了。</p>\n<p><img src=\"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/d86798ed3b134b1fa86f8b227787ecda~tplv-k3u1fbpfcp-watermark.image\" alt=\"image.png\"></p>\n<p>那既然是基于版本去匹配的，那么换个思路，如果不通过配置来明确 junit 版本，是不是也可以通过另外一种降低 <code>maven-surefire-plugin</code> 来匹配；事实证明猎奇心理是有意思的，当把版本降到 2.21.0 时，发现用例也能正常跑。</p>\n<p><img src=\"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/db4f03e9c3d94c38b80177314d0e7c65~tplv-k3u1fbpfcp-watermark.image\" alt=\"image.png\"></p>\n<h3 id=\"跳过用例\"><a href=\"#跳过用例\" class=\"headerlink\" title=\"跳过用例\"></a>跳过用例</h3><p>默认情况下，surefire 插件会自动包含所有具有以下通配符模式的测试类：</p>\n<ul>\n<li><code>&quot;**/Test*.java&quot;</code>- 包括其所有子目录和所有以“Test”开头的 Java 文件名。</li>\n<li><code>&quot;**/*Test.java&quot;</code>- 包括其所有子目录和所有以“Test”结尾的 Java 文件名。</li>\n<li><code>&quot;**/*Tests.java&quot;</code>- 包括其所有子目录和所有以“Tests”结尾的 Java 文件名。</li>\n<li><code>&quot;**/*TestCase.java&quot;</code>- 包括其所有子目录和所有以“TestCase”结尾的 Java 文件名。</li>\n</ul>\n<p>如果测试类不遵循默认通配符模式，则需要通过配置 Surefire 插件覆盖它们并指定要包含（或排除）的测试，否则可能扫不到，如下面这个就没有被执行到。</p>\n<p><img src=\"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/ef73bc67040f45859ea52ab7815c74d1~tplv-k3u1fbpfcp-watermark.image\" alt=\"image.png\"></p>\n<p>然后通过指定规则来匹配</p>\n<p><img src=\"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/deb9ad9ad1124019b42f215ff8916337~tplv-k3u1fbpfcp-watermark.image\" alt=\"image.png\"></p>\n<p>同理，也可以通过 excludes 来排除不需要执行的用例</p>\n<p><img src=\"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/a919b6d12b884b9b9a88715517f8d90b~tplv-k3u1fbpfcp-watermark.image\" alt=\"image.png\"></p>\n<h3 id=\"使用-mvn-指令来执行单个用例\"><a href=\"#使用-mvn-指令来执行单个用例\" class=\"headerlink\" title=\"使用 mvn 指令来执行单个用例\"></a>使用 mvn 指令来执行单个用例</h3><p>大多数情况下，工程师习惯于面向 idea 来执行单个用例，这种方式是非常便捷的；当然同样也可以使用 mvn 命令来指定单个用例执行，以上面的例子来看，执行 Diff 这个用例可以这样：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mvn <span class=\"built_in\">test</span> -Dtest=Diff</span><br></pre></td></tr></table></figure>\n<p>-Dtest 表示当前测试方法所在的测试类，当然也支持通配符 <code>*</code>。</p>\n<h2 id=\"jacoco-maven-plugin\"><a href=\"#jacoco-maven-plugin\" class=\"headerlink\" title=\"jacoco-maven-plugin\"></a>jacoco-maven-plugin</h2><p>执行用例之后一般需要产生测试报告，目前 jacoco 是最流行的。可以通过如下方式在 pom 中声明：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.jacoco<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>jacoco-maven-plugin<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>0.8.2<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">executions</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">execution</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">goals</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">goal</span>&gt;</span>prepare-agent<span class=\"tag\">&lt;/<span class=\"name\">goal</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">goals</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">execution</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- attached to Maven test phase --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">execution</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">id</span>&gt;</span>report<span class=\"tag\">&lt;/<span class=\"name\">id</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">phase</span>&gt;</span>test<span class=\"tag\">&lt;/<span class=\"name\">phase</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">goals</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">goal</span>&gt;</span>report<span class=\"tag\">&lt;/<span class=\"name\">goal</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">goals</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">execution</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">executions</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">plugin</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>重新执行 <code>mvn test</code> 可以看到 jacoco 执行的日志</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[INFO] --- jacoco-maven-plugin:0.8.2:report (report) @ maven-plugin-guides ---</span><br><span class=\"line\">[INFO] Loading execution data file /Users/xxx/Documents/projects/github/gl-guides/maven-plugin-guides/target/jacoco.exec</span><br><span class=\"line\">[INFO] Analyzed bundle &#x27;maven-plugin-guides&#x27; with 2 classes</span><br><span class=\"line\">[INFO] ------------------------------------------------------------------------</span><br><span class=\"line\">[INFO] Reactor Summary:</span><br><span class=\"line\">[INFO] </span><br><span class=\"line\">[INFO] gl-guides 0.0.1-SNAPSHOT ........................... SUCCESS [  0.172 s]</span><br><span class=\"line\">[INFO] maven-plugin-guides 0.0.1-SNAPSHOT ................. SUCCESS [  3.151 s]</span><br><span class=\"line\">[INFO] ------------------------------------------------------------------------</span><br><span class=\"line\">[INFO] BUILD SUCCESS</span><br><span class=\"line\">[INFO] ------------------------------------------------------------------------</span><br></pre></td></tr></table></figure>\n<p>此时会在 target&#x2F;site 目录下产生数据报告（ps: 这个默认路径是可以修改的）</p>\n<p><img src=\"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/920a96fe4d0748deb0870d2097b5d0f2~tplv-k3u1fbpfcp-watermark.image\" alt=\"image.png\"><br>打开 index.html 有详细的测试报告描述，大致如下：</p>\n<ul>\n<li><p>1、测试报告概览<br><img src=\"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/5f9b4a3cad384d0eb3f3db77b96c7b22~tplv-k3u1fbpfcp-watermark.image\" alt=\"image.png\"></p>\n</li>\n<li><p>2、包概览<br><img src=\"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/6edca997e77249c8ae2d38a6f679885e~tplv-k3u1fbpfcp-watermark.image\" alt=\"image.png\"></p>\n</li>\n<li><p>3、类概览<br><img src=\"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/6c41b1e943c641808e67c6922dcea14d~tplv-k3u1fbpfcp-watermark.image\" alt=\"image.png\"></p>\n</li>\n</ul>\n<p>对于某个核心的逻辑，如果期望这些代码的覆盖率必须满足一定的指标，也是可以通过 jacoco 来配置和设定的；比如我的测试类 PrepareTestInstance</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">PrepareTestInstance</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">int</span> <span class=\"title function_\">add</span><span class=\"params\">(<span class=\"type\">int</span> a, <span class=\"type\">int</span> b)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (a &lt; <span class=\"number\">0</span> || b &lt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">IllegalArgumentException</span>();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> a + b;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>覆盖率必须达到80%，可以这样配置，增加插件的 execution </p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">execution</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">id</span>&gt;</span>jacoco-check<span class=\"tag\">&lt;/<span class=\"name\">id</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">goals</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">goal</span>&gt;</span>check<span class=\"tag\">&lt;/<span class=\"name\">goal</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">goals</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">configuration</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">rules</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">rule</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">element</span>&gt;</span>PACKAGE<span class=\"tag\">&lt;/<span class=\"name\">element</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">limits</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">limit</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">counter</span>&gt;</span>LINE<span class=\"tag\">&lt;/<span class=\"name\">counter</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>COVEREDRATIO<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">minimum</span>&gt;</span>0.8<span class=\"tag\">&lt;/<span class=\"name\">minimum</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;/<span class=\"name\">limit</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">limits</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">rule</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">rules</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">configuration</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">execution</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>然后通过 <code>mvn verify</code> 来执行 check，如果覆盖率不满足，则会得到如下的报错：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[INFO] --- jacoco-maven-plugin:0.8.2:check (jacoco-check) @ maven-plugin-guides ---</span><br><span class=\"line\">[INFO] Loading execution data file /Users/xxx/Documents/projects/github/gl-guides/maven-plugin-guides/target/jacoco.exec</span><br><span class=\"line\">[INFO] Analyzed bundle &#x27;maven-plugin-guides&#x27; with 2 classes</span><br><span class=\"line\">[WARNING] Rule violated for package com.gl.guides.mvn: lines covered ratio is 0.4, but expected minimum is 0.8</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>本文主要对 maven 的测试执行和测试报告产生对应的两个插件进行了介绍，希望通过本文，读者可以对这块有个基本的认识，以便于在日常的开发工作中，能够应对类似的问题和场景。</p>\n<p><strong>如果本篇文章对你有帮助，请不要吝啬点赞评论哦～，读者的认可才是持续输出的动力所在…</strong></p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>原文：<a href=\"https://juejin.cn/post/7126543596567658503\">https://juejin.cn/post/7126543596567658503</a></p></blockquote>\n","text":"在之前的 聊一聊 maven 生命周期和 maven 插件编写 这篇文章中，简单聊了点maven 构建生命周期和如何编写一个 maven 插件。本篇文章从插件入...","permalink":"/post/maven/maven-plugin-about-test","photos":[],"count_time":{"symbolsCount":"5.9k","symbolsTime":"5 mins."},"categories":[{"name":"maven","slug":"maven","count":4,"path":"api/categories/maven.json"}],"tags":[{"name":"maven","slug":"maven","count":4,"path":"api/tags/maven.json"},{"name":"maven plugin","slug":"maven-plugin","count":3,"path":"api/tags/maven-plugin.json"},{"name":"testing","slug":"testing","count":1,"path":"api/tags/testing.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#maven-surefire-plugin\"><span class=\"toc-text\">maven-surefire-plugin</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%B8%BA%E4%BB%80%E4%B9%88%E7%94%A8%E4%BE%8B%E6%B2%A1%E6%9C%89%E6%89%A7%E8%A1%8C\"><span class=\"toc-text\">为什么用例没有执行</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%B7%B3%E8%BF%87%E7%94%A8%E4%BE%8B\"><span class=\"toc-text\">跳过用例</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BD%BF%E7%94%A8-mvn-%E6%8C%87%E4%BB%A4%E6%9D%A5%E6%89%A7%E8%A1%8C%E5%8D%95%E4%B8%AA%E7%94%A8%E4%BE%8B\"><span class=\"toc-text\">使用 mvn 指令来执行单个用例</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#jacoco-maven-plugin\"><span class=\"toc-text\">jacoco-maven-plugin</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%80%BB%E7%BB%93\"><span class=\"toc-text\">总结</span></a></li></ol>","author":{"name":"glmapper","slug":"blog-author","avatar":"https://glmapper-blog.oss-cn-hangzhou.aliyuncs.com/common/favicon.ico","link":"/","description":"开放，开源，分享，共享","socials":{"github":"https://github.com/glmapper","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/2412872703","zhihu":"","csdn":"","juejin":"https://juejin.cn/user/3227821827961806","customs":{"sofastack":{"icon":"https://glmapper-blog.oss-cn-hangzhou.aliyuncs.com/common/sofastack.svg","link":"https://www.sofastack.tech/"}}}},"mapped":true,"hidden":false,"prev_post":{"title":"你知道 @Async 是怎么让方法异步执行的吗？","uid":"3784314f76c771adae1123b249748729","slug":"springboot/spring-boot-async-anno","date":"2022-09-12T01:05:44.000Z","updated":"2024-07-05T04:09:05.826Z","comments":true,"path":"api/articles/springboot/spring-boot-async-anno.json","keywords":"宋国磊, glmapper, 卫恒, 分享, 开源","cover":null,"text":"在阅读本文之前，你可以通过 Creating Asynchronous Methods 指导来体验下创建异步方法的使用方式。 为什么要写这篇文章，本质上对于这些...","permalink":"/post/springboot/spring-boot-async-anno","photos":[],"count_time":{"symbolsCount":"8.2k","symbolsTime":"7 mins."},"categories":[{"name":"SpringBoot","slug":"SpringBoot","count":17,"path":"api/categories/SpringBoot.json"}],"tags":[{"name":"SpringBoot","slug":"SpringBoot","count":17,"path":"api/tags/SpringBoot.json"}],"author":{"name":"glmapper","slug":"blog-author","avatar":"https://glmapper-blog.oss-cn-hangzhou.aliyuncs.com/common/favicon.ico","link":"/","description":"开放，开源，分享，共享","socials":{"github":"https://github.com/glmapper","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/2412872703","zhihu":"","csdn":"","juejin":"https://juejin.cn/user/3227821827961806","customs":{"sofastack":{"icon":"https://glmapper-blog.oss-cn-hangzhou.aliyuncs.com/common/sofastack.svg","link":"https://www.sofastack.tech/"}}}}},"next_post":{"title":"修改 YApi 的用户角色(添加管理员)","uid":"8b30d1846762e70f7f195028545f57f1","slug":"api/api-yapi-change-user-role-by-mongo","date":"2022-05-25T14:07:06.000Z","updated":"2024-07-05T04:09:05.745Z","comments":true,"path":"api/articles/api/api-yapi-change-user-role-by-mongo.json","keywords":"宋国磊, glmapper, 卫恒, 分享, 开源","cover":null,"text":"YApi 后端使用的是 MongoDB，先进入命令行管理工具： mongo 然后进入 yapi 数据库： use yapi 随后查询下指定用户的用户 id： d...","permalink":"/post/api/api-yapi-change-user-role-by-mongo","photos":[],"count_time":{"symbolsCount":546,"symbolsTime":"1 mins."},"categories":[{"name":"api","slug":"api","count":1,"path":"api/categories/api.json"}],"tags":[{"name":"api","slug":"api","count":1,"path":"api/tags/api.json"},{"name":"yapi","slug":"yapi","count":1,"path":"api/tags/yapi.json"}],"author":{"name":"glmapper","slug":"blog-author","avatar":"https://glmapper-blog.oss-cn-hangzhou.aliyuncs.com/common/favicon.ico","link":"/","description":"开放，开源，分享，共享","socials":{"github":"https://github.com/glmapper","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/2412872703","zhihu":"","csdn":"","juejin":"https://juejin.cn/user/3227821827961806","customs":{"sofastack":{"icon":"https://glmapper-blog.oss-cn-hangzhou.aliyuncs.com/common/sofastack.svg","link":"https://www.sofastack.tech/"}}}}}}