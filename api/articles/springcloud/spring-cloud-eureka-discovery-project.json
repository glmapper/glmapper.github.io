{"title":"SpringCloud-Eureka 服务发现","uid":"f85e030cf230f0e9651658c347d1ad1b","slug":"springcloud/spring-cloud-eureka-discovery-project","date":"2018-12-31T14:48:17.000Z","updated":"2024-07-05T04:09:05.837Z","comments":true,"path":"api/articles/springcloud/spring-cloud-eureka-discovery-project.json","keywords":"宋国磊, glmapper, 卫恒, 分享, 开源","cover":[],"content":"<p>本篇将继续接着上一篇 <a href=\"/2018/12/31/springcloud/spring-cloud-eureka-register-project/\">SpringCloud-服务注册</a> ，通过使用 DiscoveryClient 来实现服务发现，并且消费。</p>\n<p>DiscoveryClient 源自于 spring-cloud-client-discovery ，是 spring cloud 中被定义用来服务发现的公共接口，在 spring cloud 的各类服务发现组件中，都有对应的实现，如 eureka、consul、zookeeper 。它提供从服务注册中心获取服务实例信息的能力。如果我们想自己实现一个服务发现组件，集成到spring cloud 中，就完全可以通过实现此接口来完成。</p>\n<span id=\"more\"></span>\n<h2 id=\"环境准备\"><a href=\"#环境准备\" class=\"headerlink\" title=\"环境准备\"></a>环境准备</h2><table>\n<thead>\n<tr>\n<th>类别</th>\n<th>值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>JDK<br /></td>\n<td>1.8.0_162<br /></td>\n</tr>\n<tr>\n<td>SOFABoot&#x2F;SpringBoot<br /></td>\n<td><a href=\"https://github.com/alipay/sofa-boot/releases/tag/v3.0.0\">3.0.0</a>&#x2F;2.0.x.RELEASE<br /></td>\n</tr>\n<tr>\n<td>SpringCloud<br /></td>\n<td>Finchley.RC1<br /></td>\n</tr>\n<tr>\n<td>IDE<br /></td>\n<td>IDEA<br /></td>\n</tr>\n</tbody></table>\n<h2 id=\"工程背景\"><a href=\"#工程背景\" class=\"headerlink\" title=\"工程背景\"></a>工程背景</h2><p>本案例使用 SOFABoot 3.0.x 版本集成 SringCloud F版。工程如下：</p>\n<ul>\n<li>sofa-eureka-consumer-discovery     服务消费方</li>\n</ul>\n<p>本工程的父工程继续使用《SpringCloud-Eureka 服务注册》文中新建的父工程。</p>\n<h2 id=\"新建-sofa-eureka-consumer-discovery\"><a href=\"#新建-sofa-eureka-consumer-discovery\" class=\"headerlink\" title=\"新建 sofa-eureka-consumer-discovery\"></a>新建 sofa-eureka-consumer-discovery</h2><p>这里我们通过 sofa-eureka-consumer-discovery 这个工程来手动发现服务。</p>\n<p>右击 sofa-eureka-parent 父工程 -&gt; New -&gt; Module，这里选择 Maven 工程；</p>\n<ul>\n<li>artifactId：sofa-eureka-consumer-discovery。</li>\n</ul>\n<h3 id=\"修改-pom-文件\"><a href=\"#修改-pom-文件\" class=\"headerlink\" title=\"修改 pom 文件\"></a>修改 pom 文件</h3><p>引入 spring-cloud-starter-netflix-eureka-client 依赖。<br /></p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">parent</span>&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>sofa-eureka-parent<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.alipay.sofa<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>0.0.1-SNAPSHOT<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">parent</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">modelVersion</span>&gt;</span>4.0.0<span class=\"tag\">&lt;/<span class=\"name\">modelVersion</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>sofa-eureka-consumer-discovery<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-web<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.cloud<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-cloud-starter-netflix-eureka-client<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"配置文件\"><a href=\"#配置文件\" class=\"headerlink\" title=\"配置文件\"></a>配置文件</h3><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server.port=<span class=\"number\">8088</span></span><br><span class=\"line\">spring.application.name=sofa-eureka-discovery</span><br><span class=\"line\">eureka.client.serviceUrl.defaultZone=http<span class=\"punctuation\">:</span><span class=\"comment\">//localhost:8761/eureka/</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"启动类\"><a href=\"#启动类\" class=\"headerlink\" title=\"启动类\"></a>启动类</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@SpringBootApplication</span></span><br><span class=\"line\"><span class=\"meta\">@EnableEurekaClient</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">SofaEurekaConsumerDiscoveryApplication</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        SpringApplication.run(SofaEurekaConsumerDiscoveryApplication.class, args);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"服务获取\"><a href=\"#服务获取\" class=\"headerlink\" title=\"服务获取\"></a>服务获取</h3><p>这里通过 DiscoveryClient 对像手动获取到 HELLOSOFASERVICE 服务对应的所有实例。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@RestController</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">DiscoveryController</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> DiscoveryClient discoveryClient;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@RequestMapping(&quot;/instance&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">getInstance</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">        List&lt;ServiceInstance&gt; list = discoveryClient.getInstances(<span class=\"string\">&quot;HELLOSOFASERVICE&quot;</span>);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;current service size = &quot;</span> + discoveryClient.getServices().size());</span><br><span class=\"line\">        <span class=\"type\">StringBuilder</span> <span class=\"variable\">stringBuilder</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">StringBuilder</span>();</span><br><span class=\"line\">        <span class=\"keyword\">for</span>( String s :  discoveryClient.getServices())&#123;</span><br><span class=\"line\">            stringBuilder.append(<span class=\"string\">&quot;services=&quot;</span> + s).append(<span class=\"string\">&quot;\\n&quot;</span>);</span><br><span class=\"line\">            List&lt;ServiceInstance&gt; serviceInstances =  discoveryClient.getInstances(s);</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(ServiceInstance si : serviceInstances)&#123;</span><br><span class=\"line\">                stringBuilder.append(<span class=\"string\">&quot;url=&quot;</span>).append(si.getUri()).append(<span class=\"string\">&quot;\\n&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        stringBuilder.append(<span class=\"string\">&quot;instance num&quot;</span>).append(<span class=\"string\">&quot;=&quot;</span>).append(list.size());</span><br><span class=\"line\">        <span class=\"keyword\">return</span> stringBuilder.toString();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"启动-验证\"><a href=\"#启动-验证\" class=\"headerlink\" title=\"启动 &amp; 验证\"></a>启动 &amp; 验证</h3><p>启动当前工程，在此之前确保 注册中心和服务提供工程均已正常启动。然后在浏览器中输入：http:localhost:8088&#x2F;instance</p>\n<p><img src=\"https://oscimg.oschina.net/oscnet/1f7ea4c0b3f4e1eaccc37a5cc3baba5d47e.jpg\"><br>可以看到获取到的实例信息与注册中心上的实例信息是匹配的。</p>\n","text":"本篇将继续接着上一篇 SpringCloud-服务注册 ，通过使用 DiscoveryClient 来实现服务发现，并且消费。 DiscoveryClient ...","permalink":"/post/springcloud/spring-cloud-eureka-discovery-project","photos":[],"count_time":{"symbolsCount":"3.2k","symbolsTime":"3 mins."},"categories":[{"name":"SpringCloud","slug":"SpringCloud","count":14,"path":"api/categories/SpringCloud.json"}],"tags":[{"name":"eureka","slug":"eureka","count":5,"path":"api/tags/eureka.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%8E%AF%E5%A2%83%E5%87%86%E5%A4%87\"><span class=\"toc-text\">环境准备</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%B7%A5%E7%A8%8B%E8%83%8C%E6%99%AF\"><span class=\"toc-text\">工程背景</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%96%B0%E5%BB%BA-sofa-eureka-consumer-discovery\"><span class=\"toc-text\">新建 sofa-eureka-consumer-discovery</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BF%AE%E6%94%B9-pom-%E6%96%87%E4%BB%B6\"><span class=\"toc-text\">修改 pom 文件</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6\"><span class=\"toc-text\">配置文件</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%90%AF%E5%8A%A8%E7%B1%BB\"><span class=\"toc-text\">启动类</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%9C%8D%E5%8A%A1%E8%8E%B7%E5%8F%96\"><span class=\"toc-text\">服务获取</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%90%AF%E5%8A%A8-%E9%AA%8C%E8%AF%81\"><span class=\"toc-text\">启动 &amp; 验证</span></a></li></ol></li></ol>","author":{"name":"glmapper","slug":"blog-author","avatar":"https://glmapper-blog.oss-cn-hangzhou.aliyuncs.com/common/favicon.ico","link":"/","description":"开放，开源，分享，共享","socials":{"github":"https://github.com/glmapper","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/2412872703","zhihu":"","csdn":"","juejin":"https://juejin.cn/user/3227821827961806","customs":{"sofastack":{"icon":"https://glmapper-blog.oss-cn-hangzhou.aliyuncs.com/common/sofastack.svg","link":"https://www.sofastack.tech/"}}}},"mapped":true,"hidden":false,"prev_post":{"title":"Spring Cloud-Eureka Client 原理解析","uid":"17d5e51f35b1836a64abac3ed89ad69f","slug":"springcloud/spring-cloud-eureka-client-analysis","date":"2018-12-31T14:48:45.000Z","updated":"2024-07-05T04:09:05.837Z","comments":true,"path":"api/articles/springcloud/spring-cloud-eureka-client-analysis.json","keywords":"宋国磊, glmapper, 卫恒, 分享, 开源","cover":[],"text":" 原文： https://blog.csdn.net/sinat_25518349/article/details/85423398 前面一些 demo 中已经...","permalink":"/post/springcloud/spring-cloud-eureka-client-analysis","photos":[],"count_time":{"symbolsCount":"14k","symbolsTime":"13 mins."},"categories":[{"name":"SpringCloud","slug":"SpringCloud","count":14,"path":"api/categories/SpringCloud.json"}],"tags":[{"name":"eureka","slug":"eureka","count":5,"path":"api/tags/eureka.json"}],"author":{"name":"glmapper","slug":"blog-author","avatar":"https://glmapper-blog.oss-cn-hangzhou.aliyuncs.com/common/favicon.ico","link":"/","description":"开放，开源，分享，共享","socials":{"github":"https://github.com/glmapper","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/2412872703","zhihu":"","csdn":"","juejin":"https://juejin.cn/user/3227821827961806","customs":{"sofastack":{"icon":"https://glmapper-blog.oss-cn-hangzhou.aliyuncs.com/common/sofastack.svg","link":"https://www.sofastack.tech/"}}}}},"next_post":{"title":"SpringCloud-Eureka 服务注册","uid":"552d04375420669150f7f05539f0ea4b","slug":"springcloud/spring-cloud-eureka-register-project","date":"2018-12-31T14:48:05.000Z","updated":"2024-07-05T04:09:05.837Z","comments":true,"path":"api/articles/springcloud/spring-cloud-eureka-register-project.json","keywords":"宋国磊, glmapper, 卫恒, 分享, 开源","cover":[],"text":" 原文： https://blog.csdn.net/sinat_25518349/article/details/85423332 Spring Cloud ...","permalink":"/post/springcloud/spring-cloud-eureka-register-project","photos":[],"count_time":{"symbolsCount":"6.4k","symbolsTime":"6 mins."},"categories":[{"name":"SpringCloud","slug":"SpringCloud","count":14,"path":"api/categories/SpringCloud.json"}],"tags":[{"name":"eureka","slug":"eureka","count":5,"path":"api/tags/eureka.json"}],"author":{"name":"glmapper","slug":"blog-author","avatar":"https://glmapper-blog.oss-cn-hangzhou.aliyuncs.com/common/favicon.ico","link":"/","description":"开放，开源，分享，共享","socials":{"github":"https://github.com/glmapper","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/2412872703","zhihu":"","csdn":"","juejin":"https://juejin.cn/user/3227821827961806","customs":{"sofastack":{"icon":"https://glmapper-blog.oss-cn-hangzhou.aliyuncs.com/common/sofastack.svg","link":"https://www.sofastack.tech/"}}}}}}