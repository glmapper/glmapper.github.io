{"title":"SpringCloud-网关 gateway","uid":"aee0f82745fbac70b90b61b5afb7f8ef","slug":"springcloud/spring-cloud-gateway-project","date":"2018-12-31T15:13:25.000Z","updated":"2024-07-05T04:09:05.838Z","comments":true,"path":"api/articles/springcloud/spring-cloud-gateway-project.json","keywords":"宋国磊, glmapper, 卫恒, 分享, 开源","cover":[],"content":"<p>网关服务核心是将进入的请求正确合理的路由到下层具体的服务进行业务处理，从它的功能来看，网关服务的核心就是路由信息的构建。</p>\n<p>Spring Cloud Gateway 作为 Spring Cloud 生态系统中的网关，目标是替代 Netflix Zuul，其不仅提供统一的路由方式，并且基于 Filter 链的方式提供了网关基本的功能，例如：安全、监控、埋点和限流等。</p>\n<span id=\"more\"></span>\n\n<p>下面是官方提供的一个工作原理图：</p>\n<p><img src=\"https://oscimg.oschina.net/oscnet/e9d92479a1dbcdf618d33918468b30c2c8b.jpg\"></p>\n<p>客户端发送请求到 Spring Cloud Gateway，Gateway Handler Mapping 确定请求与路由匹配，则会将请求交给Gateway Web Handler 处理。在代理前后可以执行多个过滤器。最后代理到具体的服务。</p>\n<h3 id=\"几个概念\"><a href=\"#几个概念\" class=\"headerlink\" title=\"几个概念\"></a>几个概念</h3><ul>\n<li>Route：Gateway 中的基本元素，它有自己的 ID、URI 、 Predicate 集合和 Filter 集合</li>\n<li>Predicate：判断请求的 Url 是否匹配当前的 Route</li>\n<li>Filter ：匹配通过之后对请求和响应的处理及修饰</li>\n</ul>\n<p>Spring-Cloud-Gateway 构建路由的数据流向：</p>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/545a2f07dd729bcaf7da5b0c81dec3db.png\"></p>\n<p>RouteDefinition 模型是对 Route 模型中 route 的定义以及描述，Spring-Cloud-Gateway 最终会通过RouteDefinition 来构建起 Route 实例信息。其中 RouteDefinition 代码包含两个数组分别是PredicateDefinition，FilterDefinition。</p>\n<h3 id=\"内置的-Predicate\"><a href=\"#内置的-Predicate\" class=\"headerlink\" title=\"内置的 Predicate\"></a>内置的 Predicate</h3><p>Spring Cloud Gateway 是通过 Spring WebFlux 的 <code>HandlerMapping</code> 做为底层支持来匹配到转发路由，Spring Cloud Gateway 内置了很多 Predicates 工厂，这些 Predicates 工厂通过不同的 HTTP 请求参数来匹配，多个 Predicates 工厂可以组合使用。下面是内置的Predicates：</p>\n<table>\n<thead>\n<tr>\n<th>组件</th>\n<th>备注</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>After Route Predicate Factory</td>\n<td>此谓词匹配当前日期时间之后发生的请求。</td>\n</tr>\n<tr>\n<td>Before Route Predicate Factory</td>\n<td>此谓词匹配在当前日期时间之前发生的请求。</td>\n</tr>\n<tr>\n<td>Between Route Predicate Factory</td>\n<td>此谓词匹配datetime1之后和datetime2之前发生的请求。 datetime2参数必须在datetime1之后。</td>\n</tr>\n<tr>\n<td>Cookie Route Predicate Factory</td>\n<td>Cookie Route Predicate Factory有两个参数，cookie名称和正则表达式。此谓词匹配具有给定名称且值与正则表达式匹配的cookie。</td>\n</tr>\n<tr>\n<td>Header Route Predicate Factory</td>\n<td>Header Route Predicate Factory有两个参数，标题名称和正则表达式。与具有给定名称且值与正则表达式匹配的标头匹配。</td>\n</tr>\n<tr>\n<td>Host Route Predicate Factory</td>\n<td>Host Route Predicate Factory采用一个参数：主机名模式。该模式是一种Ant样式模式“.”作为分隔符。此谓词匹配与模式匹配的Host标头。</td>\n</tr>\n<tr>\n<td>Method Route Predicate Factory</td>\n<td>Method Route Predicate Factory采用一个参数：要匹配的HTTP方法。</td>\n</tr>\n<tr>\n<td>Path Route Predicate Factory</td>\n<td>匹配请求的path</td>\n</tr>\n<tr>\n<td>Query Route Predicate Factory</td>\n<td>Query Route Predicate Factory有两个参数：一个必需的参数和一个可选的正则表达式。</td>\n</tr>\n<tr>\n<td>RemoteAddr Route Predicate Factory</td>\n<td>RemoteAddr Route Predicate Factory采用CIDR符号（IPv4或IPv6）字符串的列表（最小值为1），例如， 192.168.0.1&#x2F;16（其中192.168.0.1是IP地址，16是子网掩码）。</td>\n</tr>\n</tbody></table>\n<h2 id=\"工程代码\"><a href=\"#工程代码\" class=\"headerlink\" title=\"工程代码\"></a>工程代码</h2><p>本篇将通过一个简单的 gateway 工程来演示如何使用上面的 Predicate 来实现路由。</p>\n<h3 id=\"新建工程\"><a href=\"#新建工程\" class=\"headerlink\" title=\"新建工程\"></a>新建工程</h3><p>这里新建一个 <a href=\"https://github.com/glmapper/glmapper-cloud-parent\">glmapper-cloud-gateway</a> 工程，具体细节如下</p>\n<h3 id=\"依赖引入\"><a href=\"#依赖引入\" class=\"headerlink\" title=\"依赖引入\"></a>依赖引入</h3><p>首先在当前工程的pom文件中引入spring cloud gateway 的依赖：spring-cloud-starter-gateway</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.cloud<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-cloud-starter-netflix-eureka-client<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.cloud<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-cloud-starter-gateway<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"配置文件\"><a href=\"#配置文件\" class=\"headerlink\" title=\"配置文件\"></a>配置文件</h3><p>配置文件部分，除了常规的端口，应用名之外；关于spring cloud 的路由规则也可以通过配置文件进行配置，下面先以最简单的 path的方式来演示，最终达到的目标是，当输入：<a href=\"http://localhost:8866/gateway\">http://localhost:8866/gateway</a> 时，请求信息将会被路由到 <a href=\"http://localhost:8086/hello\">http://localhost:8086/hello</a>(这个是一个eureka client，对外提供rest服务，工程详见<a href=\"https://github.com/glmapper/glmapper-cloud-parent/tree/master/glmapper-eureka-provider\">glmapper-eureka-provider</a>)。</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">eureka:</span></span><br><span class=\"line\">  <span class=\"attr\">client:</span></span><br><span class=\"line\">    <span class=\"attr\">serviceUrl:</span></span><br><span class=\"line\">      <span class=\"attr\">defaultZone:</span> <span class=\"string\">http://localhost:8761/eureka/</span>   <span class=\"comment\">#eureka server 的地址</span></span><br><span class=\"line\"><span class=\"attr\">server:</span></span><br><span class=\"line\">  <span class=\"attr\">port:</span> <span class=\"number\">8866</span></span><br><span class=\"line\"><span class=\"attr\">spring:</span></span><br><span class=\"line\">  <span class=\"attr\">application:</span></span><br><span class=\"line\">    <span class=\"attr\">name:</span> <span class=\"string\">glmapper-cloud-gateway</span>  <span class=\"comment\">#应用名</span></span><br><span class=\"line\">  <span class=\"attr\">cloud:</span></span><br><span class=\"line\">    <span class=\"attr\">gateway:</span></span><br><span class=\"line\">      <span class=\"attr\">routes:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">id:</span> <span class=\"string\">glmapper</span></span><br><span class=\"line\">        <span class=\"attr\">uri:</span> <span class=\"string\">http://localhost:8086/hello</span>   <span class=\"comment\">#目标地址</span></span><br><span class=\"line\">        <span class=\"attr\">predicates:</span></span><br><span class=\"line\">        <span class=\"bullet\">-</span> <span class=\"string\">Path=/gateway</span>   <span class=\"comment\">#路由规则</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"启动应用-验证\"><a href=\"#启动应用-验证\" class=\"headerlink\" title=\"启动应用&amp;验证\"></a>启动应用&amp;验证</h3><p>这里直接启动这个工程，SpringCloud Gateway 不需要额外的注解来开启网关服务，所以这里省略启动类的代码。先后启动 glmapper-eureka-server 、glmapper-eureka-provider、glmapper-cloud-gateway。</p>\n<p>在浏览器中输入：<a href=\"http://localhost:8866/gateway\">http://localhost:8866/gateway</a> ，输出的结果如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Hello Glmapper! Now Port is 8086 And hostname is HelloGlmapperService</span><br></pre></td></tr></table></figure>\n\n<p>这里输出的实际上是  <a href=\"http://localhost:8086/hello\">http://localhost:8086/hello</a> 提供的资源，说明我们的路由规则已经生效。</p>\n<h2 id=\"内置-Predicate-规则配置\"><a href=\"#内置-Predicate-规则配置\" class=\"headerlink\" title=\"内置 Predicate 规则配置\"></a>内置 Predicate 规则配置</h2><p>上面已经罗列了所有的 spring cloud gateway 一些内置的 Predicate  ，下面将来使用这些规则来演示下。</p>\n<h3 id=\"时间匹配\"><a href=\"#时间匹配\" class=\"headerlink\" title=\"时间匹配\"></a>时间匹配</h3><p>Predicate 支持设置一个时间，在请求进行转发的时候，可以通过判断在这个时间之前或者之后进行转发。在上面的列表中可以看出，基于时间的匹配支持某时间节点之前、之后，还支持介于两个时间之间的某个时间段内的匹配。基于某个时间段内的匹配规则常见的场景是限时抢购。</p>\n<ul>\n<li>After Route Predicate</li>\n</ul>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">server:</span></span><br><span class=\"line\">  <span class=\"attr\">port:</span> <span class=\"number\">8080</span></span><br><span class=\"line\"><span class=\"attr\">spring:</span></span><br><span class=\"line\">  <span class=\"attr\">cloud:</span></span><br><span class=\"line\">    <span class=\"attr\">gateway:</span></span><br><span class=\"line\">      <span class=\"attr\">routes:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">id:</span> <span class=\"string\">glmapper</span>    \t\t\t <span class=\"comment\">#自定义的路由ID</span></span><br><span class=\"line\">        <span class=\"attr\">uri:</span> <span class=\"string\">http://www.glmapper.com</span> <span class=\"comment\">#目标服务地址</span></span><br><span class=\"line\">        <span class=\"attr\">predicates:</span></span><br><span class=\"line\">        <span class=\"bullet\">-</span> <span class=\"string\">After=2019-01-10T00:00:00+08:00[Asia/Shanghai]</span> <span class=\"comment\">#通过时间匹配 2019年1月10日</span></span><br></pre></td></tr></table></figure>\n\n<p>After Route Predicate 是指在这个时间之后的请求都转发到目标地址。请求时间在 2019年1月10日日00点00分00秒之后的所有请求都转发到地址 <a href=\"http://www.glmapper.com。+08:00是指时间和UTC时间相差八个小时，时间地区为\">http://www.glmapper.com。+08:00是指时间和UTC时间相差八个小时，时间地区为</a> Asia&#x2F;Shanghai。</p>\n<ul>\n<li>Before Route Predicate</li>\n</ul>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">server:</span></span><br><span class=\"line\">  <span class=\"attr\">port:</span> <span class=\"number\">8080</span></span><br><span class=\"line\"><span class=\"attr\">spring:</span></span><br><span class=\"line\">  <span class=\"attr\">cloud:</span></span><br><span class=\"line\">    <span class=\"attr\">gateway:</span></span><br><span class=\"line\">      <span class=\"attr\">routes:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">id:</span> <span class=\"string\">glmapper</span>    \t\t\t <span class=\"comment\">#自定义的路由ID</span></span><br><span class=\"line\">        <span class=\"attr\">uri:</span> <span class=\"string\">http://www.glmapper.com</span> <span class=\"comment\">#目标服务地址</span></span><br><span class=\"line\">        <span class=\"attr\">predicates:</span></span><br><span class=\"line\">        <span class=\"bullet\">-</span> <span class=\"string\">Before=2019-01-10T00:00:00+08:00[Asia/Shanghai]</span> <span class=\"comment\">#通过时间匹配 2019年1月10日</span></span><br></pre></td></tr></table></figure>\n\n<p>Before Route Predicate 与 After Route Predicate 刚好相反，在某个时间之前的请求的请求都进行转发。</p>\n<ul>\n<li>Between Route Predicate</li>\n</ul>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">server:</span></span><br><span class=\"line\">  <span class=\"attr\">port:</span> <span class=\"number\">8080</span></span><br><span class=\"line\"><span class=\"attr\">spring:</span></span><br><span class=\"line\">  <span class=\"attr\">cloud:</span></span><br><span class=\"line\">    <span class=\"attr\">gateway:</span></span><br><span class=\"line\">      <span class=\"attr\">routes:</span></span><br><span class=\"line\">       <span class=\"bullet\">-</span> <span class=\"attr\">id:</span> <span class=\"string\">glmapper</span>\t\t\t\t\t<span class=\"comment\">#自定义的路由ID</span></span><br><span class=\"line\">       \t<span class=\"attr\">uri:</span> <span class=\"string\">http://www.glmapper.com</span>\t<span class=\"comment\">#目标服务地址</span></span><br><span class=\"line\">        <span class=\"attr\">predicates:</span></span><br><span class=\"line\">         <span class=\"bullet\">-</span> <span class=\"string\">Between=2019-01-10T00:00:00+08:00[Asia/Shanghai],</span> <span class=\"number\">2019-01-10T06:00:00+08:00</span>[<span class=\"string\">Asia/Shanghai</span>]</span><br></pre></td></tr></table></figure>\n\n<p>在2019年1月10 零点至6点之间的请求将会被路由到 <a href=\"http://www.glmapper.com/\">http://www.glmapper.com</a> ，其他的请求将不会被路由。</p>\n<h3 id=\"Cookie-或者-Header\"><a href=\"#Cookie-或者-Header\" class=\"headerlink\" title=\"Cookie 或者 Header\"></a>Cookie 或者 Header</h3><ul>\n<li>Cookie Route Predicate</li>\n</ul>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">spring:</span></span><br><span class=\"line\">  <span class=\"attr\">cloud:</span></span><br><span class=\"line\">    <span class=\"attr\">gateway:</span></span><br><span class=\"line\">      <span class=\"attr\">routes:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">id:</span> <span class=\"string\">glmapper</span></span><br><span class=\"line\">        <span class=\"attr\">uri:</span> <span class=\"string\">http://localhost:8086/hello</span></span><br><span class=\"line\">        <span class=\"attr\">predicates:</span></span><br><span class=\"line\">        <span class=\"bullet\">-</span> <span class=\"string\">Cookie=name,glmapper</span></span><br></pre></td></tr></table></figure>\n\n<p>这里，如果我的请求信息中存在 cookie name 为 glmapper，值匹配到 glmapper 的串，那么请求将会被路由。</p>\n<p><img src=\"https://oscimg.oschina.net/oscnet/05fc182cf12e602fa1e7e467c83d7b31da3.jpg\"></p>\n<blockquote>\n<p>PS：这里在配置的时候要注意下 routes 后面格式缩进，否则会抛出一些异常，如：</p>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">Property: spring.cloud.gateway.routes[0].uri</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">Value: null</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">Reason: 不能为null</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">Property: spring.cloud.gateway.routes[0].predicates</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">Value: []</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">Reason: 不能为空</span></span></code></pre></div></blockquote>\n<p>当cookie的值不满足时，访问时404</p>\n<p><img src=\"https://oscimg.oschina.net/oscnet/680e41ff99bcc15910217ba1ec40812d9a6.jpg\"></p>\n<ul>\n<li>Header Route Predicate</li>\n</ul>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">spring:</span></span><br><span class=\"line\">  <span class=\"attr\">application:</span></span><br><span class=\"line\">    <span class=\"attr\">name:</span> <span class=\"string\">glmapper-cloud-gateway</span></span><br><span class=\"line\">  <span class=\"attr\">cloud:</span></span><br><span class=\"line\">    <span class=\"attr\">gateway:</span></span><br><span class=\"line\">      <span class=\"attr\">routes:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">id:</span> <span class=\"string\">glmapper</span></span><br><span class=\"line\">        <span class=\"attr\">uri:</span> <span class=\"string\">http://localhost:8086/hello</span></span><br><span class=\"line\">        <span class=\"attr\">predicates:</span></span><br><span class=\"line\">        <span class=\"bullet\">-</span> <span class=\"string\">Header=X-Request-Id,</span> <span class=\"string\">\\d+</span></span><br></pre></td></tr></table></figure>\n\n<p>上面这段配置用于配置 Header 中 X-Request-Id值数字的请求：</p>\n<p><img src=\"https://oscimg.oschina.net/oscnet/2a88bdad6acd7902f2415089e943b3390f0.jpg\"></p>\n<p>同样，如果是非数字的话将会返回 404。</p>\n<h3 id=\"域名匹配\"><a href=\"#域名匹配\" class=\"headerlink\" title=\"域名匹配\"></a>域名匹配</h3><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">spring:</span></span><br><span class=\"line\">  <span class=\"attr\">application:</span></span><br><span class=\"line\">    <span class=\"attr\">name:</span> <span class=\"string\">glmapper-cloud-gateway</span></span><br><span class=\"line\">  <span class=\"attr\">cloud:</span></span><br><span class=\"line\">    <span class=\"attr\">gateway:</span></span><br><span class=\"line\">      <span class=\"attr\">routes:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">id:</span> <span class=\"string\">glmapper</span></span><br><span class=\"line\">        <span class=\"attr\">uri:</span> <span class=\"string\">http://localhost:8086/hello</span></span><br><span class=\"line\">        <span class=\"attr\">predicates:</span></span><br><span class=\"line\">        <span class=\"bullet\">-</span> <span class=\"string\">Host=**.glmapper.com</span></span><br></pre></td></tr></table></figure>\n\n<p>上面这段配置用于匹配 host 为 xxx.glmapper.com 域名的请求：</p>\n<p><img src=\"https://oscimg.oschina.net/oscnet/b2b68159505c906007107ecd2195bcb7326.jpg\"></p>\n<p>关于其他的内置 Predicate 均可在官方文档中有实例参考，这里就不一一罗列了。</p>\n<h3 id=\"组合匹配\"><a href=\"#组合匹配\" class=\"headerlink\" title=\"组合匹配\"></a>组合匹配</h3><p>最后我们来将上面的一些进行组合，假设我需要在 <code>2019.1.10 0点至2019.1.10 6点之间，cookie中带有name=glmapper，header 的 X-Request-Id 为数字，域名是 xx.glmapper.com ，path为 /gateway ，请求方式为GET，参数名为queryParam</code> 的请求路由到 <a href=\"http://localhost:8086/hello%E3%80%82%E9%82%A3%E4%B9%88%E5%85%B7%E4%BD%93%E9%85%8D%E7%BD%AE%E5%A6%82%E4%B8%8B\">http://localhost:8086/hello。那么具体配置如下</a></p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">spring:</span></span><br><span class=\"line\">  <span class=\"attr\">application:</span></span><br><span class=\"line\">    <span class=\"attr\">name:</span> <span class=\"string\">glmapper-cloud-gateway</span></span><br><span class=\"line\">  <span class=\"attr\">cloud:</span></span><br><span class=\"line\">    <span class=\"attr\">gateway:</span></span><br><span class=\"line\">      <span class=\"attr\">routes:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">id:</span> <span class=\"string\">glmapper</span></span><br><span class=\"line\">        <span class=\"attr\">uri:</span> <span class=\"string\">http://localhost:8086/hello</span></span><br><span class=\"line\">        <span class=\"attr\">predicates:</span></span><br><span class=\"line\">        <span class=\"bullet\">-</span> <span class=\"string\">Host=**.glmapper.com</span></span><br><span class=\"line\">        <span class=\"bullet\">-</span> <span class=\"string\">Path=/gateway</span></span><br><span class=\"line\">        <span class=\"bullet\">-</span> <span class=\"string\">Method=GET</span></span><br><span class=\"line\">        <span class=\"bullet\">-</span> <span class=\"string\">Header=X-Request-Id,\\d+</span></span><br><span class=\"line\">        <span class=\"bullet\">-</span> <span class=\"string\">Query=queryParam</span></span><br><span class=\"line\">        <span class=\"bullet\">-</span> <span class=\"string\">Cookie=name,glmapper</span></span><br><span class=\"line\">        <span class=\"bullet\">-</span> <span class=\"string\">Between=2019-01-10T00:00:00+08:00[Asia/Shanghai],</span> <span class=\"number\">2019-01-10T06:00:00+08:00</span>[<span class=\"string\">Asia/Shanghai</span>]</span><br></pre></td></tr></table></figure>\n\n<p>还是通过curl 命令来执行以下：</p>\n<p><img src=\"https://oscimg.oschina.net/oscnet/d78beeac5d4959ba1ade7577c0e54ba9489.jpg\"></p>\n<h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><ul>\n<li><a href=\"https://cloud.spring.io/spring-cloud-static/spring-cloud-gateway/2.0.2.RELEASE/single/spring-cloud-gateway.html#gateway-starter\">Spring Cloud Gateway</a></li>\n</ul>\n","text":"网关服务核心是将进入的请求正确合理的路由到下层具体的服务进行业务处理，从它的功能来看，网关服务的核心就是路由信息的构建。 Spring Cloud Gatewa...","permalink":"/post/springcloud/spring-cloud-gateway-project","photos":[],"count_time":{"symbolsCount":"6.4k","symbolsTime":"6 mins."},"categories":[{"name":"SpringCloud","slug":"SpringCloud","count":14,"path":"api/categories/SpringCloud.json"}],"tags":[{"name":"gateway","slug":"gateway","count":2,"path":"api/tags/gateway.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%87%A0%E4%B8%AA%E6%A6%82%E5%BF%B5\"><span class=\"toc-text\">几个概念</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%86%85%E7%BD%AE%E7%9A%84-Predicate\"><span class=\"toc-text\">内置的 Predicate</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%B7%A5%E7%A8%8B%E4%BB%A3%E7%A0%81\"><span class=\"toc-text\">工程代码</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%96%B0%E5%BB%BA%E5%B7%A5%E7%A8%8B\"><span class=\"toc-text\">新建工程</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BE%9D%E8%B5%96%E5%BC%95%E5%85%A5\"><span class=\"toc-text\">依赖引入</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6\"><span class=\"toc-text\">配置文件</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%90%AF%E5%8A%A8%E5%BA%94%E7%94%A8-%E9%AA%8C%E8%AF%81\"><span class=\"toc-text\">启动应用&amp;验证</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%86%85%E7%BD%AE-Predicate-%E8%A7%84%E5%88%99%E9%85%8D%E7%BD%AE\"><span class=\"toc-text\">内置 Predicate 规则配置</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%97%B6%E9%97%B4%E5%8C%B9%E9%85%8D\"><span class=\"toc-text\">时间匹配</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Cookie-%E6%88%96%E8%80%85-Header\"><span class=\"toc-text\">Cookie 或者 Header</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%9F%9F%E5%90%8D%E5%8C%B9%E9%85%8D\"><span class=\"toc-text\">域名匹配</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%BB%84%E5%90%88%E5%8C%B9%E9%85%8D\"><span class=\"toc-text\">组合匹配</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%8F%82%E8%80%83\"><span class=\"toc-text\">参考</span></a>","author":{"name":"glmapper","slug":"blog-author","avatar":"https://glmapper-blog.oss-cn-hangzhou.aliyuncs.com/common/favicon.ico","link":"/","description":"开放，开源，分享，共享","socials":{"github":"https://github.com/glmapper","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/2412872703","zhihu":"","csdn":"","juejin":"https://juejin.cn/user/3227821827961806","customs":{"sofastack":{"icon":"https://glmapper-blog.oss-cn-hangzhou.aliyuncs.com/common/sofastack.svg","link":"https://www.sofastack.tech/"}}}},"mapped":true,"hidden":false,"prev_post":{"title":"SpringCloud-版本及组件概述","uid":"f93d64595e35ae0269b6922a4bbacf9d","slug":"springcloud/spring-cloud-summary","date":"2018-12-31T15:38:38.000Z","updated":"2024-07-05T04:09:05.839Z","comments":true,"path":"api/articles/springcloud/spring-cloud-summary.json","keywords":"宋国磊, glmapper, 卫恒, 分享, 开源","cover":null,"text":" 本系列基于Spring Cloud **Finchley SR2 & SOFABoot 3.0.0 Spring Cloud 为开发人员提供了快速构建分布式系...","permalink":"/post/springcloud/spring-cloud-summary","photos":[],"count_time":{"symbolsCount":"4.8k","symbolsTime":"4 mins."},"categories":[{"name":"SpringCloud","slug":"SpringCloud","count":14,"path":"api/categories/SpringCloud.json"}],"tags":[{"name":"config","slug":"config","count":6,"path":"api/tags/config.json"},{"name":"gateway","slug":"gateway","count":2,"path":"api/tags/gateway.json"},{"name":"netflix","slug":"netflix","count":1,"path":"api/tags/netflix.json"}],"author":{"name":"glmapper","slug":"blog-author","avatar":"https://glmapper-blog.oss-cn-hangzhou.aliyuncs.com/common/favicon.ico","link":"/","description":"开放，开源，分享，共享","socials":{"github":"https://github.com/glmapper","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/2412872703","zhihu":"","csdn":"","juejin":"https://juejin.cn/user/3227821827961806","customs":{"sofastack":{"icon":"https://glmapper-blog.oss-cn-hangzhou.aliyuncs.com/common/sofastack.svg","link":"https://www.sofastack.tech/"}}}}},"next_post":{"title":"SpringCloud-熔断器 Hystrix","uid":"3b1ec91bc07936ed68fe667fb087db85","slug":"springcloud/spring-cloud-hysitrx-project","date":"2018-12-31T15:12:58.000Z","updated":"2024-07-05T04:09:05.838Z","comments":true,"path":"api/articles/springcloud/spring-cloud-hysitrx-project.json","keywords":"宋国磊, glmapper, 卫恒, 分享, 开源","cover":null,"text":"Hystrix 是 Netflix 的一个开源项目，它能够在服务失效的情况下，通过隔离系统依赖服务的方式，防止服务级联失败，造成服务雪崩。同时Hystrix 还...","permalink":"/post/springcloud/spring-cloud-hysitrx-project","photos":[],"count_time":{"symbolsCount":"11k","symbolsTime":"10 mins."},"categories":[{"name":"SpringCloud","slug":"SpringCloud","count":14,"path":"api/categories/SpringCloud.json"}],"tags":[{"name":"hystrix","slug":"hystrix","count":1,"path":"api/tags/hystrix.json"}],"author":{"name":"glmapper","slug":"blog-author","avatar":"https://glmapper-blog.oss-cn-hangzhou.aliyuncs.com/common/favicon.ico","link":"/","description":"开放，开源，分享，共享","socials":{"github":"https://github.com/glmapper","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/2412872703","zhihu":"","csdn":"","juejin":"https://juejin.cn/user/3227821827961806","customs":{"sofastack":{"icon":"https://glmapper-blog.oss-cn-hangzhou.aliyuncs.com/common/sofastack.svg","link":"https://www.sofastack.tech/"}}}}}}