{"title":"SpringCloud-配置中心 Config Apollo","uid":"99a0b1d930b4b5c7bd120823c947d06c","slug":"springcloud/spring-cloud-config-apollo","date":"2018-12-31T15:11:23.000Z","updated":"2024-07-05T04:09:05.835Z","comments":true,"path":"api/articles/springcloud/spring-cloud-config-apollo.json","keywords":"宋国磊, glmapper, 卫恒, 分享, 开源","cover":[],"content":"<p>Apollo（阿波罗）是携程框架部门研发的开源配置管理中心，能够集中化管理应用不同环境、不同集群的配置，配置修改后能够实时推送到应用端，并且具备规范的权限、流程治理等特性。</p>\n<p>本篇将搭建一套 Apollo 配置中心环境，并通过一个 demo 案例来演示如何在 SpringCloud 体系中使用 Apollo。</p>\n<span id=\"more\"></span>\n\n<h2 id=\"环境准备\"><a href=\"#环境准备\" class=\"headerlink\" title=\"环境准备\"></a>环境准备</h2><table>\n<thead>\n<tr>\n<th>类别</th>\n<th>值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>JDK</td>\n<td>1.8.0_162</td>\n</tr>\n<tr>\n<td>SOFABoot&#x2F;SpringBoot</td>\n<td><a href=\"https://github.com/alipay/sofa-boot/releases/tag/v3.0.0\">3.0.0</a>&#x2F;2.0.x.RELEASE</td>\n</tr>\n<tr>\n<td>SpringCloud</td>\n<td>Finchley.RC1</td>\n</tr>\n<tr>\n<td>IDE</td>\n<td>IDEA</td>\n</tr>\n<tr>\n<td>Mysql</td>\n<td>5.7.24</td>\n</tr>\n<tr>\n<td>CentOS</td>\n<td>7</td>\n</tr>\n</tbody></table>\n<p> Apollo 自身需要依赖 Mysql，在部署 Apollo 时需要提前安装 Mysql 数据库。关于 Mysql 的安装可以参考：<a href=\"http://www.glmapper.com/2019/01/05/mysql-on-linux/\">Linux 下安装Mysql数据库</a>。</p>\n<p>根据官方文档，Apollo 服务端需运行在 jdk 1.8 以上，客户端需运行在1.7 以上，Mysql 版本需在 5.6.5 版本以上。具体信息可参考：<a href=\"https://github.com/ctripcorp/apollo/wiki/%E5%88%86%E5%B8%83%E5%BC%8F%E9%83%A8%E7%BD%B2%E6%8C%87%E5%8D%97\">分布式部署指南</a>。</p>\n<h2 id=\"部署-Apollo\"><a href=\"#部署-Apollo\" class=\"headerlink\" title=\"部署 Apollo\"></a>部署 Apollo</h2><p>部署步骤共三步：</p>\n<ul>\n<li><p>创建数据库</p>\n<ul>\n<li>Apollo 服务端依赖于 MySQL 数据库，所以需要事先创建并完成初始化</li>\n</ul>\n</li>\n<li><p>获取安装包</p>\n<ul>\n<li>Apollo 服务端安装包共有3个：apollo-configservice, apollo-adminservice, apollo-portal</li>\n<li>可以直接下载事先打好的安装包，也可以自己通过源码构建</li>\n</ul>\n</li>\n<li><p>部署 Apollo 服务端</p>\n<ul>\n<li>获取安装包后就可以部署到公司的测试和生产环境了</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"创建数据库\"><a href=\"#创建数据库\" class=\"headerlink\" title=\"创建数据库\"></a>创建数据库</h3><p>Apollo 服务端共需要两个数据库：<code>ApolloPortalDB</code>和<code>ApolloConfigDB</code>，我们把数据库、表的创建和样例数据都分别准备了 sql 文件，只需要导入数据库即可。</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>需要注意的是 ApolloPortalDB 只需要在生产环境部署一个即可，而 ApolloConfigDB 需要在每个环境部署一套，如 fat、uat 和 pro 分别部署 3 套 ApolloConfigDB。</p></blockquote>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>注意：如果本地已经创建过 Apollo 数据库，请注意备份数据；sql 文件会清空 Apollo 相关的表。</p></blockquote>\n<p>两份 SQL 文件：</p>\n<ul>\n<li><a href=\"https://github.com/ctripcorp/apollo/blob/master/scripts/db/migration/portaldb/V1.0.0__initialization.sql\">apolloportaldb.sql</a></li>\n<li><a href=\"https://github.com/ctripcorp/apollo/blob/master/scripts/db/migration/configdb/V1.0.0__initialization.sql\">apolloconfigdb.sql</a></li>\n</ul>\n<p>下载下来之后可通过 Mysql 图形界面工具(如 Navicat )等进行导入。导入完成之后，可以进行如下验证。</p>\n<h4 id=\"portalDB-验证\"><a href=\"#portalDB-验证\" class=\"headerlink\" title=\"portalDB 验证\"></a>portalDB 验证</h4><p>执行 SQL：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> `Id`, `Key`, `<span class=\"keyword\">Value</span>`, `Comment` <span class=\"keyword\">from</span> `ApolloPortalDB`.`ServerConfig` limit <span class=\"number\">1</span>;</span><br></pre></td></tr></table></figure>\n\n<p>查询结果：</p>\n<table>\n<thead>\n<tr>\n<th>Id</th>\n<th>Key</th>\n<th>Value</th>\n<th>Comment</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>1</td>\n<td>apollo.portal.envs</td>\n<td>dev</td>\n<td>可支持的环境列表</td>\n</tr>\n</tbody></table>\n<h4 id=\"configDB-验证\"><a href=\"#configDB-验证\" class=\"headerlink\" title=\"configDB 验证\"></a>configDB 验证</h4><p>执行 SQL:</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> `Id`, `Key`, `<span class=\"keyword\">Value</span>`, `Comment` <span class=\"keyword\">from</span> `ApolloConfigDB`.`ServerConfig` limit <span class=\"number\">1</span>;</span><br></pre></td></tr></table></figure>\n\n<p>执行结果：</p>\n<table>\n<thead>\n<tr>\n<th>Id</th>\n<th>Key</th>\n<th>Value</th>\n<th>Comment</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>1</td>\n<td>eureka.service.url</td>\n<td><a href=\"http://127.0.0.1:8080/eureka/\">http://127.0.0.1:8080/eureka/</a></td>\n<td>Eureka服务Url</td>\n</tr>\n</tbody></table>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>本过程只针对新建工程，如果涉及到数据迁移，请参考 Apollo 官方文档</p></blockquote>\n<p>数据库部分完成之后，接下来就是部署 Apollo 的三个工程。</p>\n<h3 id=\"工程配置修改\"><a href=\"#工程配置修改\" class=\"headerlink\" title=\"工程配置修改\"></a>工程配置修改</h3><p>Apollo 配置中心 使用需要启动三个工程：apollo-configservice、apollo-adminservice、apollo-portal。</p>\n<p>在自己的服务器上新建一个目录 &#x2F;thirdserver&#x2F;apollo&#x2F; 将官方提供的安装包直接下载到这个目录下，然后解压得到如下列表：</p>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/933dccbea98df60d1f96f0f8810aae66.png\" alt=\"image-20190107114836135\"></p>\n<h4 id=\"apollo-configservice-部署\"><a href=\"#apollo-configservice-部署\" class=\"headerlink\" title=\"apollo-configservice 部署\"></a>apollo-configservice 部署</h4><p>Apollo 服务端需要知道如何连接到你前面创建的数据库，数据库连接串信息位于上一步下载的压缩包中的<code>apollo-configservice-1.2.0-github/config/application-github.properties </code>中，这里把里面默认的数据库连接地址和账密信息替换成我们自己的就可以。这里使用的是 ApolloConfigDB 库。</p>\n<figure class=\"highlight properties\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># DataSource</span></span><br><span class=\"line\"><span class=\"attr\">spring.datasource.url</span> = <span class=\"string\">jdbc:mysql://$&#123;serverhost&#125;:3306/ApolloConfigDB?characterEncoding=utf8</span></span><br><span class=\"line\"><span class=\"attr\">spring.datasource.username</span> = <span class=\"string\">$&#123;yourusername&#125;</span></span><br><span class=\"line\"><span class=\"attr\">spring.datasource.password</span> = <span class=\"string\">$&#123;yourpassword&#125;</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"apollo-adminservice-配置文件修改\"><a href=\"#apollo-adminservice-配置文件修改\" class=\"headerlink\" title=\"apollo-adminservice 配置文件修改\"></a>apollo-adminservice 配置文件修改</h4><p>这里同样是修改  config&#x2F;application-github.properties 下面的数据库连接信息。这里也使用的是 ApolloConfigDB 库。配置信息和上面一样。</p>\n<h4 id=\"apollo-portal-配置文件修改\"><a href=\"#apollo-portal-配置文件修改\" class=\"headerlink\" title=\"apollo-portal 配置文件修改\"></a>apollo-portal 配置文件修改</h4><ul>\n<li><p>portal 使用的是 ApolloPortalDB，修改数据库配置信息：</p>\n<figure class=\"highlight properties\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># DataSource</span></span><br><span class=\"line\"><span class=\"attr\">spring.datasource.url</span> = <span class=\"string\">jdbc:mysql://$&#123;serverhost&#125;:3306/ApolloPortalDB?characterEncoding=utf8</span></span><br><span class=\"line\"><span class=\"attr\">spring.datasource.username</span> = <span class=\"string\">$&#123;yourusername&#125;</span></span><br><span class=\"line\"><span class=\"attr\">spring.datasource.password</span> = <span class=\"string\">$&#123;yourpassword&#125;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>修改 meta service 信息，Apollo Portal 需要在不同的环境访问不同的 meta service(apollo-configservice) 地址，所以我们需要在配置中提供这些信息。默认情况下，meta service 和 config service 是部署在同一个 JVM进程，所以 meta service 的地址就是 config service 的地址。配置文件  &#x2F;config&#x2F;apollo-env.properties </p>\n<figure class=\"highlight properties\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># $&#123;serverhost&#125; 是你当前机器的主机地址</span></span><br><span class=\"line\"><span class=\"attr\">local.meta</span>=<span class=\"string\">http://localhost:8080</span></span><br><span class=\"line\"><span class=\"attr\">dev.meta</span>=<span class=\"string\">http://$&#123;serverhost&#125;:8080</span></span><br><span class=\"line\"><span class=\"attr\">fat.meta</span>=<span class=\"string\">http://$&#123;serverhost&#125;:8080</span></span><br><span class=\"line\"><span class=\"attr\">uat.meta</span>=<span class=\"string\">http://$&#123;serverhost&#125;:8080</span></span><br><span class=\"line\"><span class=\"attr\">lpt.meta</span>=<span class=\"string\">http://$&#123;serverhost&#125;:8080</span></span><br><span class=\"line\"><span class=\"attr\">pro.meta</span>=<span class=\"string\">http://$&#123;serverhost&#125;:8080</span></span><br></pre></td></tr></table></figure>\n\n<p>这里是把所有环境配置成一样的了，如果没有不需要这些环境，可以删除掉。</p>\n</li>\n</ul>\n<h3 id=\"工程部署\"><a href=\"#工程部署\" class=\"headerlink\" title=\"工程部署\"></a>工程部署</h3><p>在每一个工程的解压包中，都有一个 scripts 文件夹，这里面是 Apollo 工程的启动脚本。三个工程分别先后启动：apollo-configservice、apollo-adminservice、apollo-portal，就是分别执行这三个工程下面的 &#x2F;scripts&#x2F;startup.sh 脚本即可，关闭执行的是 &#x2F;scripts&#x2F;shutdown.sh 脚本。</p>\n<p>访问：http:&#x2F;&#x2F;${serverhost}:8070&#x2F;</p>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/3a9732602e0fadfce01ae6eb18745cdb.png\" alt=\"image-20190107133404554\"></p>\n<p>可以看到配置中心管控端的界面。</p>\n<h3 id=\"新建工程\"><a href=\"#新建工程\" class=\"headerlink\" title=\"新建工程\"></a>新建工程</h3><ul>\n<li>点击 创建项目，填写一些基本信息，然后提交</li>\n</ul>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/fea185582d5d436eef264869a2d7a924.png\" alt=\"image-20190107133541629\"></p>\n<ul>\n<li><p>新增一个配置项，填写基本信息，然后提交<br><img src=\"https://img-blog.csdnimg.cn/img_convert/63f0347ebe0d5b35cf9b68c97697f488.png\" alt=\"image-20190107133835832\"></p>\n</li>\n<li><p>当前工程界面</p>\n</li>\n</ul>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/895ac443591b2a03ff1d2c247cbd80a2.png\" alt=\"image-20190107133936932\"></p>\n<ul>\n<li>发布配置</li>\n</ul>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/a62e811b45c89324f726f4c59decd4d8.png\" alt=\"image-20190107134958570\"></p>\n<h2 id=\"SpringCloud-工程案例\"><a href=\"#SpringCloud-工程案例\" class=\"headerlink\" title=\"SpringCloud 工程案例\"></a>SpringCloud 工程案例</h2><p>新建 sofa-config-apollo 工程。</p>\n<h3 id=\"依赖\"><a href=\"#依赖\" class=\"headerlink\" title=\"依赖\"></a>依赖</h3><p>引入 apollo 客户端依赖及其他相关依赖：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.cloud<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-cloud-context<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.ctrip.framework.apollo<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>apollo-client<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.0.0<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-web<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"配置文件\"><a href=\"#配置文件\" class=\"headerlink\" title=\"配置文件\"></a>配置文件</h3><figure class=\"highlight properties\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 需要与前面 Apollo 中创建项目的appId保持一致</span></span><br><span class=\"line\"><span class=\"attr\">app.id</span>=<span class=\"string\">sofa-config-apollo</span></span><br><span class=\"line\"><span class=\"comment\"># 设置 apollo meta service 的地址，因为前面meta和config是部署在一起的，所以就是configService的地址</span></span><br><span class=\"line\"><span class=\"attr\">apollo.meta</span>=<span class=\"string\">http://$&#123;serverhost&#125;:8080</span></span><br><span class=\"line\"><span class=\"comment\"># 配置项</span></span><br><span class=\"line\"><span class=\"attr\">sofa.alipay.glmapper.name</span>=<span class=\"string\">glmapper</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"资源类-启动类\"><a href=\"#资源类-启动类\" class=\"headerlink\" title=\"资源类&amp;启动类\"></a>资源类&amp;启动类</h3><h4 id=\"启动类\"><a href=\"#启动类\" class=\"headerlink\" title=\"启动类\"></a>启动类</h4><p>启动类上需要开启对 apollo 的支持，使用 @EnableApolloConfig 注解标注</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@SpringBootApplication</span></span><br><span class=\"line\"><span class=\"meta\">@EnableApolloConfig</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">SofaConfigApolloApplication</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        SpringApplication.run(SofaConfigApolloApplication.class, args);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"资源类\"><a href=\"#资源类\" class=\"headerlink\" title=\"资源类\"></a>资源类</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@RestController</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">ApolloConfigController</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@ApolloConfig</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Config config;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Value(&quot;$&#123;sofa.alipay.glmapper.name&#125;&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String name;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@RequestMapping(&quot;/apollo&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">getConfig</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>注意，我在配置文件中指定的是 sofa.alipay.glmapper.name 值是 glmapper，而在配置中心配置的值是glmapper@leishu。同时这里也把 apollo 自己的这个 Config 配置类也注入进来，稍后看下这的对象的信息。</p>\n<h3 id=\"运行程序-验证\"><a href=\"#运行程序-验证\" class=\"headerlink\" title=\"运行程序&amp;验证\"></a>运行程序&amp;验证</h3><p>启动当前工程之前需要确保 Apollo 的相关服务已经起来了，然后运行当前应用。在浏览器中输入：</p>\n<p><a href=\"http://localhost:8080/config\">http://localhost:8080/config</a> ，结果如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">glmapper@leishu</span><br></pre></td></tr></table></figure>\n\n<p>可以看到这里拿到的是配置中心的配置值，覆盖了我们本地配置文件中的配置。断点看到 config 的信息：</p>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/9f6866f57be419cc9ddb9bdcecf6aa03.png\" alt=\"image-20190107140226085\"></p>\n<p>Config 对象就是当前集群环境下，指定 appId 的所有配置信息的集合。</p>\n<h4 id=\"更改配置-及时刷新\"><a href=\"#更改配置-及时刷新\" class=\"headerlink\" title=\"更改配置&amp;及时刷新\"></a>更改配置&amp;及时刷新</h4><ul>\n<li>更改配置</li>\n</ul>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/76dc4adfe81a22d61ef33fc58cda2581.png\" alt=\"image-20190107142508567\"></p>\n<ul>\n<li>发布配置</li>\n</ul>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/55064f43fc749eeb295c8a04747a9473.png\" alt=\"image-20190107142537478\"></p>\n<ul>\n<li>刷新 <a href=\"http://localhost:8080/apollo\">http://localhost:8080/apollo</a> 地址</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">glmapper@leishu-update</span><br></pre></td></tr></table></figure>\n\n<p>这里没有重启服务，配置动态更新了</p>\n<h4 id=\"ApolloConfigChangeListener-来监听配置变更\"><a href=\"#ApolloConfigChangeListener-来监听配置变更\" class=\"headerlink\" title=\"@ApolloConfigChangeListener 来监听配置变更\"></a>@ApolloConfigChangeListener 来监听配置变更</h4><p>资源类 ApolloConfigController 中增加一个监听方法</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@ApolloConfigChangeListener</span></span><br><span class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title function_\">onChange</span><span class=\"params\">(ConfigChangeEvent changeEvent)</span> &#123;</span><br><span class=\"line\">\tSystem.out.println(<span class=\"string\">&quot;发生变更了...&quot;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>然后重新在配置中心的界面上修改配置值：glmapper@leishu-update -&gt; glmapper@leishu-update-event，然后发布。然后可以在控制台看到日志：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">发生变更了...</span><br><span class=\"line\">2019-01-07 14:36:08.939  INFO 39072 --- [Apollo-Config-1] c.f.a.s.p.AutoUpdateConfigChangeListener : Auto update apollo changed value successfully, new value: glmapper@leishu-update-event, key: sofa.alipay.glmapper.name, beanName: apolloConfigController, field: com.alipay.sofa.cloud.controller.ApolloConfigController.name</span><br></pre></td></tr></table></figure>","text":"Apollo（阿波罗）是携程框架部门研发的开源配置管理中心，能够集中化管理应用不同环境、不同集群的配置，配置修改后能够实时推送到应用端，并且具备规范的权限、流程...","permalink":"/post/springcloud/spring-cloud-config-apollo","photos":[],"count_time":{"symbolsCount":"6.3k","symbolsTime":"6 mins."},"categories":[{"name":"SpringCloud","slug":"SpringCloud","count":14,"path":"api/categories/SpringCloud.json"}],"tags":[{"name":"config","slug":"config","count":6,"path":"api/tags/config.json"},{"name":"apollo","slug":"apollo","count":1,"path":"api/tags/apollo.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%8E%AF%E5%A2%83%E5%87%86%E5%A4%87\"><span class=\"toc-text\">环境准备</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%83%A8%E7%BD%B2-Apollo\"><span class=\"toc-text\">部署 Apollo</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%88%9B%E5%BB%BA%E6%95%B0%E6%8D%AE%E5%BA%93\"><span class=\"toc-text\">创建数据库</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#portalDB-%E9%AA%8C%E8%AF%81\"><span class=\"toc-text\">portalDB 验证</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#configDB-%E9%AA%8C%E8%AF%81\"><span class=\"toc-text\">configDB 验证</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%B7%A5%E7%A8%8B%E9%85%8D%E7%BD%AE%E4%BF%AE%E6%94%B9\"><span class=\"toc-text\">工程配置修改</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#apollo-configservice-%E9%83%A8%E7%BD%B2\"><span class=\"toc-text\">apollo-configservice 部署</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#apollo-adminservice-%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E4%BF%AE%E6%94%B9\"><span class=\"toc-text\">apollo-adminservice 配置文件修改</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#apollo-portal-%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E4%BF%AE%E6%94%B9\"><span class=\"toc-text\">apollo-portal 配置文件修改</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%B7%A5%E7%A8%8B%E9%83%A8%E7%BD%B2\"><span class=\"toc-text\">工程部署</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%96%B0%E5%BB%BA%E5%B7%A5%E7%A8%8B\"><span class=\"toc-text\">新建工程</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#SpringCloud-%E5%B7%A5%E7%A8%8B%E6%A1%88%E4%BE%8B\"><span class=\"toc-text\">SpringCloud 工程案例</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BE%9D%E8%B5%96\"><span class=\"toc-text\">依赖</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6\"><span class=\"toc-text\">配置文件</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%B5%84%E6%BA%90%E7%B1%BB-%E5%90%AF%E5%8A%A8%E7%B1%BB\"><span class=\"toc-text\">资源类&amp;启动类</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%90%AF%E5%8A%A8%E7%B1%BB\"><span class=\"toc-text\">启动类</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%B5%84%E6%BA%90%E7%B1%BB\"><span class=\"toc-text\">资源类</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%BF%90%E8%A1%8C%E7%A8%8B%E5%BA%8F-%E9%AA%8C%E8%AF%81\"><span class=\"toc-text\">运行程序&amp;验证</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%9B%B4%E6%94%B9%E9%85%8D%E7%BD%AE-%E5%8F%8A%E6%97%B6%E5%88%B7%E6%96%B0\"><span class=\"toc-text\">更改配置&amp;及时刷新</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#ApolloConfigChangeListener-%E6%9D%A5%E7%9B%91%E5%90%AC%E9%85%8D%E7%BD%AE%E5%8F%98%E6%9B%B4\"><span class=\"toc-text\">@ApolloConfigChangeListener 来监听配置变更</span></a></li></ol></li></ol></li></ol>","author":{"name":"glmapper","slug":"blog-author","avatar":"https://glmapper-blog.oss-cn-hangzhou.aliyuncs.com/common/favicon.ico","link":"/","description":"开放，开源，分享，共享","socials":{"github":"https://github.com/glmapper","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/2412872703","zhihu":"","csdn":"","juejin":"https://juejin.cn/user/3227821827961806","customs":{"sofastack":{"icon":"https://glmapper-blog.oss-cn-hangzhou.aliyuncs.com/common/sofastack.svg","link":"https://www.sofastack.tech/"}}}},"mapped":true,"hidden":false,"prev_post":{"title":"SpringCloud-Config 配置中心原理","uid":"c052787b71e80e9cd4e175cda11073d3","slug":"springcloud/spring-cloud-config-analysis","date":"2018-12-31T15:11:33.000Z","updated":"2024-07-05T04:09:05.835Z","comments":true,"path":"api/articles/springcloud/spring-cloud-config-analysis.json","keywords":"宋国磊, glmapper, 卫恒, 分享, 开源","cover":[],"text":"本篇可以配合《SpringCloud-配置中心 Config》来看，《SpringCloud-配置中心 Config》中是基于SOFABoot 来集成 Spri...","permalink":"/post/springcloud/spring-cloud-config-analysis","photos":[],"count_time":{"symbolsCount":"15k","symbolsTime":"14 mins."},"categories":[{"name":"SpringCloud","slug":"SpringCloud","count":14,"path":"api/categories/SpringCloud.json"}],"tags":[{"name":"config","slug":"config","count":6,"path":"api/tags/config.json"}],"author":{"name":"glmapper","slug":"blog-author","avatar":"https://glmapper-blog.oss-cn-hangzhou.aliyuncs.com/common/favicon.ico","link":"/","description":"开放，开源，分享，共享","socials":{"github":"https://github.com/glmapper","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/2412872703","zhihu":"","csdn":"","juejin":"https://juejin.cn/user/3227821827961806","customs":{"sofastack":{"icon":"https://glmapper-blog.oss-cn-hangzhou.aliyuncs.com/common/sofastack.svg","link":"https://www.sofastack.tech/"}}}}},"next_post":{"title":"SpringCloud-配置中心 Config Github","uid":"8dde0e1ef80128bea4c1d65d0e4f86c2","slug":"springcloud/spring-cloud-config-github","date":"2018-12-31T15:11:08.000Z","updated":"2024-07-05T04:09:05.836Z","comments":true,"path":"api/articles/springcloud/spring-cloud-config-github.json","keywords":"宋国磊, glmapper, 卫恒, 分享, 开源","cover":null,"text":"在分布式系统中，每一个功能模块都能拆分成一个独立的服务，一次请求的完成，可能会调用很多个服务协调来完成，为了方便服务配置文件统一管理，更易于部署、维护，所以就需...","permalink":"/post/springcloud/spring-cloud-config-github","photos":[],"count_time":{"symbolsCount":"6.9k","symbolsTime":"6 mins."},"categories":[{"name":"SpringCloud","slug":"SpringCloud","count":14,"path":"api/categories/SpringCloud.json"}],"tags":[{"name":"config","slug":"config","count":6,"path":"api/tags/config.json"},{"name":"github","slug":"github","count":1,"path":"api/tags/github.json"}],"author":{"name":"glmapper","slug":"blog-author","avatar":"https://glmapper-blog.oss-cn-hangzhou.aliyuncs.com/common/favicon.ico","link":"/","description":"开放，开源，分享，共享","socials":{"github":"https://github.com/glmapper","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/2412872703","zhihu":"","csdn":"","juejin":"https://juejin.cn/user/3227821827961806","customs":{"sofastack":{"icon":"https://glmapper-blog.oss-cn-hangzhou.aliyuncs.com/common/sofastack.svg","link":"https://www.sofastack.tech/"}}}}}}