{"title":"SpringCloud-配置中心 Config Zookeeper","uid":"f57e9d19e374649b9c60d012c1470985","slug":"springcloud/spring-cloud-config-zookeeper","date":"2018-12-31T15:11:48.000Z","updated":"2024-07-05T04:09:05.836Z","comments":true,"path":"api/articles/springcloud/spring-cloud-config-zookeeper.json","keywords":null,"cover":[],"content":"<p>SpringCloud 除了config自己的client&#x2F;server 这套配置中心之外，还可以集成使用 zookeeper 。本篇将演示如何使用 spring-cloud-confg-zookeeper。</p>\n<span id=\"more\"></span>\n\n<h2 id=\"环境准备\"><a href=\"#环境准备\" class=\"headerlink\" title=\"环境准备\"></a>环境准备</h2><table>\n<thead>\n<tr>\n<th>类别</th>\n<th>值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>JDK<br /></td>\n<td>1.8.0_162<br /></td>\n</tr>\n<tr>\n<td>SOFABoot&#x2F;SpringBoot<br /></td>\n<td><a href=\"https://github.com/alipay/sofa-boot/releases/tag/v3.0.0\">3.0.0</a>&#x2F;2.0.x.RELEASE<br /></td>\n</tr>\n<tr>\n<td>SpringCloud<br /></td>\n<td>Finchley.RC1<br /></td>\n</tr>\n<tr>\n<td>IDE<br /></td>\n<td>IDEA<br /></td>\n</tr>\n</tbody></table>\n<h2 id=\"zk-zkui\"><a href=\"#zk-zkui\" class=\"headerlink\" title=\"zk &amp; zkui\"></a>zk &amp; zkui</h2><p>这里我是把 zk 和 zkui 部署在一台 linux 服务器上的。</p>\n<h3 id=\"zk\"><a href=\"#zk\" class=\"headerlink\" title=\"zk\"></a>zk</h3><p>从 ZooKeeper官网 下载 zookeeper-3.4.13.tar.gz。</p>\n<ul>\n<li><p>解压</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo tar -zxvf zookeeper-3.4.13.tar.gz</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>目录重命名(可选)</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo <span class=\"built_in\">mv</span> zookeeper-3.4.13 zookeeper</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>在 zookeeper 下加一个data目录</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; <span class=\"built_in\">cd</span> zookeeper</span><br><span class=\"line\">&gt; <span class=\"built_in\">mkdir</span> data</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>修改 zoo.cfg</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim zoo.cfg</span><br></pre></td></tr></table></figure>\n<ul>\n<li>修改 dataDir 地址：</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dataDir=/$&#123;your path&#125;/zookeeper/data</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>其他随意，启动 zk</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">zkServer.sh start</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"zkui\"><a href=\"#zkui\" class=\"headerlink\" title=\"zkui\"></a>zkui</h3><p>下载zkui代码，然后本地安装：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git <span class=\"built_in\">clone</span> https://gitee.com/ilanni/zkui.git</span><br><span class=\"line\">$ <span class=\"built_in\">cd</span> zkui/ </span><br><span class=\"line\">$ mvn clean install <span class=\"comment\"># 进行maven打包，执行成功后会生成target文件夹，其中有jar文件。</span></span><br></pre></td></tr></table></figure>\n\n<p>执行结束后在zkui文件夹下生成一个target文件夹。</p>\n<ul>\n<li>将config.cfg文件复制到target文件夹下</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cp</span> config.cfg target/</span><br></pre></td></tr></table></figure>\n\n<p>target文件夹中有两个jar包，我们只需要启动<code>zkui-2.0-SNAPSHOT-jar-with-dependencies.jar</code>就可以了。</p>\n<ul>\n<li>修改 config.cfg文件</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; <span class=\"built_in\">cd</span> target</span><br><span class=\"line\">&gt; vim config.cfg</span><br></pre></td></tr></table></figure>\n\n<p>按需修改serverPort、zkServer、userSet 等。</p>\n<ul>\n<li>启动</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">java -jar zkui-2.0-SNAPSHOT-jar-with-dependencies.jar</span><br><span class=\"line\"><span class=\"comment\"># nohup java -jar zkui-2.0-SNAPSHOT-jar-with-dependencies.jar &amp;   #退出窗口不退出进程</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"配置文件\"><a href=\"#配置文件\" class=\"headerlink\" title=\"配置文件\"></a>配置文件</h2><p>既然是以 zk 作为配置中，那么就需要将测试用的配置数据先在zk上进行初始化。有两种方式（均基于zkui）：</p>\n<ul>\n<li>zkui 界面通过 import 进行导入，这里新建一个 config.txt ，内容如下：</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/config/sofa/sofa-config-zk,dev=server.port=8085</span><br></pre></td></tr></table></figure>\n\n<p>设置当前应用启动的端口，这里的 root 为 &#x2F;config&#x2F;sofa，应用名是 sofa-config-zk，dev是环境 ，server.port&#x3D;8085 是具体的配置kv。</p>\n<ul>\n<li>手动 add node</li>\n</ul>\n<p>这里为了方便，采用import的方式，结果如下：<br><img src=\"https://oscimg.oschina.net/oscnet/afaf490914a21de6eb087ec02582cc7f1d2.jpg\"></p>\n<h2 id=\"新建-sofa-config-zookeeper\"><a href=\"#新建-sofa-config-zookeeper\" class=\"headerlink\" title=\"新建 sofa-config-zookeeper\"></a>新建 sofa-config-zookeeper</h2><p>新建一个 SOFABoot 工程，项目为 sofa-config-zookeeper。</p>\n<h3 id=\"依赖引入\"><a href=\"#依赖引入\" class=\"headerlink\" title=\"依赖引入\"></a>依赖引入</h3><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- spring-cloud-config zk 的依赖，必选--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.cloud<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-cloud-starter-zookeeper-config<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- spring-cloud-config zk 的依赖，为了自动刷新监听等--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-actuator<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-web<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"配置文件-1\"><a href=\"#配置文件-1\" class=\"headerlink\" title=\"配置文件\"></a>配置文件</h3><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">spring<span class=\"punctuation\">:</span></span><br><span class=\"line\">  application<span class=\"punctuation\">:</span></span><br><span class=\"line\">    name<span class=\"punctuation\">:</span> sofa-config-zk</span><br><span class=\"line\">  profiles<span class=\"punctuation\">:</span></span><br><span class=\"line\">    active<span class=\"punctuation\">:</span> dev</span><br><span class=\"line\">  cloud<span class=\"punctuation\">:</span></span><br><span class=\"line\">    zookeeper<span class=\"punctuation\">:</span></span><br><span class=\"line\">      enabled<span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">true</span></span>  # <span class=\"literal\"><span class=\"keyword\">true</span></span><span class=\"punctuation\">:</span>开启zookeeper外部化配置<span class=\"punctuation\">,</span> <span class=\"literal\"><span class=\"keyword\">false</span></span><span class=\"punctuation\">:</span>读取本地配置;</span><br><span class=\"line\">      connect-string<span class=\"punctuation\">:</span> sofa.cloud.alipay.net<span class=\"punctuation\">:</span><span class=\"number\">2181</span></span><br><span class=\"line\">      config<span class=\"punctuation\">:</span></span><br><span class=\"line\">        root<span class=\"punctuation\">:</span> /config/sofa   #指定zookeeper中属性的根目录</span><br><span class=\"line\">        enabled<span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">true</span></span></span><br><span class=\"line\">        watcher<span class=\"punctuation\">:</span></span><br><span class=\"line\">          enabled<span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">true</span></span>    #默认值是<span class=\"literal\"><span class=\"keyword\">true</span></span><span class=\"punctuation\">,</span> 监控配置变更后是否自动更新，需配合Spring Boot Actuators 使用</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"启动类\"><a href=\"#启动类\" class=\"headerlink\" title=\"启动类\"></a>启动类</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@SpringBootApplication</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">SofaConfigZookeeperApplication</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        SpringApplication.run(SofaConfigZookeeperApplication.class,args);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>没有任何特殊，不需要加额外的注解。</p>\n<h3 id=\"资源类\"><a href=\"#资源类\" class=\"headerlink\" title=\"资源类\"></a>资源类</h3><p>其实这里可以完全不用通过rest来打印这个属性值，但是为了方便看，还是写一下：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@RestController</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">ZookeeperConfigController</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Value(&quot;$&#123;server.port&#125;&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String serverPort;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@RequestMapping(&quot;/config&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">getConfig</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> serverPort;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"启动-验证\"><a href=\"#启动-验证\" class=\"headerlink\" title=\"启动&amp;验证\"></a>启动&amp;验证</h3><p>启动应用，如果成功的话，会有如下的日志：State change: CONNECTED</p>\n<h2 id=\"动态刷新\"><a href=\"#动态刷新\" class=\"headerlink\" title=\"动态刷新\"></a>动态刷新</h2><p>这里还是需要依赖 actuator 的 &#x2F;refresh 。上面依赖中已经加入了 actuator的相关依赖，所以只需要在资源类上加一个 <a href=\"#\">@RefreshScope</a> 注解即可。</p>\n<ul>\n<li>在 ZookeeperConfigController 类上加 <a href=\"#\">@RefreshScope</a>  注解，然后重启应用</li>\n<li>通过 zkui 修改 server.port 为 8086</li>\n<li>访问 <a href=\"http://localhost:8065/config\">http://localhost:8085/config</a> ，返回8086</li>\n</ul>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>需要注意，这里因为我们启动时应用时拿到的配置是8085，所以当前服务对外提供服务暴露的端口就是8085 ，当我们修改了zk上的值之后，他会改变 当前运行环境中 Enviroment 的值，但是不会使得服务的端口发生变化，除非重启。</p></blockquote>\n","text":"SpringCloud 除了config自己的client/server 这套配置中心之外，还可以集成使用 zookeeper 。本篇将演示如何使用 sprin...","permalink":"/post/springcloud/spring-cloud-config-zookeeper","photos":[],"count_time":{"symbolsCount":"3.5k","symbolsTime":"3 mins."},"categories":[{"name":"SpringCloud","slug":"SpringCloud","count":14,"path":"api/categories/SpringCloud.json"}],"tags":[{"name":"zookeeper","slug":"zookeeper","count":3,"path":"api/tags/zookeeper.json"},{"name":"config","slug":"config","count":6,"path":"api/tags/config.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%8E%AF%E5%A2%83%E5%87%86%E5%A4%87\"><span class=\"toc-text\">环境准备</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#zk-zkui\"><span class=\"toc-text\">zk &amp; zkui</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#zk\"><span class=\"toc-text\">zk</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#zkui\"><span class=\"toc-text\">zkui</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6\"><span class=\"toc-text\">配置文件</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%96%B0%E5%BB%BA-sofa-config-zookeeper\"><span class=\"toc-text\">新建 sofa-config-zookeeper</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BE%9D%E8%B5%96%E5%BC%95%E5%85%A5\"><span class=\"toc-text\">依赖引入</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6-1\"><span class=\"toc-text\">配置文件</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%90%AF%E5%8A%A8%E7%B1%BB\"><span class=\"toc-text\">启动类</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%B5%84%E6%BA%90%E7%B1%BB\"><span class=\"toc-text\">资源类</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%90%AF%E5%8A%A8-%E9%AA%8C%E8%AF%81\"><span class=\"toc-text\">启动&amp;验证</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%8A%A8%E6%80%81%E5%88%B7%E6%96%B0\"><span class=\"toc-text\">动态刷新</span></a></li></ol>","author":{"name":"glmapper","slug":"blog-author","avatar":"https://glmapper-blog.oss-cn-hangzhou.aliyuncs.com/common/favicon.ico","link":"/","description":"开放，开源，分享，共享","socials":{"github":"https://github.com/glmapper","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/2412872703","zhihu":"","csdn":"","juejin":"https://juejin.cn/user/3227821827961806","customs":{"sofastack":{"icon":"https://glmapper-blog.oss-cn-hangzhou.aliyuncs.com/common/sofastack.svg","link":"https://www.sofastack.tech/"}}}},"mapped":true,"hidden":false,"prev_post":{"title":"SpringCloud-Spring Cloud Context","uid":"9c3e8189292b11295e2641e78c47786a","slug":"springcloud/spring-cloud-context-analysis","date":"2018-12-31T15:12:24.000Z","updated":"2024-07-05T04:09:05.837Z","comments":true,"path":"api/articles/springcloud/spring-cloud-context-analysis.json","keywords":null,"cover":[],"text":" A Spring Cloud application operates by creating a “bootstrap” context, which is...","permalink":"/post/springcloud/spring-cloud-context-analysis","photos":[],"count_time":{"symbolsCount":"6.7k","symbolsTime":"6 mins."},"categories":[{"name":"SpringCloud","slug":"SpringCloud","count":14,"path":"api/categories/SpringCloud.json"}],"tags":[{"name":"bootstrap","slug":"bootstrap","count":1,"path":"api/tags/bootstrap.json"}],"author":{"name":"glmapper","slug":"blog-author","avatar":"https://glmapper-blog.oss-cn-hangzhou.aliyuncs.com/common/favicon.ico","link":"/","description":"开放，开源，分享，共享","socials":{"github":"https://github.com/glmapper","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/2412872703","zhihu":"","csdn":"","juejin":"https://juejin.cn/user/3227821827961806","customs":{"sofastack":{"icon":"https://glmapper-blog.oss-cn-hangzhou.aliyuncs.com/common/sofastack.svg","link":"https://www.sofastack.tech/"}}}}},"next_post":{"title":"SpringCloud-Config 配置中心原理","uid":"c052787b71e80e9cd4e175cda11073d3","slug":"springcloud/spring-cloud-config-analysis","date":"2018-12-31T15:11:33.000Z","updated":"2024-07-05T04:09:05.835Z","comments":true,"path":"api/articles/springcloud/spring-cloud-config-analysis.json","keywords":null,"cover":[],"text":"本篇可以配合《SpringCloud-配置中心 Config》来看，《SpringCloud-配置中心 Config》中是基于SOFABoot 来集成 Spri...","permalink":"/post/springcloud/spring-cloud-config-analysis","photos":[],"count_time":{"symbolsCount":"15k","symbolsTime":"14 mins."},"categories":[{"name":"SpringCloud","slug":"SpringCloud","count":14,"path":"api/categories/SpringCloud.json"}],"tags":[{"name":"config","slug":"config","count":6,"path":"api/tags/config.json"}],"author":{"name":"glmapper","slug":"blog-author","avatar":"https://glmapper-blog.oss-cn-hangzhou.aliyuncs.com/common/favicon.ico","link":"/","description":"开放，开源，分享，共享","socials":{"github":"https://github.com/glmapper","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/2412872703","zhihu":"","csdn":"","juejin":"https://juejin.cn/user/3227821827961806","customs":{"sofastack":{"icon":"https://glmapper-blog.oss-cn-hangzhou.aliyuncs.com/common/sofastack.svg","link":"https://www.sofastack.tech/"}}}}}}